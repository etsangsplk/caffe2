// Code generated by go-bindata.
// sources:
// builtin_models/BVLC-AlexNet.yml
// builtin_models/BVLC-GoogLeNet.yml
// builtin_models/BVLC-Reference-CaffeNet.yml
// builtin_models/BVLC-Reference-RCNN-ILSVRC13.yml
// builtin_models/SqueezeNet_v1.0.yml
// builtin_models/SqueezeNet_v1.1.yml
// DO NOT EDIT!

package caffe2

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data, name string) ([]byte, error) {
	gz, err := gzip.NewReader(strings.NewReader(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _bvlcAlexnetYml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x56\x5d\x6f\xe3\xb6\x12\x7d\xd7\xaf\x18\xc0\x58\x20\x7b\xaf\x25\xd9\xde\x64\xd7\x57\x17\xb8\xb8\x6d\xda\x87\x02\x45\x1e\xb6\x1f\x2f\x45\x61\x8c\xa8\x91\xc5\x5d\x8a\x24\xc8\xa1\x13\xef\xaf\x2f\x48\x4a\x96\x93\x4d\xbb\x79\x70\x24\xce\x99\x0f\x9e\x19\x1e\x4a\xe3\x48\x0d\x7c\xff\xfb\xcf\xf7\xe5\x77\x8a\x9e\x1e\x88\x61\x05\x71\x11\x4c\x0f\x67\x13\x1c\x8c\xa6\x23\x55\xf4\x0e\x47\x7a\x34\xee\x73\x53\x00\x64\xa7\x7b\xec\x7b\xda\xc1\x0a\x2e\x36\xe8\x8d\x03\x1e\x68\xf2\x01\x38\x91\xf3\xd2\xe8\x06\xb6\xd5\xe6\x19\x70\x32\x80\x30\x9a\x1d\x4a\xcd\xc5\x0b\xe8\x0c\x90\xba\x37\x6e\x44\xce\xcf\xe0\x69\x44\xcd\x52\x5c\xec\xd9\x5a\xc4\x38\x28\x35\xb9\x06\x56\x70\x79\xf1\x10\x3c\x75\xc0\x06\x2c\xb9\x88\xcc\x85\x81\x75\xd4\x49\x11\x63\x16\xb0\xfc\xad\x60\x0c\x8a\xa5\x55\x04\x56\x21\x47\xbc\x07\x81\x1a\x5a\x02\x6f\x49\xc8\x5e\x52\x57\x00\xe0\xd8\xbd\xbf\x6d\x92\xe7\xd1\x86\x06\x1c\x4a\xeb\xcc\x27\x12\x5c\x0b\x74\xa3\x2a\x45\x24\xa6\x49\xb0\x52\xd8\x90\x90\xe2\x9b\xc8\x63\x42\x5a\x2b\xde\xdf\x2a\x6a\xbe\xe9\x34\x01\x27\xb7\x7f\x2e\xe5\x1a\xdb\x91\x17\x4e\x5a\x4e\x5c\xff\xaf\x00\xf8\x75\x90\x7e\xe2\x45\x7a\x40\x70\x64\x95\x14\x99\x71\xd3\x2f\xed\x84\xec\xd9\x52\x17\x1b\x11\x97\xe7\x81\xb1\xa1\x9d\x3d\xaa\x02\xe0\x07\xd9\xf7\xe4\x48\x0b\xf2\x0d\x68\xc3\x90\x3a\x2c\xf5\x11\x1e\x25\x0f\xc9\xd3\x91\x92\xc7\x81\xe3\x5a\x87\x8c\x25\x86\xe3\x48\x9a\x53\x88\xff\x16\x00\x52\x4b\x96\xa8\xe4\x97\x88\xd0\x46\x97\x5f\xc8\x19\x68\x25\x7a\xf2\xb1\x9d\x9b\x6a\x0b\x52\x7b\x26\xec\x62\x8d\x5b\xb8\xe9\x4d\xd0\x1d\x68\x12\xe4\x3d\xba\x73\x9e\xc4\x29\xef\x1a\xd0\x2f\x21\xf3\xce\xd8\xc0\x16\x8e\x78\x22\xe8\x15\x32\x28\xe3\xfd\xdb\x2a\xb1\x41\xd0\x06\xdd\x29\xea\x16\x52\x62\xc9\x92\xc9\x65\xd7\x77\xef\x37\xeb\xcd\x66\x03\x5e\xa3\xf5\x83\xe1\x2a\x3b\x91\x67\x38\xa1\x92\x1d\x4e\x83\x35\xcd\x1c\x6a\x41\xd0\x05\x17\xb7\xb2\x30\x11\x2b\x5a\x22\xde\xed\x53\xc4\xc4\xcf\x12\x03\x50\x88\xe0\x50\x9c\x0b\x80\xbb\x0f\xd5\xee\x6e\xff\x06\x50\x77\xa9\x58\xd8\x56\xfb\x77\xff\xb9\xdd\x57\xd7\xfd\x33\x6d\x9c\xfb\xd8\x44\x36\xb6\xdc\x5e\xfc\xa3\xf7\x36\xfb\x62\x01\xc9\x78\xb7\x18\xf7\x9b\x6a\xf7\x06\x4c\xee\xe9\x55\x76\x4f\xbc\x86\xe0\x63\xb9\x9f\x82\xe7\x64\x16\xa4\x99\x1c\x08\x67\x6c\x64\xeb\xe6\xb7\x64\x8e\x16\x3c\x91\xc3\x63\x92\x8d\xed\x26\x01\xfc\x1a\x6e\x6e\xe1\xdf\xb0\x9d\xbc\xde\xc2\xbf\x60\x07\xa3\x74\xce\xb8\x35\xf8\xc1\x04\xd5\x4d\x25\xc7\x53\x05\xad\x64\x18\xe4\x71\x20\x77\xa9\xad\x7a\xfb\x7c\x40\x23\x6d\x89\x43\xea\xa0\x3d\xc3\x8f\x27\xd4\xf0\xcb\x40\x6a\xc0\x91\x1c\xfc\xdf\xcf\x8f\x85\xa3\x65\x04\x57\xb0\xbc\x25\x2d\x40\x1b\xa5\xa1\x86\x47\x6a\xbd\x64\x8a\x8f\xc4\xa2\xaa\xe6\x09\x9f\xb7\x34\xab\x58\x09\x03\xb3\xf5\x4d\x5d\x1f\x25\x0f\xa1\xad\x84\x19\xeb\x28\x99\x75\x3a\x5e\x35\x3b\xa2\x7a\x44\xcf\xe4\xea\xe4\xe3\xeb\xf6\xa4\xc4\x01\x15\x3d\x69\xe2\x4b\x84\xa6\xae\x73\xee\x4a\x4b\xeb\x2b\x21\xf2\x6b\x7d\xbb\xdf\xdd\x96\x72\xc4\x23\x69\xe2\x52\x28\xf4\x5e\xf6\xd3\x81\x2a\xe3\x4c\x94\x1d\x91\x2d\x85\xd1\x27\xa3\x42\x5c\x45\x55\x6a\x0a\x2e\xfd\xe3\x28\xa8\xbe\xb2\x5d\x5f\xac\x40\x49\x41\xda\xd3\xb3\x83\x5b\x4c\x8b\x0d\x04\xed\xc8\xb3\x93\x82\xa9\x2b\x56\x20\xb5\x0d\x9c\x28\x59\xb0\x79\x2d\xca\xcf\x0a\x7a\xe9\x3c\x67\x14\xf0\xd9\xd2\x57\xf2\x5e\xa6\xe5\x06\x52\xed\x45\xd6\xd0\x2b\x7d\x99\xab\xb8\x8a\x93\x40\xcf\x24\x28\x9d\xad\x94\x62\x89\x62\x31\x5e\x14\x4c\x2e\x75\x2f\xa5\x5e\x96\x26\xc9\xee\xe4\x48\x3a\x5e\x01\xbe\x81\x3f\xb6\x6b\x78\xb7\x86\xdd\xee\x43\xfa\xf9\x73\x82\x8c\x84\xba\x79\xad\x77\x1f\x4d\x4b\x8e\x37\xfb\xed\xae\x8e\xcc\x7a\x54\x1d\x71\xed\xf0\x71\xee\x62\xea\x6b\xe9\x51\xd5\x51\x9e\x6a\xa9\xfc\xc9\x89\xed\xae\x9e\x9b\x74\x88\xa1\xab\x56\x6a\x74\x67\xeb\x0c\x9b\xc2\x04\xb6\x81\x33\x6f\x71\x4b\xa9\xe8\x69\xff\xd9\x16\x0f\x5e\x62\xab\x27\xe4\xe0\x28\x41\xf1\x35\xbe\x32\x7e\xd9\x72\xf1\x0a\x65\x13\x46\x61\x9b\x3a\x71\xc5\xd8\xd4\x87\xd7\x58\x9b\x32\xfb\x43\x70\xaa\x99\x47\x32\xee\xb0\xea\x46\x25\xaa\x51\xd5\x63\x1c\xd8\x79\x88\xe7\xdd\xd6\xfe\xac\x3d\x71\xc5\x4f\x5c\x24\x53\xec\xca\x7c\x23\xce\x47\xf3\xe8\xd0\x0e\x49\x62\x1e\x29\x6a\xbb\x07\x47\xde\x04\x27\x28\xe6\x6e\xd1\xd3\x92\xf5\x45\x3b\x1c\xca\xf2\xf9\xb5\x35\x15\xf0\xb2\x23\xbb\x97\xe7\x2a\x25\x3d\x58\xe4\xa1\x99\x2f\xf5\x83\x26\xae\x6c\x5b\xc0\x5c\xc7\x64\x8e\xfa\xbf\xd8\xa4\x3f\xa0\x13\x83\x3c\xc5\x7e\xa0\xf2\x04\x2b\x90\x7d\x96\x3c\x1e\x28\x6b\xe1\x5c\x74\xbe\x17\xe3\x03\x1b\x40\x0d\x93\xe7\xf5\xb7\xc3\xd5\x47\x44\xf4\x5c\xea\xba\x66\x24\x2f\xa4\xf0\x1d\x69\xc3\x14\x9f\xff\x26\x4a\x2f\x15\xa5\xef\x2c\x3f\x4f\xc5\xd7\x04\x47\x69\x98\xae\xe2\xb9\x24\x64\x76\xb2\x0d\x9c\x75\x8f\x9e\xd8\x21\x4c\x12\x01\x8b\xad\x00\xf8\x2c\x75\xd7\xc0\xfd\xc3\xc3\x54\x71\x7c\x8f\x99\xb2\xac\x5c\x7c\x6e\xee\x1f\x1e\xd6\xf0\x31\xfe\x54\x55\x52\xe3\xf9\x0a\x3b\xc4\xb9\xf1\xc4\x0d\xfc\x14\xc7\x24\x7f\x38\x4e\x6b\x97\xcf\xae\xeb\x5b\xb8\x00\x18\x51\xcb\x9e\x3c\x1f\x30\xf0\x60\x5c\x03\xd8\x76\x41\x75\xc5\x5f\x01\x00\x00\xff\xff\x46\xa0\x1e\x49\x85\x0a\x00\x00"

func bvlcAlexnetYmlBytes() ([]byte, error) {
	return bindataRead(
		_bvlcAlexnetYml,
		"BVLC-AlexNet.yml",
	)
}

func bvlcAlexnetYml() (*asset, error) {
	bytes, err := bvlcAlexnetYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "BVLC-AlexNet.yml", size: 2693, mode: os.FileMode(420), modTime: time.Unix(1502676346, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _bvlcGooglenetYml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x56\x4d\x8f\xdb\x38\x0f\xbe\xfb\x57\x10\x13\x14\x98\x79\xdf\xc4\x8e\x33\xe9\x34\x75\x81\x05\xb6\x53\xec\x62\xb1\xc5\x1c\xf6\xf3\xb0\x28\x02\x5a\xa6\x6d\x75\x64\x49\x2b\xd1\xc9\xa4\xbf\x7e\x21\xd9\xce\xc7\x74\x8a\xe6\x10\x58\xe2\x43\xf2\x21\x45\x91\xd2\xd8\x51\x01\xef\xff\xfa\x78\xbf\xf8\xd9\x98\xe6\x23\x3d\x10\xc3\x0c\xc2\x36\x98\x1a\x0e\xa6\x77\xd0\x99\x8a\x54\x52\x3b\xec\x68\x6f\xdc\x63\x91\x00\x0c\x6a\xf7\x58\xd7\xb4\x82\x19\x1c\x65\x50\x1b\x07\xdc\xd2\xa8\x03\xb0\x23\xe7\xa5\xd1\x05\x2c\xd3\x4d\x9a\x5f\x40\x47\x11\x08\xa3\xd9\xa1\xd4\x9c\x1c\xc1\x79\xba\x84\xd9\x11\x20\x75\x6d\x5c\x87\x3c\x7c\x83\xa7\x0e\x35\x4b\x71\x94\x0f\xd2\x24\xd8\x41\xa9\xc9\x15\x30\x83\xe3\xc2\x43\xef\xa9\x02\x36\x60\xc9\x05\xe4\x40\x0d\xac\xa3\x4a\x8a\x60\x33\x81\xd3\x6f\x06\x5d\xaf\x58\x5a\x45\x60\x15\x72\xc0\x7b\x10\xa8\xa1\x24\xf0\x96\x84\xac\x25\x55\x09\x00\x76\xd5\xdd\xba\x88\x9a\x8d\xed\x0b\x70\x28\xad\x33\x9f\x49\x70\x26\xd0\x75\x6a\x21\x62\x6a\x8a\x88\x5b\x08\xdb\x47\xa8\xf8\x3e\xb4\x89\x50\x6b\xc5\xdd\x5a\x51\xf1\x7d\xad\x11\x39\xea\x7d\x87\xcd\x39\xb8\x22\x2f\x9c\xb4\x1c\xf3\xfd\xc3\xf3\x25\xc0\x1f\xad\xf4\x63\xaa\xa4\x07\x04\x47\x56\x49\x31\x1c\x82\xa9\x4f\x67\x0c\x83\x66\x49\x55\x38\x9b\xb0\x1d\xea\x48\xc5\x3a\xb2\x7d\x39\xe9\xa4\xf0\x37\xc1\xde\xf4\xaa\x02\x25\x1f\x29\x9c\x07\xb7\xa8\x1f\xe1\xbe\x75\xd2\xb3\x44\x0d\xbf\x7f\xa1\x86\xaa\x43\x2c\x21\x54\x0a\x02\x81\x96\x94\x9d\xec\x3e\x63\x70\x72\x13\x79\xa4\x09\xc0\x07\x59\xd7\xe4\x48\x0b\xf2\xb1\x48\x0d\x43\xac\x2c\xa9\x1b\xd8\x4b\x6e\x47\x33\x4a\x36\x2d\x87\xbd\x0a\x19\x17\xd8\x37\x1d\x69\x8e\x76\xdf\x7d\x53\xcb\x0b\x54\x04\x81\x59\x28\x03\x5e\xb8\x80\x7f\xd9\x40\xef\xc9\xc3\xd5\x13\xee\x24\xb9\xab\x10\xa8\xd4\x92\x25\x2a\xf9\x85\xa2\xa9\x3d\x05\xff\x1e\xa4\xf6\x4c\x58\x85\x58\xae\x1a\xec\xbd\x97\xa8\xaf\x82\x81\x7f\x7b\x29\x1e\xb7\xde\xa8\x1d\xb9\xd4\x3a\xc3\x86\x9f\x78\x30\x8b\x50\x8d\x31\x32\x28\x42\x17\x49\x3a\x64\x82\x8a\x04\x1e\xc0\x1a\x25\xc5\x21\xa6\x36\xfa\x32\x4e\x36\x52\xa3\x82\x67\xd6\xe6\x01\xc2\x21\xcd\x66\x1f\xac\x76\xbd\x68\xa1\x46\xcf\xe4\x4e\xc1\x5f\xdf\x2d\x81\xac\x11\xad\x87\x9d\x87\xd5\xeb\x69\x75\xf3\x2e\xd6\x07\x41\xd9\xeb\x4a\x51\x75\x2a\x93\xe0\x52\x32\xb9\xe1\x90\x56\xf3\xf5\x72\x39\x5f\x2e\x97\xe0\x35\x5a\xdf\x1a\x3e\x33\x79\x03\xbd\x0f\x4e\x5e\x0c\x76\xaa\xbf\x4b\x07\xa6\x0c\x57\x3a\xd0\x65\x63\x17\x39\xa0\x10\xbd\x43\x71\x80\xbb\x4d\xfa\xe6\x15\x5c\xdf\xe6\xe9\xed\x2b\x20\xe7\x8c\xbb\x01\xd4\xd5\x08\x7c\x7d\x02\x6e\x36\xe9\xdb\x57\x70\x9d\xe7\x69\x7e\x04\x9a\x21\x53\x3b\x54\xb2\x1a\x78\x7b\xe2\xf9\xc8\xee\x73\xef\x39\x8a\x05\xe9\x90\x1b\xe1\x8c\x0d\x95\x76\xfd\x67\x14\x07\x09\xee\xc8\x61\x13\xbb\x65\xbe\x8c\x00\x3f\x87\xeb\x35\xfc\x1f\xf2\x51\xeb\x06\xfe\x07\x2b\xe8\x64\xf0\x37\x07\xdf\xc6\x5b\x30\x04\x03\x08\xa5\x64\x68\x65\xd3\x92\x3b\xf2\x4c\x6f\x42\x02\x64\x27\x75\xe3\xe3\x75\x28\x77\x4a\x6c\x9b\x58\xf0\x9a\x78\xa8\x4a\xd1\x7f\x78\x78\x18\x69\x96\xc8\xa2\xdd\x7a\xf9\x85\x8a\x7c\xb5\x09\x21\x21\xfc\xba\x5e\x8a\x70\x0b\x7e\x1c\xf9\xfd\x64\xdc\x1e\x5d\x05\x16\xbd\x2f\xe0\xf5\xdd\x2a\xdd\xac\x73\xe8\x7c\x7a\x86\x79\x8f\xe2\xf1\x0c\x94\xe7\xab\xdb\x74\xb3\x7e\x06\x1a\x0d\x2d\x26\x70\x01\xf9\xdd\x66\x93\x6e\x46\xd8\x65\xe3\x10\x46\xef\xc8\x31\x55\x50\x3b\xd3\xc5\x84\xc5\xa9\x31\x5d\x5a\x47\xc7\x1b\x0b\x33\x38\xad\x62\xc3\x46\x1b\xfa\x77\x06\x7b\x2a\xbd\x64\x0a\x9f\xc4\x22\x4d\xa7\x9e\x33\x1d\xc1\x34\x6c\x16\xd0\x32\x5b\x5f\x64\x19\xba\x27\xb9\x4b\x8d\x6b\x32\x5b\xd5\x59\xbe\x5e\xbe\x4d\xd7\x9b\xf5\x2a\xb5\x55\x7d\x81\x6b\x24\xb7\x7d\x99\x0a\xd3\x65\x61\x06\x66\xb1\x51\x66\xec\x88\xb2\x2e\xde\x86\x2c\xda\xf6\xd9\xe5\x09\x24\x33\x50\x52\x90\xf6\x74\xd1\x0b\x93\x71\xb3\x80\x5e\x3b\xf2\xec\xa4\x60\xaa\x92\x19\x48\x6d\x7b\xf6\x43\xd3\x9b\xb0\xc3\x5e\x38\xa1\x19\xd4\xd2\x79\x1e\x50\xc0\x07\x4b\x5f\x8d\xd1\x45\xdc\x2e\x40\x76\xd8\x50\x32\x4c\xaa\xb3\x96\x3d\xb1\x38\xb3\x13\x41\x17\x5d\x3d\x5e\xce\xe8\xe2\x64\xc5\x62\x18\xc7\x4c\x2e\xa6\x3f\xba\x3e\x6d\x8d\x83\xb1\x92\x1d\xe9\x30\x68\x7d\x01\xff\xe4\x73\xb8\x9d\xc3\x6a\xf5\x26\xfe\x7d\x1a\x21\x1d\xa1\x0e\xc2\xd5\x66\x0e\xd3\xdf\xa7\xc4\xf4\x6c\x7b\x1e\x22\x0c\xce\xa3\xf9\x91\xe9\x20\x4b\x60\x8c\xab\x26\xe4\xde\x51\x84\xe2\x4b\x91\x0d\xf8\x13\xb9\xe4\x85\xe0\x46\x8c\xc2\x32\xe6\xec\x2c\xb6\x31\x63\x2f\xc5\x37\x7a\xf6\xdb\xde\xa9\x22\xd6\x45\x91\x65\xa1\xaf\xa7\x55\xa7\x44\xda\xa9\xac\x7b\xd2\xc4\x53\x1d\xc4\xd4\x85\xb5\x3f\x68\x4f\x9c\x86\x66\x15\x45\x21\x7f\xd3\x0b\x61\xaa\xff\xc6\xa1\x6d\x63\x27\x9a\x7a\xbe\x23\x6f\x7a\x27\x28\xf8\x2e\xd1\xd3\xc9\xeb\xb3\x6a\x74\x28\x17\x97\x33\x7c\x24\xe0\x70\x3f\x95\xe6\x30\xd5\x9f\x97\x26\x0c\x6e\xb7\x16\xb9\x2d\xa6\x67\xce\x56\x13\xa7\xb6\x4c\x60\x62\x32\x8a\xc3\x68\x3a\xc9\xa4\xdf\xa2\x13\xad\xdc\x85\x13\x41\xe5\x09\x66\x20\xeb\xa1\x1f\x72\x4b\x43\xa3\x9c\x68\x0f\xcf\x82\xf0\xc1\x06\x50\xc3\xa8\x79\xfe\x9a\x3a\x7b\x56\x05\xcd\x13\xaf\xf3\x9c\x0c\x1b\xd1\x7c\x45\xda\x70\x1c\x92\xdf\xb0\x52\x4b\x45\xf1\xed\xe9\xa7\xba\xf8\x3a\xc5\xa1\x39\x8e\x2f\x86\x89\x12\x32\x3b\x59\xf6\x3c\x34\x19\x7a\x62\x87\xa0\x89\xe3\x2b\xf4\x24\x4b\x00\x1e\xa5\xae\x0a\xb8\x7f\x78\x18\x19\x87\x75\xf0\xa4\xa9\x77\xa8\x8e\x3a\xd7\xf7\x0f\x0f\x73\xf8\x2d\xfc\xa5\x69\x6c\xd6\xd3\xcc\xdc\x86\xca\xf1\xc4\x05\xfc\x12\x0a\x65\x78\x4c\x8f\x7b\xc7\x87\x68\xbc\xdc\xa3\x42\x02\xd0\xa1\x96\x35\x79\xde\x62\xcf\xad\x71\x05\x60\x59\xf5\xaa\x4a\xfe\x0b\x00\x00\xff\xff\xba\xee\x57\xe9\x9b\x0b\x00\x00"

func bvlcGooglenetYmlBytes() ([]byte, error) {
	return bindataRead(
		_bvlcGooglenetYml,
		"BVLC-GoogLeNet.yml",
	)
}

func bvlcGooglenetYml() (*asset, error) {
	bytes, err := bvlcGooglenetYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "BVLC-GoogLeNet.yml", size: 2971, mode: os.FileMode(420), modTime: time.Unix(1502676330, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _bvlcReferenceCaffenetYml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x56\x5f\x6f\xdb\x38\x12\x7f\xd7\xa7\x18\xc0\x38\x20\xbd\x8b\x24\xdb\x49\xdb\x40\x07\x1c\x6e\x37\x7d\xe9\x62\x91\x87\xa2\xbb\x2f\x8b\x85\x41\x51\x23\x8b\x2d\x45\x12\xe4\xd0\x8e\xf7\xd3\x2f\x86\x94\x2c\x3b\xcd\xb6\x79\x70\x44\xce\x6f\xfe\x0f\x7f\xa4\x11\x23\x36\xf0\xf3\xef\xbf\x3e\x96\x9f\xb0\x47\x8f\x46\x62\xf9\x28\xfa\x1e\x9f\x90\x60\x05\x2c\x07\xdb\xc3\xc9\x46\x0f\xa3\xed\x50\x17\xbd\x17\x23\x1e\xad\xff\xda\x14\x00\x59\x3f\x29\xc0\x0a\xce\x22\xe8\xad\x07\x1a\x70\x52\x01\x38\xa0\x0f\xca\x9a\x06\x36\xd5\xfa\x0a\x38\x09\x40\x5a\x43\x5e\x28\x43\xc5\x0b\xe8\x0c\x50\xa6\xb7\x7e\x14\x94\xbf\x21\xe0\x28\x0c\x29\x79\x96\x67\x69\xc1\x76\x84\x32\xe8\x1b\x58\xc1\x79\x11\x20\x06\xec\x80\x2c\x38\xf4\x8c\xcc\x81\x81\xf3\xd8\x29\xc9\x36\x0b\x58\xfe\x56\x30\x46\x4d\xca\x69\x04\xa7\x05\x31\x3e\x80\x14\x06\x5a\x84\xe0\x50\xaa\x5e\x61\x57\x00\x88\xb1\x7b\x77\xdf\x24\xcd\xbd\x8b\x0d\x78\xa1\x9c\xb7\x5f\x50\x52\x2d\x85\x1f\x75\x29\xb9\x2e\x4d\x82\x95\xd2\xc5\x84\x94\x3f\x44\xee\x13\xd2\x39\xf9\xee\x5e\x63\xf3\x43\xa5\x09\x38\xa9\x7d\x3f\x94\x4b\x6c\x87\x41\x7a\xe5\x28\xd5\xfa\x7f\x05\xc0\xe7\x41\x85\xa9\x2e\x2a\xa4\xee\x79\x0c\x51\x13\xf7\xbf\xb7\x5a\xdb\xa3\x32\xfb\xb4\x9f\xfb\xfd\x71\x14\xfb\x34\x26\x59\x27\xb5\x8f\x11\xca\x04\xf2\x31\x55\x35\x54\xf0\x91\xd8\x9a\x00\x8f\x4e\x2b\x99\xfb\x67\xfb\x65\x38\x20\xc7\xd1\x62\xc7\x6d\xe5\xed\x9f\x34\x3e\xb3\x59\x17\xdb\xb3\xc6\x51\xd1\x00\xc1\x8e\x08\x9d\xea\xa7\x39\x0d\x55\x01\xf0\x61\x59\xa6\x79\xb4\xb4\x04\x92\x94\x72\x1e\x5a\xed\x07\xe2\xbd\x4e\x90\x28\x45\xdc\x8f\x68\x28\x99\xfe\x6f\x01\x09\x63\x7d\x87\x9e\x23\x73\xd6\x6a\x46\x0a\xd3\x81\xe1\xa1\xd2\xea\xaf\x1c\x84\x16\x27\x1e\x25\x15\x20\x1c\x15\xc9\x01\x3b\xb8\x51\x06\xe6\xe3\x72\x7b\x56\x55\x01\x3a\x6b\x10\x5a\xec\xad\xc7\x6b\x2b\x6f\xaa\x6f\x4a\x1d\x8c\x70\x61\xb0\xa9\xd0\x8a\xd0\x67\x6f\x77\x9b\xf5\xed\x7a\xbd\xae\xe0\xf3\xc0\x96\x02\xc1\x41\x68\xd5\x65\xe1\x34\xc6\xc2\x48\x84\x2e\xfa\xd4\x98\x73\xda\x22\x5c\x99\xb9\x63\x33\xb9\x18\x17\x16\x84\x94\xd1\x0b\x79\x82\xb7\xef\xab\xfb\xcd\xf6\x5f\x29\x5f\x6d\x43\x80\x4d\xf5\xb0\xbd\xdb\x3e\xbc\x88\xd3\xb6\x7c\x94\xb8\x93\x64\x5d\xb9\xb9\xd6\xcf\xda\x59\xf4\x76\x11\x3d\xac\x59\x64\x73\x5b\x2f\x7c\x07\x2e\x56\x0c\x1c\xec\x97\x18\x28\x89\x25\x1a\x42\x0f\xd2\x5b\xc7\x9e\x6f\x7e\x0b\xf3\xb4\x89\x03\x7a\xb1\x4f\x34\xb4\x59\x27\x40\xb8\x85\x9b\x7b\xf8\x0f\x6c\x26\xad\x37\xf0\x6f\xd8\xc2\xa8\xbc\xb7\xfe\x16\xc2\x60\xa3\xee\xa6\x80\x41\x40\xab\x08\x06\xb5\x1f\xd0\x2f\x91\x05\x52\x5a\x57\x6f\xae\x53\xe4\xc2\xa5\x2a\x62\x07\xed\x09\x7e\xc1\xbe\x87\x0f\xd6\x88\x21\x22\xfc\xff\x0b\xf6\x7d\x97\x17\x85\xc7\xf3\xcc\xc1\x0a\x96\x55\x22\x18\xe1\x78\x48\x6a\x38\x62\x1b\x14\x21\x7f\x22\xc9\xaa\x9a\x07\x7d\x4e\x6b\xa6\xc6\x12\x06\x22\x17\x9a\xba\xde\x2b\x1a\x62\x5b\x49\x3b\xd6\xcc\xc8\x75\x3a\xb3\x35\x79\xc4\x7a\x14\x81\xd0\xd7\x49\x27\xd4\xed\x41\xcb\xdd\xd9\xed\x2e\xe1\x0c\xd2\xd9\x58\x53\xd7\x39\x8c\xca\x28\x17\x2a\x29\xf3\xb2\xbe\x7f\xd8\xde\x97\x8a\x8f\xad\x41\x2a\xa5\x16\x21\xa8\x7e\x3a\x62\x25\x0f\x48\xd9\x21\xba\x52\x5a\x73\xb0\x3a\xf2\xae\xd0\xa5\xc1\xe8\xd3\x3f\x62\xc2\x0e\x95\xeb\xfa\x62\x05\x5a\x49\x34\x01\xaf\x8e\x72\x31\x6d\x36\x10\x8d\xc7\x40\x5e\x49\xc2\xae\x58\x81\x32\x2e\x52\xaa\xce\x82\xcd\x7b\x7c\x66\x57\xd0\x2b\x1f\x28\xa3\x80\x4e\x0e\xbf\xb9\x3e\xca\xb4\xdd\x40\x8a\xbd\xc8\x1c\x7d\xc1\x5f\x73\x14\x17\x76\x12\xe8\x8a\xe2\x18\x90\x5d\x2c\x56\x9c\xe0\x8b\x88\xd0\xa7\x46\x26\xd7\xcb\xd6\x74\x25\x74\x6a\x44\xc3\x57\x4c\x68\xe0\x8f\xcd\x2d\xdc\xdd\xc2\x76\xfb\x3e\xfd\xfc\x39\x41\x46\x14\xa6\x79\xad\x8d\x9f\x6c\x8b\x9e\xd6\x0f\x9b\x6d\xcd\x95\x0d\x42\x77\x48\xb5\x17\xc7\xb9\xa1\xa9\x75\x65\x10\xba\x66\x62\xaa\x95\x0e\x07\x2f\x37\xdb\x7a\x6e\xd2\x8e\x4d\x57\xad\x32\xc2\x9f\x9c\xb7\x64\x0b\x1b\xc9\x45\xca\x75\xe3\x94\x52\xd0\x53\xfe\x59\xc6\x84\x96\xaa\xd5\xa3\xa0\xe8\x31\x41\xc5\x6b\xf5\xca\xf8\x25\xe5\xe2\x95\x92\x4d\x18\x2d\xda\xd4\x89\x8b\x8a\x4d\x7d\x78\xad\x6a\x93\xe7\xb0\x8b\x5e\x37\xf3\x48\x72\x86\x55\x37\x6a\x59\x8d\xba\x1e\x9f\x0d\xd2\x3c\xcf\x73\xb6\x75\x38\x99\x80\x54\xd1\x33\x15\x49\xc4\x5d\x99\x6f\xdc\xf9\x94\xee\xbd\x70\x43\xe2\x9b\x23\x32\xab\x07\xbe\xa6\x6c\xf4\x12\xd9\x77\x2b\x02\x2e\x5e\x5f\xb4\xc3\x0b\x55\x5e\x5f\x8b\x53\x00\x2f\x3b\xb2\xfd\xce\x11\x4b\xfe\x77\x4e\xd0\xd0\xcc\xef\x87\x9d\x41\xaa\x5c\x5b\xc0\x1c\xd2\x24\x56\x46\x9d\x65\x05\x80\x0a\x3b\xe1\xe5\xa0\x0e\xdc\x1b\xa1\x03\x3f\x99\x54\x9f\xd9\x90\x06\xcc\x34\x39\x27\x90\x6f\x4d\xfe\x20\x0b\xc2\xc0\xa4\x79\xf9\x4e\xb9\x78\xb0\xb0\xe6\x12\xd8\x65\x75\xf2\x46\x32\xdf\xa1\xb1\x84\xfc\xfd\x0f\x56\x7a\xa5\x31\x3d\xe9\xc2\x3c\x21\xdf\x16\x9b\x69\x62\xba\xa8\xe7\x90\x04\x91\x57\x6d\xa4\x4c\x87\xf8\x4c\x5e\xc0\x44\x17\xb0\xc8\x0a\x80\xaf\xca\x74\x0d\x3c\x3e\x3d\x4d\x11\xf3\x9a\x3d\x65\x8a\x39\xeb\xdc\x3c\x3e\x3d\xdd\xc2\x27\xfe\xa9\xaa\x44\xd2\xf3\xdd\xb6\xe3\x19\x0a\x48\xcd\xf2\xf8\x58\xc1\xb4\x77\x7e\xe2\x25\xf2\x98\x14\x0a\x80\x51\x18\xd5\x63\xa0\x9d\x88\x34\x58\xdf\x80\x68\xbb\xa8\xbb\xe2\xef\x00\x00\x00\xff\xff\xf1\x13\xe5\xc5\xfb\x0a\x00\x00"

func bvlcReferenceCaffenetYmlBytes() ([]byte, error) {
	return bindataRead(
		_bvlcReferenceCaffenetYml,
		"BVLC-Reference-CaffeNet.yml",
	)
}

func bvlcReferenceCaffenetYml() (*asset, error) {
	bytes, err := bvlcReferenceCaffenetYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "BVLC-Reference-CaffeNet.yml", size: 2811, mode: os.FileMode(420), modTime: time.Unix(1502676394, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _bvlcReferenceRcnnIlsvrc13Yml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x56\x4f\x8f\xdb\xb6\x13\xbd\xeb\x53\x0c\xe0\xcb\xef\x07\xac\xa4\x7a\x37\x4d\x01\x1d\x8a\x22\x0b\xb4\x08\x90\xfa\xe0\x14\x7b\x29\x0a\x63\x44\x8d\x2c\x66\x25\x92\x18\x8e\xec\xf5\xb7\x2f\x86\x92\x6c\x6d\xb2\x69\x7c\x30\x28\xce\x9b\xe1\xe3\x9b\x3f\x92\xc3\x81\x2a\xf8\xf0\xf4\xe9\x31\xdf\x53\x4b\x4c\xce\x50\xbe\x7f\xdc\xed\xf2\x8f\x9f\x3e\x3f\xed\x1f\xb7\x0f\xb0\x01\x05\x81\x6f\xe1\xe2\x47\x86\xc1\x37\xd4\x67\x2d\xe3\x40\x67\xcf\xcf\x55\x06\x30\x05\x79\xc4\xb6\x25\xd8\xc0\xd5\x04\xad\x67\x90\x8e\x66\x17\x80\x13\x71\xb4\xde\x55\xb0\x2d\x7e\x7a\x05\x9c\x0d\x60\xbc\x13\x46\xeb\x24\xfb\x0a\xba\x00\xac\x6b\x3d\x0f\x28\xd3\x1a\x22\x0d\xe8\xc4\x9a\xab\x7d\xb2\x66\x1a\x07\xad\x23\xae\x60\x03\xd7\x87\x08\x63\xa4\x06\xc4\x43\x20\x56\xe4\x44\x0c\x02\x53\x63\x8d\xc6\xcc\xe0\xf6\xdb\xc0\x30\xf6\x62\x43\x4f\x10\x7a\x14\xc5\x47\x30\xe8\xa0\x26\x88\x81\x8c\x6d\x2d\x35\x19\x00\x0e\xcd\xfb\x77\x55\xf2\x3c\x86\xb1\x02\x46\x1b\xd8\x7f\x21\x23\xa5\x41\x1e\xfa\xdc\xa8\x2e\x55\x82\xe5\x26\x8c\x09\x69\x7e\x88\x3c\x26\x64\x08\xe6\xfd\xbb\x9e\xaa\x1f\x3a\xcd\xc0\xd9\xed\xbf\xa9\xac\xb1\x0d\x45\xc3\x36\x48\xd2\xfa\xd7\x0c\xe0\xaf\x8e\x20\x8c\x4c\x73\x3a\xad\x8b\xa2\x12\x4f\x92\xfb\x36\xe5\x73\x9f\x3f\xee\x76\xb3\x78\x9a\xe3\x6b\xa9\x34\x24\x94\x84\x2c\x52\x24\x1b\x67\xd0\x19\x23\x0c\xd8\x10\xd4\x17\x10\x46\x17\x43\xaf\x41\xdd\x71\x15\xee\xf3\xd3\x9f\x60\x7a\x8c\x51\x85\xe5\x08\xd6\x89\x07\x84\xd6\xe4\x6c\x9c\xbb\x9a\xcc\xc4\xa4\xc7\x0b\xf1\x1d\x04\xf6\x27\xdb\x50\x03\x1d\x31\x01\x46\x40\x25\xd9\xe6\xd2\x51\x1e\x3b\xea\xdb\xf9\x1a\x13\x31\xcf\x89\x17\x5f\xd2\xb1\x57\xb2\x40\x2f\x38\x68\x9e\xc5\x43\x24\x02\x2b\x5a\x5b\x78\xbd\xc8\xae\xf8\x50\xc0\xef\x9e\x81\x29\x12\xb2\xe9\x54\xa0\xe0\x23\xc5\x3b\x18\xf0\x99\xb4\xac\x16\x69\x7c\xdb\x5a\x63\xb1\x9f\x2f\x15\xd0\x3c\xe3\x91\x00\x5d\x03\xce\x0b\x88\x6a\x32\x1f\xf7\x86\x46\xa9\xf8\xa9\x51\x99\xf6\x3e\x46\xf8\xc3\x72\xec\xac\x79\x86\xdf\xb8\x3e\xce\xeb\x8c\x97\x3e\x8d\x5a\xdd\xb7\xa7\x54\xd8\x18\x54\xbb\x12\xce\x54\x47\x2b\xa4\x4b\x12\x53\x14\x30\x25\xba\x5e\x34\x5f\x5a\x32\x87\x4e\x24\xc4\xaa\x2c\x8f\x56\xba\xb1\x2e\x8c\x1f\x4a\x1d\x07\x65\xaa\x95\x52\x98\xa8\x1c\x30\x0a\x71\x99\x7c\x62\x59\x9f\x7a\x73\xb8\x1e\x7b\xd0\xec\x1c\x6c\x1f\x4f\x6c\xb6\x0f\xaf\x22\x22\xbf\xd8\x53\xe1\xf9\x58\x62\x1d\xcb\xed\xc3\x76\x5b\xdc\xff\x7c\xff\xee\x8a\xa9\xca\xd2\xd5\x27\x4b\x67\xe2\xe2\xcb\x18\x2e\x42\x9c\xd0\x13\x93\x35\x8b\xba\xf7\xf5\xc2\x62\x56\x2f\x96\xb7\x62\xb3\xe1\xe2\xea\x6c\x03\xbd\x35\xe4\x6e\xb9\x98\xee\x38\x6f\x56\x30\x3a\xa6\x28\x6c\x8d\x50\x93\x6d\xc0\xba\x30\x4a\x12\xed\x86\x9d\xf6\xb4\xdb\x36\xd0\x5a\x8e\x32\xa1\x40\x2e\x81\xbe\x99\x66\x79\xda\xae\xc0\x0e\x78\xa4\x6c\x1a\x19\xab\x76\x5a\x58\xac\xe2\x24\xd0\xab\x8e\x53\xc0\x74\xc4\x2d\x4a\x40\x9d\x8b\x42\x9c\xf2\x9b\x8e\xbe\x6d\xcd\x13\xaa\xb1\x03\x39\x9d\x78\xb1\x82\xbf\xb7\x77\xf0\x70\x07\xf7\xf7\xbf\xa4\xbf\x7f\x32\x3f\x4a\x18\x65\xba\x85\x1e\x90\x42\x2c\xf5\x99\x6c\x19\xcc\xdc\x5b\x42\x19\x99\x12\x14\xdf\x62\x3f\xe1\x6f\x04\xb2\x37\x2e\x30\x63\x7a\xac\x93\x2e\x2b\xfe\xb3\x2a\x6f\xdd\x61\x3e\x39\x1e\x46\xee\xab\x6b\xc9\x30\x9e\x8b\x29\xfd\x63\x24\xd6\xc9\x4d\x4e\x52\x4d\x32\xda\xfc\xf5\x30\x9b\xcb\x71\x2e\x8b\x06\x05\xcb\xb9\x0c\xef\xb5\x36\x0e\xf1\xe2\x22\xc9\xe1\xec\xb9\x89\x85\xbc\x48\x96\x1c\x54\xd3\x65\x7c\x2f\xad\x77\x64\x0c\x5d\xea\xd1\x33\xd9\x63\x27\x51\x3b\xdd\x8f\x6c\x48\xb9\xd6\x18\xe9\x35\xcb\x55\xab\x7c\x97\x16\xe3\x79\xa1\x96\x6a\xf8\xfe\xab\xbe\x49\x53\x2d\x5f\xf5\x4d\x22\x71\x08\x28\x5d\xb5\xbc\x91\x0e\x8e\xa4\x08\x75\x06\x0b\xaf\xd9\x6c\x9d\x5d\xd9\x6c\x3c\xe8\x50\xb2\x27\xcd\x27\xf6\x51\xdf\xc1\xb6\x85\x48\x72\xa7\xe9\x71\x29\x47\xcb\x25\xc0\x46\x40\xd0\x85\x4e\x57\x07\xb3\xe7\xfa\xc5\xb7\x7a\x03\xaa\xe7\x8d\xd7\x5a\xa1\x69\x23\x85\x6f\xc8\x79\x21\x5d\x7f\x27\x4a\x6b\x7b\x4a\xdf\x08\x71\xa9\xaa\x6f\x05\x3f\x5b\xe9\xec\x44\x75\xa1\x84\x22\x6c\xeb\x51\xa6\x39\x47\x2f\xc2\x08\x8e\x24\x7d\x30\xdc\x6c\x19\xc0\xb3\x75\x4d\x05\x3a\x6e\x27\xc6\xfa\xac\x27\x39\x1a\x19\xfb\xab\xcf\xff\x1e\x77\xbb\x3b\xd8\xeb\x5f\x51\x14\xff\xd7\x1e\xd0\x71\x6b\xdd\xf1\xa0\xc5\x13\x49\x2a\xf8\xa8\x5d\xb8\x23\xd1\x56\x9e\xf6\xae\xdf\x0c\xa9\xfd\x67\x87\x0c\x60\x40\x67\x5b\x8a\x72\xc0\x51\x3a\xcf\x15\x60\xdd\x8c\x7d\x93\xfd\x1b\x00\x00\xff\xff\xc4\xb5\x4c\xb0\x51\x09\x00\x00"

func bvlcReferenceRcnnIlsvrc13YmlBytes() ([]byte, error) {
	return bindataRead(
		_bvlcReferenceRcnnIlsvrc13Yml,
		"BVLC-Reference-RCNN-ILSVRC13.yml",
	)
}

func bvlcReferenceRcnnIlsvrc13Yml() (*asset, error) {
	bytes, err := bvlcReferenceRcnnIlsvrc13YmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "BVLC-Reference-RCNN-ILSVRC13.yml", size: 2385, mode: os.FileMode(420), modTime: time.Unix(1502676415, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _squeezenet_v10Yml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x55\x4d\x8f\xdb\x36\x10\xbd\xeb\x57\x0c\x60\x04\x68\x01\x5b\xb2\x37\xd9\x4d\xa0\x43\x81\x34\xbd\xe4\xe2\x43\x72\x2c\x02\x63\x44\x8d\xac\x69\x48\x8a\x21\x47\x6b\x6f\x7e\x7d\x31\x94\x6c\x79\x93\x6d\xe3\x83\x21\x72\xde\x7c\x3d\x3e\x0e\x3d\x3a\xaa\xe1\xf3\xb7\x91\xe8\x3b\xed\x49\x60\x05\xba\x05\x43\x07\x4f\xc3\x18\xc1\x0d\x2d\xd9\xa2\x8b\xe8\xe8\x34\xc4\xaf\x75\x01\x30\xb9\x7c\xc0\xae\x23\x58\xc1\xd5\x04\xdd\x10\x41\x7a\x9a\x5d\x00\x1e\x29\x26\x1e\x7c\x0d\xbb\x72\xfb\x0c\x38\x1b\xc0\x0c\x5e\x22\xb2\x97\xe2\x07\xe8\x05\xc0\xbe\x1b\xa2\x43\x99\xbe\x21\x91\x43\x2f\x6c\xae\xf6\xc9\x5a\x68\x1c\x64\x4f\xb1\x86\x15\x5c\x17\x09\xc6\x44\x2d\xc8\x00\x81\xa2\x22\xa7\xc2\x20\x44\x6a\xd9\x68\xcc\x02\x96\xdf\x0a\xdc\x68\x85\x83\x25\x08\x16\x45\xf1\x09\x0c\x7a\x68\x08\x52\x20\xc3\x1d\x53\x5b\x00\xa0\x6b\x1f\xde\xd4\xd9\xf3\x18\xc6\x1a\x22\x72\x88\xc3\x3f\x64\xa4\x32\x18\x9d\xdd\x18\xe5\xa5\xce\xb0\x8d\x09\x63\x46\x9a\x5f\x22\x8f\x19\x19\x82\x79\x78\x63\xa9\xfe\xa5\xd3\x0c\x9c\xdd\xfe\xbf\x94\x5b\x6c\x4b\xc9\x44\x0e\x92\xb9\xfe\xa3\x80\xcb\xc1\x7b\x12\x40\xd3\x33\x3d\x52\x82\xc4\x8e\x2d\x46\x88\x94\x46\x2b\x49\x19\x7c\x6f\xe9\xbc\x27\x59\x03\x0a\xdc\x6f\xcf\xd0\xd1\x89\x22\x04\xd4\x23\x15\xa5\x1a\x7d\x0b\xbb\xea\x7e\xbb\x95\x3e\x6b\x20\xf1\x77\x2a\x35\xbe\x43\x6b\x27\xe2\x13\x60\x54\x71\x44\x82\x8e\x30\x71\x63\x49\x43\xb7\x14\xec\xf0\x04\x83\x87\x1e\x63\x7b\x52\xcc\x89\xa5\x07\xcb\x8e\x85\x5a\x70\xe4\x86\xf8\xb4\x86\x48\xdf\x46\x8e\x04\x96\x52\x2a\x00\xcc\xe0\xdc\xe8\xd9\x4c\xe2\x68\xc7\xc8\xfe\x08\x2d\x27\x89\xdc\x8c\xea\x97\x95\xc5\xfe\xb8\xce\xb5\x69\x58\x4d\x4a\x31\xe7\xbc\xe2\x74\x65\x2c\x93\x97\x54\x2e\x74\xec\x6f\xe9\xb8\x7f\x5b\xde\xbf\xca\x41\xde\x6d\xcb\xd7\xaf\x40\x86\xb0\xd9\xe5\xb5\x7e\xdd\x03\x9a\x31\xa2\x91\xdc\xc2\x47\x87\x47\xf5\x2e\x8b\x48\x1d\x45\xf2\x86\x92\x8a\x72\x59\x65\x3d\x62\x50\xce\x2a\x38\x51\x93\x58\x48\x3f\x49\x4c\x59\xc2\x74\x3e\x8d\xf6\x72\x7b\x93\x36\xd0\x8b\x84\x54\x57\xd5\x91\xa5\x1f\x9b\xd2\x0c\xae\xfa\x8b\x28\x7c\x36\x68\xa9\x5a\xaa\x7e\x86\xc5\x78\xe6\xc7\x72\x88\xc7\x0a\x9b\x54\xed\x1e\xb6\x77\xe5\xf6\xed\xeb\x87\x6d\xb1\x02\xcb\x86\x7c\xca\xb7\x7c\xc9\x33\x6f\xd6\xf0\xe7\xfb\x8f\x9f\x8a\x15\xb0\x0f\xe3\x74\xfc\x0b\x66\xda\x53\x81\xae\xa0\xe3\x98\x64\x42\x81\x3c\x05\xfa\x69\x00\x6c\xf2\x76\x0d\xac\xac\x14\xd3\x2d\xbb\x51\xe0\x25\xfb\x4d\x9c\x0c\x7a\x26\x52\x05\x4c\x29\x96\x28\x8b\xee\x94\xdb\x9c\x7a\xd9\x9a\x2f\x75\xcb\x8e\xbc\x0e\x89\x54\xc3\xdf\xbb\x35\xbc\x5e\xc3\xdd\xdd\xdb\xfc\xf7\x65\x86\x38\x42\xaf\xc6\xbb\x77\x6b\xb8\xfc\x7d\x29\x86\x51\xc2\x28\x53\x87\x9a\x3c\x87\x9f\x2b\x9d\x6c\x05\xcc\x7d\x75\x84\x32\x46\xca\x50\x7c\xa9\xb3\x09\xbf\x14\x57\xbc\xd0\xdc\x8c\xb1\xd8\x64\xce\x6e\x7a\x9b\x19\x7b\xa9\xbf\x39\x73\x3a\x8c\xd1\xd6\xf9\xc0\xeb\xaa\x6a\x51\xb0\x6c\x9d\x35\xa5\xb3\x95\x3b\x7b\x92\x6a\xba\x78\x55\xa6\x4e\xd7\xe9\xc9\x27\x92\x52\xce\x52\x64\x93\xf2\x77\x99\x6e\x69\x9e\x8f\xc7\x88\xa1\xcf\xfa\x3e\x11\x1f\x7b\x49\x3a\x08\x86\x31\x1a\xd2\xdc\x0d\x26\x5a\xb2\xfe\x20\xc9\x88\xbc\x79\x3e\x82\xe6\x02\x22\x9e\x2a\x87\x49\x28\x56\x79\x28\xdd\x55\xe9\x3a\x78\x0e\x8f\xbb\x72\x5b\xc0\x94\xf7\x10\x50\xfa\xfa\x32\xa3\x0f\x9e\xa4\x0c\x4d\x01\x97\x52\x66\x33\x7b\xbe\xb1\x71\x3a\x60\x34\x3d\x3f\xea\x91\xa0\x4d\xfa\x2a\x71\x07\x49\xe7\x95\xf4\xe4\x33\xcd\x97\xba\x81\x13\x20\xe8\x87\x0c\x80\x1e\x66\xcf\xdb\xa7\xe0\xe6\x4d\x50\xcf\xa5\xae\x5b\x52\xa6\x8d\x1c\xbe\x25\x3f\xe8\x24\xe9\xff\x2b\x4a\xc7\x96\xf2\xab\x99\x2e\xc2\xf8\x99\x63\x9d\x79\x3c\x95\x7a\x29\x09\x65\x1e\x52\x59\xe6\x74\x96\x88\xe0\x49\xf2\x13\xba\xd8\x0a\x80\xaf\xec\xdb\x1a\x3e\xec\xf7\x73\xc5\xba\xd6\x4c\x9e\xc6\x88\xf6\xea\xf3\xdb\x87\xfd\x7e\x0d\x9f\xf4\xaf\x2c\xcb\xdf\x55\xc6\xf3\x8c\x3c\xa8\x74\x12\x49\x7d\x1d\x60\x7a\x53\xa7\xbd\xeb\x2b\x9a\x6f\xf7\xec\x50\x00\x38\xf4\xdc\x51\x92\x03\x8e\xd2\x0f\xb1\x06\x6c\xda\xd1\xb6\xc5\xbf\x01\x00\x00\xff\xff\x9e\xff\xa7\xc6\x51\x08\x00\x00"

func squeezenet_v10YmlBytes() ([]byte, error) {
	return bindataRead(
		_squeezenet_v10Yml,
		"SqueezeNet_v1.0.yml",
	)
}

func squeezenet_v10Yml() (*asset, error) {
	bytes, err := squeezenet_v10YmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "SqueezeNet_v1.0.yml", size: 2129, mode: os.FileMode(420), modTime: time.Unix(1502676473, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _squeezenet_v11Yml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x55\x4d\x6f\xe3\x36\x10\xbd\xeb\x57\x3c\xc0\x97\x16\x70\x24\xc7\x1b\x64\x17\x3a\x14\x68\x73\xda\x8b\x0f\xdb\x63\xb1\x30\x46\xd4\xc8\x62\x57\xa2\x58\x72\x18\x3b\xfd\xf5\x05\x49\xc9\x72\x90\x74\xa3\x83\x40\xce\xbc\xf9\x7a\x33\x24\x0d\x8d\x5c\xe3\xcf\x7f\x02\xf3\xbf\x7c\x60\xc1\x06\x51\x84\xa9\xc3\xcb\x14\x1c\xc6\xa9\xe5\xa1\xe8\x1c\x8d\x7c\x9e\xdc\x8f\xba\x00\xb2\xc9\x13\x75\x1d\xef\xb1\xc1\x55\x87\x6e\x72\x90\x9e\x67\x1b\xe0\x99\x9d\xd7\x93\xa9\xb1\x2b\xbf\x94\xf7\xaf\xa0\xb3\x0a\x6a\x32\xe2\x48\x1b\x29\xae\xe0\xfb\x04\x5d\x00\xda\x74\x93\x1b\x49\xf2\x1a\x9e\x47\x32\xa2\xd5\x55\x9f\xb5\x45\xf4\x43\xda\xb0\xab\xb1\xc1\x75\xe3\x11\x3c\xb7\x90\x09\x96\x5d\x44\xe6\xd4\x60\x1d\xb7\x5a\x45\x9f\x05\xd6\x6f\x83\x31\x0c\xa2\xed\xc0\xb0\x03\x49\xc4\x7b\x28\x32\x68\x18\xde\xb2\xd2\x9d\xe6\xb6\x00\x68\x6c\x1f\x1f\xea\x64\x79\xb2\xa1\x86\x23\x6d\xdd\xf4\x37\x2b\xa9\x14\xb9\x71\xb8\x53\x89\x9a\x3a\xe1\xee\x94\x0d\x09\xaa\x3e\x86\x9e\x12\xd4\x5a\xf5\xf8\x30\x70\xfd\xb1\xd5\x8c\x9c\xed\x3e\xc8\xe6\x16\xdc\xb2\x57\x4e\x5b\x49\x7c\xff\x56\xe0\xb6\xff\xcf\x91\xff\x9e\x3c\xf6\xe5\xc3\x05\x03\x7b\x0f\x35\x8d\x36\x48\xee\x81\xf4\x64\x22\x66\xb7\xc5\x59\x4b\x3f\x05\x81\x27\xe5\x74\xa7\x95\x36\x27\x90\x52\xc1\x91\x7a\x29\x0b\xc7\x1d\x3b\x36\x8a\x7d\x6c\xc9\xba\x4b\xdd\x20\x1b\x9b\x53\xe1\xcc\x8d\xd7\xc2\x71\xc9\xa2\xca\x12\x39\xb3\x26\xba\xba\x9d\xa4\x3b\xf4\x22\xd6\xd7\x55\x75\xd2\xd2\x87\xa6\x54\xd3\x58\xe5\xc2\xaa\x84\xf1\x95\x38\xe6\x6a\x24\x2f\xec\x2a\x9f\xcb\x31\x2c\xaf\x6c\xc9\x5d\xf4\x73\x39\xb9\x53\x45\x8d\xaf\xee\x1f\x77\xfb\x72\xf7\xf9\xd3\xe3\xae\xd8\x60\xd0\x8a\x8d\x4f\x63\xbf\xc6\x9d\x85\x35\xfe\xf8\xfd\xeb\xb7\x62\x03\x6d\x6c\x90\x54\xc0\x8a\xc9\xb2\xd8\xac\x0d\x3a\xed\xbc\x64\x14\xe4\xc5\xf2\x9b\x03\x71\x97\xc4\x35\xf4\x48\x27\x2e\xf2\xcc\xdd\xf4\x62\x89\x7e\xe3\x27\x81\x5e\xb5\x2b\x02\x72\x88\xd5\x8b\xa5\x78\xb0\x84\x5d\xe2\x3a\x85\x5e\x45\xf3\x88\xb7\x7a\x64\x13\x8f\x8c\xaf\xf1\xd7\xfd\x16\x9f\xb6\xd8\xef\x3f\xa7\xdf\xf7\x19\x32\x32\x99\xa8\xdc\x7f\xd9\x62\xf9\x7d\x2f\xa6\x20\x36\x48\xae\x30\x06\x4f\xee\xe7\x4c\xb3\xae\xc0\x5c\x57\xc7\x24\xc1\x71\x82\xd2\x7b\x95\x65\xfc\x9a\x5c\xf1\x4e\x71\x33\x66\xa0\x26\x71\x76\x53\xdb\xcc\xd8\x7b\xf5\xcd\x91\xfd\x31\xb8\xa1\x4e\x0d\xaf\xab\xaa\x25\xa1\xb2\x1d\x07\x55\x8e\x43\x35\x5e\x0c\xcb\x32\x2c\x89\xba\xb8\xf7\x2f\xc6\xb3\x94\x72\x91\x22\xa9\x22\x7f\xcb\x59\xf7\xf3\x6d\x71\x72\x64\x7b\x90\x69\x71\x66\x7d\xea\xc5\xc3\xb1\x9f\x82\x53\x1c\x63\x37\xe4\x79\x8d\xfa\xd3\x11\x75\x74\x7e\x77\x42\x53\x80\xa3\x25\xe9\xeb\xe5\x6a\x3a\x1a\x96\xd2\x36\x05\x96\x98\xb3\x9a\x2f\xac\x56\x9d\xf6\x47\x72\xaa\xd7\xcf\x91\x7b\x1a\x3c\x63\x03\xdd\xc1\xb3\x6c\x23\x95\x26\xf1\xb9\x24\x08\xed\x41\x88\x0b\x99\x40\x06\xb3\xe5\xed\x0d\x78\x73\x15\x46\xcb\x35\xaf\xdb\xea\xb3\x20\xb9\x6f\xd9\x4c\xc2\x71\xfd\x3f\x5e\x3a\x3d\x70\x7a\x2f\xfc\x32\x01\x6f\xc9\x8c\xd7\x88\xce\xa9\x2e\x29\x91\x88\xd3\x4d\x90\x7c\x77\xf0\x45\x1c\xc1\xb0\xa4\x97\x63\xd5\x15\xc0\x0f\x6d\xda\x1a\x4f\x87\xc3\x9c\x71\xdc\xc7\x48\x86\x83\xa3\xe1\x6a\xf3\xcb\xd3\xe1\xb0\xc5\xb7\xf8\x2b\xcb\xf2\xd7\x38\xaf\xf1\xd1\xd1\xe6\x74\x8c\x33\xe2\x59\x6a\x7c\x8d\x23\x91\x1f\xc0\x59\x76\x7d\x3c\xd2\x31\x9e\x0d\x0a\x60\x24\xa3\x3b\xf6\x72\xa4\x20\xfd\xe4\x6a\x50\xd3\x86\xa1\x2d\xfe\x0b\x00\x00\xff\xff\xaf\x29\xec\xb0\x4b\x07\x00\x00"

func squeezenet_v11YmlBytes() ([]byte, error) {
	return bindataRead(
		_squeezenet_v11Yml,
		"SqueezeNet_v1.1.yml",
	)
}

func squeezenet_v11Yml() (*asset, error) {
	bytes, err := squeezenet_v11YmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "SqueezeNet_v1.1.yml", size: 1867, mode: os.FileMode(420), modTime: time.Unix(1502662070, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"BVLC-AlexNet.yml": bvlcAlexnetYml,
	"BVLC-GoogLeNet.yml": bvlcGooglenetYml,
	"BVLC-Reference-CaffeNet.yml": bvlcReferenceCaffenetYml,
	"BVLC-Reference-RCNN-ILSVRC13.yml": bvlcReferenceRcnnIlsvrc13Yml,
	"SqueezeNet_v1.0.yml": squeezenet_v10Yml,
	"SqueezeNet_v1.1.yml": squeezenet_v11Yml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"BVLC-AlexNet.yml": &bintree{bvlcAlexnetYml, map[string]*bintree{}},
	"BVLC-GoogLeNet.yml": &bintree{bvlcGooglenetYml, map[string]*bintree{}},
	"BVLC-Reference-CaffeNet.yml": &bintree{bvlcReferenceCaffenetYml, map[string]*bintree{}},
	"BVLC-Reference-RCNN-ILSVRC13.yml": &bintree{bvlcReferenceRcnnIlsvrc13Yml, map[string]*bintree{}},
	"SqueezeNet_v1.0.yml": &bintree{squeezenet_v10Yml, map[string]*bintree{}},
	"SqueezeNet_v1.1.yml": &bintree{squeezenet_v11Yml, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

