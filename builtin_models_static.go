// Code generated by go-bindata.
// sources:
// builtin_models/BVLC-AlexNet.yml
// builtin_models/BVLC-GoogLeNet.yml
// builtin_models/BVLC-Reference-CaffeNet.yml
// builtin_models/BVLC-Reference-RCNN-ILSVRC13.yml
// builtin_models/SqueezeNet_v1.0.yml
// builtin_models/SqueezeNet_v1.1.yml
// DO NOT EDIT!

package caffe2

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data, name string) ([]byte, error) {
	gz, err := gzip.NewReader(strings.NewReader(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name ...
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size ...
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode ...
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// ModTime ...
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir ...
func (fi bindataFileInfo) IsDir() bool {
	return false
}

// Sys ...
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _bvlcAlexnetYml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x56\x5b\x8f\xdb\xba\x11\x7e\xd7\xaf\x18\xc0\x08\xb0\x69\x6d\x5d\x6c\xcb\xf6\xaa\x40\xd1\x76\xdb\x87\x02\xc5\x3e\xb4\x3d\xe7\x25\x08\x8c\x11\x39\xb2\x98\x48\xa4\x40\x8e\xbc\xbb\xf9\xf5\x07\x24\x25\xcb\x8b\xe4\x9c\xec\x83\x97\xe2\x5c\xf8\xcd\xed\x23\x35\xf6\x54\xc1\x3f\x7e\xfd\xcf\xd3\xe6\xef\x1d\xbd\x3e\x13\xc3\x0a\xfc\x26\x98\x06\xde\xcc\x68\xa1\x37\x92\xba\xa4\xb1\xd8\xd3\x8b\xb1\x5f\xab\x04\x20\x1a\x3d\x61\xd3\xd0\x16\x56\x70\x93\x41\x63\x2c\x70\x4b\x93\x0d\xc0\x95\xac\x53\x46\x57\x90\xa7\xa7\xb4\x78\xa7\x3a\x89\x40\x18\xcd\x16\x95\xe6\xe4\xa6\x5c\xa4\x39\xac\x6e\x0a\x4a\x37\xc6\xf6\xc8\x71\x0d\x8e\x7a\xd4\xac\xc4\x4d\x1e\xa5\x89\xf7\x83\x4a\x93\xad\x60\x05\xb7\x0f\x07\xa3\x23\x09\x6c\x60\x20\xeb\x35\x23\x34\x18\x2c\x49\x25\xbc\xcf\x04\x96\xbf\x15\xf4\x63\xc7\x6a\xe8\x08\x86\x0e\xd9\xeb\x3b\x10\xa8\xa1\x26\x70\x03\x09\xd5\x28\x92\x09\x00\xf6\xf2\xb0\xaf\x82\xe5\x65\x18\x2b\xb0\xa8\x06\x6b\xbe\x90\xe0\x4c\xa0\xed\xbb\x8d\xf0\xa9\xa9\x82\xda\x46\x0c\x63\xd0\x14\x3f\xd5\xbc\x04\xcd\x61\x10\x87\x7d\x47\xd5\x4f\x8d\x26\xc5\xc9\xec\x8f\xa1\xdc\xeb\x4a\x72\xc2\xaa\x81\x43\xae\xff\x9a\x00\xfc\xbf\x55\x6e\xca\x8b\x72\x80\x60\x69\xe8\x94\x88\x19\x37\xcd\x52\x50\x88\x96\x35\x49\x5f\x08\xbf\x3d\xb7\xcc\x30\xd6\xb3\x45\x9a\x00\xfc\x53\x35\x0d\x59\xd2\x82\x5c\x05\xda\x30\x84\x0a\x2b\x7d\x81\x17\xc5\x6d\xb0\xb4\xd4\xa9\x4b\xcb\x7e\x4f\x22\xe3\x06\xc7\x4b\x4f\x9a\x83\x8b\xbf\x24\x00\x4a\x2b\x56\xd8\xa9\x6f\x5e\x43\x1b\xbd\xf9\x46\xd6\x40\xad\xd0\x91\xf3\xe5\xcc\xd3\x02\x94\x76\x4c\x28\x3d\xc6\x02\x1e\x1a\x33\x6a\x09\x9a\x04\x39\x87\xf6\x2d\xf6\xe2\x74\xee\x1a\xd0\x2d\x2e\x63\x64\x6c\xa0\x80\x0b\x5e\x09\x9a\x0e\x19\x3a\xe3\xdc\xc7\x34\x64\x83\xa0\x1e\xb5\xec\x48\x2e\x49\xf1\x90\x15\x93\x8d\xa6\xbb\x43\xbe\xce\xf3\x1c\x9c\xc6\xc1\xb5\x86\xd3\x68\x44\x8e\xe1\x8a\x9d\x92\x38\x35\xd6\xd4\x73\xa8\x05\x81\x1c\xad\x0f\x65\xc9\x84\x47\xb4\x78\x2c\x4f\xc1\x63\xc8\xcf\xe2\x03\x50\x88\xd1\xa2\x78\x4b\x00\xca\x63\xba\x2d\x4f\x1f\x00\xb5\x0c\x60\xa1\x48\x4f\xbb\xc7\xfd\x29\xbd\xaf\x9f\xa9\x7d\xdf\xfb\x22\xb2\x19\x36\xc5\xcd\xde\x5b\x17\xd1\x16\x13\x08\xc2\x72\x11\x9e\xf2\x74\xfb\x01\x4c\xac\xe9\xdd\xe9\x8e\x78\x0d\xa3\xf3\x70\xbf\x8c\x8e\x83\x58\x90\x66\xb2\x20\xac\x19\x7c\xb6\x1e\x7e\x09\x62\x2f\xc1\x2b\x59\xbc\x04\xe2\x28\xf2\xa0\xe0\xd6\xf0\xb0\x87\x3f\x43\x31\x59\x7d\x84\x3f\xc1\x16\x7a\x65\xad\xb1\x6b\x70\xad\x19\x3b\x39\x41\xf6\x53\x05\xb5\x62\x68\xd5\xa5\x25\x7b\xc3\x96\x7e\x7c\xdf\xa0\x3e\x6d\x21\x87\x24\xa1\x7e\x83\x7f\x5d\x51\xc3\xff\x5a\xea\x5a\xec\xc9\xc2\xdf\xdc\xbc\x4c\x2c\x2d\x2d\xb8\x82\xe5\x2b\x70\x01\x0e\x9e\x1a\x32\x78\xa1\xda\x29\x26\xbf\x24\x16\x69\x3a\x77\xf8\x1c\xd2\xcc\x63\x1b\x68\x99\x07\x57\x65\xd9\x45\x71\x3b\xd6\xa9\x30\x7d\xe6\x49\x33\x0b\xe3\x95\xb1\x25\xca\x7a\x74\x4c\x36\x0b\x36\x2e\xab\xaf\x9d\x38\x63\x47\xaf\x9a\xf8\xe6\xa1\xca\xb2\x78\x76\xaa\xd5\xe0\x52\x21\xe2\x67\xb6\x3f\x6d\xf7\x1b\xd5\xe3\x85\x34\xf1\x46\x74\xe8\x9c\x6a\xa6\x81\xda\xf8\x9e\xd8\x48\xa2\x61\x23\x8c\xbe\x9a\x6e\xf4\xbb\xd8\x6d\x34\x8d\x36\xfc\x63\x4f\xa8\x2e\x1d\x64\x93\xac\xa0\x53\x82\xb4\xa3\x77\x83\x9b\x4c\x9b\x15\x8c\xda\x92\x63\xab\x04\x93\x4c\x56\xa0\xf4\x30\x72\x48\xc9\xa2\x1b\xf7\x3c\xfd\xac\xa0\x51\xd6\x71\xd4\x02\x7e\x1b\xe8\x3b\x82\xdf\x84\xed\x0a\x02\xf6\x24\x72\xe8\x1d\xbf\xcc\x28\xee\xfc\x04\xa5\x77\x14\x14\x66\x2b\x1c\xb1\x78\x19\xd0\x5f\x14\x4c\x36\x54\x2f\x1c\xbd\x6c\x4d\x94\x2d\x55\x4f\xda\x5f\x01\xae\x82\x4f\xbb\x35\x6c\xb7\xc7\xf0\xf3\x79\x92\xf7\x84\xba\x82\x4f\xc5\x76\xb7\x86\xa2\x38\xae\xa1\xc8\xf7\x9f\x13\x33\xf2\x30\x72\x0c\xcf\x9f\x1c\x7c\x4f\x30\xa3\xcc\xcf\x47\x08\xaa\x21\xe4\xd1\x52\x50\xc5\x1f\x85\x15\xf5\x17\x64\xc9\x0f\x22\x9b\x74\x3a\xac\x43\xc2\xee\x02\x9b\xd2\xf5\xa3\xe0\xa6\x93\xdd\x79\xb4\x5d\x35\x77\x8e\xe7\xc9\x54\xf6\x9d\x48\xfb\x2e\xeb\x7d\x5f\xcd\xbd\x36\x77\x4e\xe6\xde\xb4\x23\x4e\xf9\x95\xdf\xbb\x11\x2d\x89\xaf\x6e\xec\x2b\xd8\xcb\xed\x6e\x5f\x97\xa7\xdd\x0e\x05\xee\xf7\x8f\xdb\x53\x7e\x28\xb1\x38\xe5\xb2\xde\xe5\xc5\x01\x93\xe0\xd2\x27\x7d\xbe\xf0\xe6\xc9\xbb\x58\x1c\xda\xc0\x20\x2f\xe4\xa9\xdb\x81\x25\x67\x46\x2b\xc8\x63\xae\xd1\xd1\x3b\xb4\x6e\x97\x62\x8f\xdf\x8c\xc6\x17\x17\xc6\xc5\xb1\xb1\x94\x86\x4b\x29\x35\xf6\x32\x63\x0f\x03\xb4\x3d\x87\x07\xc2\xbb\xa1\x39\x17\x69\x9e\x40\x3c\xf6\x3c\x20\xb7\xd5\x7c\x6b\x9f\x35\x71\x3a\xd4\x09\xcc\x48\x26\xb1\x27\xf8\x45\xa6\xdc\x19\xad\x68\xd5\xd5\x57\x12\x3b\x47\xb0\x02\xd5\x44\x4e\xe3\x96\x22\xd9\xcd\xb0\xe3\xc5\xe7\x17\x6c\x00\x35\x4c\x96\xf7\x8f\x83\xbb\x57\x82\xb7\x5c\x70\xdd\xe7\x24\x6e\x04\xf7\x92\xb4\x61\xf2\xeb\xdf\xf1\xd2\xa8\x8e\xc2\x53\xca\xcd\xfd\xf4\x7d\x8a\xfd\xec\x4f\x77\xed\x02\x29\x1e\xbd\xd4\xf4\x48\x8f\x28\x50\xe4\x47\x2c\x85\x38\xd6\x27\x6c\xf2\x22\x3f\xe5\xa5\xc0\x53\x73\xcc\xf3\xf2\x2e\x51\x8b\x51\x23\xca\x83\xd8\x97\x8f\xb4\xdd\xe5\xe5\x71\x77\x28\x8f\xf9\xee\x88\x39\xca\x32\x97\xc5\xa1\x6c\x12\x64\xb6\xaa\x1e\x39\x12\x28\xbd\xb2\x45\x98\xb8\x06\x16\x59\x02\xf0\x55\x69\x59\xc1\xd3\xf3\xf3\x94\x19\xff\xed\x23\x8a\xfc\x74\xb3\x79\x78\x7a\x7e\x5e\xc3\x7f\xfd\x4f\x9a\x06\x5a\x9f\xef\xc2\xb3\xef\x6c\x47\x5c\xc1\xbf\x7d\x23\xc7\x37\xe8\xb4\x77\x7b\xbf\xdd\x5f\xe7\x09\x40\x8f\x5a\x35\xe4\xf8\x8c\x23\xb7\xc6\x56\x80\xb5\x1c\x3b\x99\xfc\x16\x00\x00\xff\xff\x8f\x91\x31\x1b\xd0\x0a\x00\x00"

func bvlcAlexnetYmlBytes() ([]byte, error) {
	return bindataRead(
		_bvlcAlexnetYml,
		"BVLC-AlexNet.yml",
	)
}

func bvlcAlexnetYml() (*asset, error) {
	bytes, err := bvlcAlexnetYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "BVLC-AlexNet.yml", size: 2768, mode: os.FileMode(420), modTime: time.Unix(1506278823, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _bvlcGooglenetYml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x56\xdd\x6e\xeb\x38\x0e\xbe\xf7\x53\x10\x27\x38\x40\xbb\x9b\x38\xb6\xe3\xa4\xae\x07\x58\x60\xa7\x83\x5d\x2c\x76\xd0\x8b\xfd\xbd\x18\x0c\x02\x5a\xa2\x6d\x4d\x6d\xc9\x2b\xd1\xe9\xcf\xd3\x2f\x24\xdb\x49\xda\xe9\xc1\xe9\x45\x11\x8b\x1f\xc9\x8f\x14\x45\x52\x63\x4f\x25\xfc\xf8\x9f\x9f\x1f\x36\x7f\x35\xa6\xf9\x99\x1e\x89\x61\x05\xfe\x18\x4c\x0d\xaf\x66\xb4\xd0\x1b\x49\x5d\x54\x5b\xec\xe9\xd9\xd8\xa7\x32\x02\x98\xd4\x1e\xb0\xae\x29\x83\x15\x9c\x65\x50\x1b\x0b\xdc\xd2\xac\x03\x70\x22\xeb\x94\xd1\x25\x24\x71\x11\xa7\xef\xa0\xb3\x08\x84\xd1\x6c\x51\x69\x8e\xce\xe0\x34\x4e\x60\x75\x06\x28\x5d\x1b\xdb\x23\x4f\xbf\xc1\x51\x8f\x9a\x95\x38\xcb\x27\x69\xe4\xed\xa0\xd2\x64\x4b\x58\xc1\xf9\xc3\xc1\xe8\x48\x02\x1b\x18\xc8\x7a\xe4\x44\x0d\x06\x4b\x52\x09\x6f\x33\x82\xcb\xdf\x0a\xfa\xb1\x63\x35\x74\x04\x43\x87\xec\xf1\x0e\x04\x6a\xa8\x08\xdc\x40\x42\xd5\x8a\x64\x04\x80\xbd\x3c\xe4\x65\xd0\x6c\x86\xb1\x04\x8b\x6a\xb0\xe6\x37\x12\xbc\x15\x68\xfb\x6e\x23\x42\x6a\xca\x80\xdb\x88\x61\x0c\x50\xf1\x7d\x68\x13\xa0\xc3\x20\x0e\x79\x47\xe5\xf7\xb5\x66\xe4\xac\xf7\x1d\x36\xd7\x60\x49\x4e\x58\x35\x70\xc8\xf7\x9f\x3e\x7e\x02\xfc\xab\x55\x6e\x4e\x95\x72\x80\x60\x69\xe8\x94\x98\x2e\xc1\xd4\x97\x3b\x86\x49\xb3\x22\xe9\xef\xc6\x1f\xfb\x3a\xea\x42\x1d\x0d\x63\xb5\xe8\xc4\xf0\x5f\x82\x67\x33\x76\x12\x3a\xf5\x44\xfe\x3e\xb8\x45\xfd\x04\x0f\xad\x55\x8e\x15\x6a\xf8\xe7\x1b\x35\x24\x5f\x43\x09\x61\xd7\x81\x27\xd0\x52\x37\x2c\x76\x3f\x30\xb8\xb8\x09\x3c\xe2\x08\xe0\x27\x55\xd7\x64\x49\x0b\x72\xa1\x48\x0d\x43\xa8\x2c\xa5\x1b\x78\x56\xdc\xce\x66\x3a\xd5\xb4\xec\xcf\x24\x32\x6e\x70\x6c\x7a\xd2\x1c\xec\xfe\xf0\x4d\x2d\x27\xb0\x23\xf0\xcc\x7c\x19\xf0\xc6\x7a\xfc\xe7\x06\x46\x47\x0e\xbe\xbc\xe0\x49\x91\xfd\xe2\x03\x55\x5a\xb1\xc2\x4e\xbd\x51\x30\xf5\x4c\xde\xbf\x03\xa5\x1d\x13\x4a\x1f\xcb\x97\x06\x47\xe7\x14\xea\x2f\xde\xc0\xff\x46\x25\x9e\x8e\xce\x74\x27\xb2\xf1\x60\x0d\x1b\x7e\xe1\xc9\x2c\x82\x9c\x63\x64\xe8\x08\x6d\x20\x69\x91\x09\x24\x09\x7c\x85\xc1\x74\x4a\xbc\x86\xd4\x06\x5f\xc6\xaa\x46\x69\xec\xe0\x83\xb5\xb5\x87\xb0\x4f\xb3\x79\xf6\x56\xfb\x51\xb4\x50\xa3\x63\xb2\x97\xe0\x6f\x0e\x09\xd0\x60\x44\xeb\xe0\xe4\x20\xdb\x2f\x5f\xb7\x3f\x84\xfa\x20\xa8\x46\x2d\x3b\x92\x97\x32\xf1\x2e\x15\x93\x9d\x2e\x29\x5b\xe7\x49\xb2\x4e\x92\x04\x9c\xc6\xc1\xb5\x86\xaf\x4c\xde\xc2\xe8\xbc\x93\x4f\x83\x5d\xea\xef\xbd\x03\x53\xf9\x27\xed\xe9\xb2\x19\x36\x29\xa0\x10\xa3\x45\xf1\x0a\x87\x22\xbe\xfb\x0a\x37\xbb\x34\xde\x7d\x05\xb2\xd6\xd8\x5b\x40\x2d\x67\xe0\xfe\x02\x2c\x8a\xf8\xfe\x2b\xdc\xa4\x69\x9c\x9e\x81\x66\xca\xd4\x09\x3b\x25\x27\xde\x8e\x78\x3d\xb3\xfb\x6d\x74\x1c\xc4\x82\xb4\xcf\x8d\xb0\x66\xf0\x95\x76\xf3\xef\x20\xf6\x12\x3c\x91\xc5\x26\x74\xcb\x34\x09\x00\xb7\x86\x9b\x1c\xfe\x08\xe9\xac\x75\x0b\x7f\x80\x0c\x7a\xe5\xfd\xad\xc1\xb5\xe1\x15\x4c\xc1\x00\x42\xa5\x18\x5a\xd5\xb4\x64\xcf\x3c\xe3\x5b\x9f\x00\xd5\x2b\xdd\xb8\xf0\x1c\xaa\x53\x27\x8e\x4d\x28\x78\x4d\x3c\x55\xa5\x18\x7f\x7a\x7c\x9c\x69\x56\xc8\xa2\x3d\x3a\xf5\x46\x65\x9a\x15\x3e\x24\x84\xbf\xe7\x89\xf0\xaf\xe0\xcf\x33\xbf\xbf\x18\xfb\x8c\x56\xc2\x80\xce\x95\xb0\x3f\x64\x71\x91\xa7\xd0\xbb\xf8\x0a\xf3\x23\x8a\xa7\x2b\x50\x9a\x66\xbb\xb8\xc8\x3f\x80\x66\x43\x9b\x05\x5c\x42\x7a\x28\x8a\xb8\x98\x61\xef\x1b\x87\x30\xfa\x44\x96\x49\x42\x6d\x4d\x1f\x12\x16\xa6\xc6\xf2\x68\x2d\x9d\x5f\x2c\xac\xe0\xf2\x15\x1a\x36\x0e\xbe\x7f\x6f\xe1\x99\x2a\xa7\x98\xfc\x4f\x62\x11\xc7\x4b\xcf\x59\xae\x60\x19\x36\x1b\x68\x99\x07\x57\x6e\xb7\x68\x5f\xd4\x29\x36\xb6\xd9\x0e\xb2\xde\xa6\x79\x72\x1f\xe7\x45\x9e\xc5\x83\xac\xdf\xe1\x1a\xc5\xed\x58\xc5\xc2\xf4\x5b\x3f\x03\xb7\xa1\x51\x6e\xd9\x12\x6d\xfb\xf0\x1a\xb6\xc1\xb6\xdb\xbe\xbf\x81\x68\x05\x9d\x12\xa4\x1d\xbd\xeb\x85\xd1\x7c\x58\xc2\xa8\x2d\x39\xb6\x4a\x30\xc9\x68\x05\x4a\x0f\x23\xbb\xa9\xe9\x2d\xd8\xe9\xcc\xdf\xd0\x0a\x6a\x65\x1d\x4f\x28\xe0\xd7\x81\x7e\x37\x46\x37\xe1\xb8\x04\xd5\x63\x43\xd1\x34\xa9\xae\x5a\xf6\xc2\xe2\xca\x4e\x00\xbd\xeb\xea\xe1\x71\x06\x17\x17\x2b\x03\xfa\x71\xcc\x64\x43\xfa\x83\xeb\xcb\xd1\x3c\x18\xa5\xea\x49\xfb\x41\xeb\x4a\xf8\x65\xb7\x86\x2c\xbb\x0b\xff\x7e\x9d\xe5\x3d\xa1\x2e\xe1\x97\x34\xdb\xad\x21\x4d\xef\xd6\x90\x26\xf9\xaf\x91\x19\x79\x18\x79\x0a\xcf\x7b\x0e\xb6\x67\x9a\x93\x2c\x82\x39\xa8\x9a\x90\x47\x4b\x01\x8a\x9f\x85\x35\xe1\x2f\xcc\xa2\x4f\x22\x9b\x31\x1d\x56\x21\x61\x57\x81\xcd\xe9\xfa\x2c\xb8\xd9\xb3\x3b\x8e\xb6\x2b\x43\x51\x94\xdb\xad\x6f\xea\xb1\xec\x3b\x11\xf7\xdd\xb6\x7f\xd1\xc4\x4b\x11\x84\xbc\xf9\x6f\xf7\xaa\x1d\x71\x3c\x75\xaa\x2b\x33\xa2\x25\xf1\xe4\xc6\xbe\x84\x5c\x66\xbb\xbc\xda\x17\xbb\x1d\x0a\xcc\xf3\xfb\xac\x48\x0e\x7b\x4c\x8b\x44\x56\xbb\x24\x3d\x60\x14\x4c\xfa\xa4\x2f\x6b\xc5\xf2\x68\x1a\x8b\x43\x1b\xda\xd7\x32\x28\x2c\x39\x33\x5a\x41\x9e\x73\x85\x8e\xde\xb1\x75\xbb\x18\x7b\x7c\x33\x1a\x9f\x5d\xa8\x63\xc7\xc6\x52\x1c\xe6\x7e\x78\x00\x33\xf7\x69\x05\x38\x86\x35\xec\x43\x35\x1f\xd3\x38\x89\x60\x72\x7c\x1c\x90\xdb\x72\xd9\x8e\x8e\x9a\x38\x1e\xaa\x08\x16\x2e\xb3\xd8\x4f\xb4\x8b\x4c\xb9\x23\x5a\xd1\xaa\x93\xbf\x4b\xec\x1c\xc1\x0a\x54\x3d\xb5\x51\x6e\x69\xea\xaf\x0b\xf1\x69\x9b\xf0\x3f\xd8\x00\x6a\x98\x35\xaf\x97\xb0\xab\x6d\xcc\x6b\x5e\x78\x5d\x67\x65\x3a\x08\xe6\x25\x69\xc3\x61\xb6\x7e\xc3\x4a\xad\x3a\x0a\x2b\xab\x5b\x2a\xea\xf7\x49\xf6\x3d\x75\x5e\x34\x2e\x94\x26\xd7\x97\x5b\x2d\xaa\xb4\x10\x89\x38\xc8\x5c\x88\x62\x4f\x02\xd3\xfd\x5d\x95\x50\x21\x8b\x94\xb2\xfa\x3e\xbf\x4a\xd4\x45\x69\x5f\x25\x49\x26\xee\xea\xfd\x3e\x2b\x92\xec\x5e\xde\xdd\xc9\xc3\x3e\x11\xc5\x5d\x76\xb8\x3f\x10\xe6\x11\x32\x5b\x55\x8d\x3c\xf5\x40\x7a\x61\x8b\xa0\x89\xc3\x92\x7c\x91\x45\x00\x4f\x4a\xcb\x12\x1e\x1e\x1f\xe7\xcc\xf8\x6f\x1f\x91\xa6\xd1\x62\x77\xd6\xb9\x79\x78\x7c\x5c\xc3\x3f\xfc\xbf\x38\x0e\xb3\x64\x19\xe9\x47\x5f\xdb\x8e\xb8\x84\xbf\xf9\x52\x9e\x76\xfd\xf9\xec\xbc\x27\x87\xde\x33\x2b\x44\x00\x3d\x6a\x55\x93\xe3\x23\x8e\xdc\x1a\x5b\x02\x56\x72\xec\x64\xf4\xff\x00\x00\x00\xff\xff\x96\x2d\x13\x4f\x3a\x0c\x00\x00"

func bvlcGooglenetYmlBytes() ([]byte, error) {
	return bindataRead(
		_bvlcGooglenetYml,
		"BVLC-GoogLeNet.yml",
	)
}

func bvlcGooglenetYml() (*asset, error) {
	bytes, err := bvlcGooglenetYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "BVLC-GoogLeNet.yml", size: 3130, mode: os.FileMode(420), modTime: time.Unix(1506278827, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _bvlcReferenceCaffenetYml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x56\x4d\x8f\xdb\x36\x13\xbe\xeb\x57\x0c\x60\xbc\xc0\xe6\xad\xad\x2f\xcb\x5e\x47\x05\x8a\xb6\x9b\x4b\x8a\x62\x0f\x41\xda\x4b\x10\x18\x14\x39\xb2\x98\x50\xa4\x40\x8e\xd6\xbb\xf9\xf5\x05\x49\xc9\xb2\x9b\xa4\xd9\x83\x57\xe4\x3c\x33\x7c\xe6\x93\xd4\xac\xc7\x1a\x7e\xff\xfb\xcf\x87\xcd\x3b\x6c\xd1\xa2\xe6\xb8\x79\x60\x6d\x8b\x8f\x48\xb0\x02\x2f\x07\xd3\xc2\x8b\x19\x2d\xf4\x46\xa0\x4a\x5a\xcb\x7a\x3c\x1b\xfb\xb9\x4e\x00\xa2\x7e\x50\x28\x61\x05\x17\x19\xb4\xc6\x02\x75\x38\xe9\x00\x3c\xa1\x75\xd2\xe8\x1a\xf2\xf4\x90\x16\x37\xd0\x49\x04\xdc\x68\xb2\x4c\x6a\x4a\x2e\xe0\x22\xcd\x61\x75\x01\x48\xdd\x1a\xdb\x33\x8a\xdf\xe0\xb0\x67\x9a\x24\xbf\xc8\xa3\x34\xf1\x76\x98\xd4\x68\x6b\x58\xc1\x65\xe1\x60\x74\x28\x80\x0c\x0c\x68\x3d\x32\x52\x83\xc1\xa2\x90\xdc\xdb\x4c\x60\xf9\x5b\x41\x3f\x2a\x92\x83\x42\x18\x14\x23\x8f\x77\xc0\x99\x86\x06\xc1\x0d\xc8\x65\x2b\x51\x24\x00\xac\x17\xfb\xaa\x0e\x9a\xa7\x61\xac\xc1\x32\x39\x58\xf3\x09\x39\x65\x9c\xd9\x5e\x6d\xb8\x0f\x4d\x1d\x60\x1b\x3e\x8c\x01\xc9\x7f\x88\x3c\x05\xe4\x30\xf0\x7d\xa5\xb0\xfe\xa1\xd2\x04\x9c\xd4\xfe\x9b\xca\x35\x56\xa0\xe3\x56\x0e\x14\x62\xfd\x4b\x02\xf0\xbe\x93\x6e\x8a\x8b\x74\x21\x7f\x16\xdd\xa8\xc8\x97\x40\x6b\x94\x32\x67\xa9\x4f\x61\x3f\xa4\x1c\xde\xf6\xec\x14\x2a\x25\xea\x84\xf4\x79\x84\xd4\x8e\xec\x18\xa2\xea\x52\x78\x4b\xde\x1a\x03\x8b\x83\x92\x3c\xe6\xcf\xb4\x4b\x79\x40\xe4\xd1\xa0\xf0\x69\xf5\xdb\xbf\x29\x7c\xf6\x66\x87\xb1\xb9\x68\x9c\x25\x75\xe0\x4c\x8f\x20\x64\x3b\x95\xaa\x4b\x13\x80\x37\xcb\x32\x94\xa4\xa1\x85\x48\x50\x8a\x7e\x28\x79\xea\xc8\xef\x09\x46\x6c\xc3\xc6\x53\x8f\x9a\x82\xe9\x9f\x13\x08\x18\x63\x05\x5a\xcf\x6c\x30\x46\x79\x24\xd3\x02\xb4\x2f\x2a\x25\xbf\x44\x12\x8a\xbd\xf8\x52\x92\x0e\xdc\x59\x12\xef\x50\xc0\x9d\xd4\x30\x77\xcc\xfa\xa2\x2a\x1d\x08\xa3\x11\x1a\x6c\x8d\xc5\x5b\x2b\xaf\xd2\xaf\x42\xed\x34\x1b\x5c\x67\x42\xa0\x25\xa1\x8d\xa7\x6d\x8b\x7c\x9d\xe7\x79\x0a\xef\x3b\x6f\xc9\x11\x3c\x31\x25\x45\x14\x4e\x65\xcc\x34\x47\x10\xa3\x0d\x89\xb9\xb8\xcd\xdc\x8d\x99\xad\x37\x13\x83\x71\x65\x81\x71\x3e\x5a\xc6\x5f\x60\x77\x9f\x56\x45\xf9\xbf\xe0\xaf\x32\xce\x41\x91\x1e\xca\x6d\x79\xf8\x17\x4f\xd3\xf8\x56\xf2\x99\x24\x33\x6c\x8a\x5b\xfd\xa8\x1d\x45\xbb\x45\x74\xc8\xbd\xc8\xc4\xb4\x5e\x9d\xed\x7c\xb0\x46\xe7\xc9\x7e\x1a\x1d\x05\x31\x47\x4d\x68\x81\x5b\x33\xf8\x93\xef\xfe\x72\x73\xb5\xb1\x27\xb4\xec\x14\x26\x51\x91\x07\x80\x5b\xc3\x5d\x05\x3f\x41\x31\x69\xbd\x82\xff\x43\x09\xbd\xb4\xd6\xd8\x35\xb8\xce\x8c\x4a\x4c\x84\x81\x41\x23\x09\x3a\x79\xea\xd0\x2e\xcc\x1c\x49\xa5\xd2\x57\xb7\x2e\xfa\xc0\x85\x28\xa2\x80\xe6\x05\xfe\xc0\xb6\x85\x37\x46\xb3\x6e\x44\xf8\xf5\x13\xb6\xad\x88\x8b\xc4\xe2\xa5\xe6\x60\x05\xcb\x2a\x0c\x18\x36\xf8\x22\xc9\xe0\x8c\x8d\x93\x84\xfe\x13\x89\xa7\xe9\x5c\xe8\xb3\x5b\xf3\x70\xdc\x40\x47\x34\xb8\x3a\xcb\x4e\x92\xba\xb1\x49\xb9\xe9\x33\x3f\x94\xb3\xd0\xb3\x19\x59\xc4\xac\x67\x8e\xd0\x66\x41\xc7\x65\xcd\x93\xe2\xc7\xcb\xb1\xc7\x80\xd3\x48\x17\x63\x75\x96\x45\x1a\xa9\x96\x83\x4b\x39\x8f\xcb\xac\x3a\x94\xd5\x46\xfa\xb6\xd5\x48\x1b\xae\x98\x73\xb2\x9d\x5a\x6c\xe3\x0b\x64\x23\x10\x87\x0d\x37\xfa\xc9\xa8\xd1\xef\x32\xb5\xd1\x38\xda\xf0\x8f\xfc\xc0\x76\xe9\x20\xda\x64\x05\x4a\x72\xd4\x0e\x6f\x5a\x39\x99\x36\x6b\x18\xb5\x45\x47\x56\x72\x42\x91\xac\x40\xea\x61\xa4\x10\x9d\x05\x1b\xf7\x7c\xcf\xae\xa0\x95\xd6\x51\x44\x01\xbd\x0c\xf8\xd5\x05\xb2\x09\xdb\x35\x04\xee\x49\x9c\xd1\x57\xf3\x6b\x66\x71\x65\x27\x80\x6e\x46\x9c\x07\xc4\x23\x16\x2b\x03\xf3\x17\x11\xa1\x0d\x89\x0c\x47\x2f\x5b\xd3\x95\x20\x64\x8f\xda\x5f\x31\xae\x86\x0f\xdb\x35\x94\xe5\x7d\xf8\xf9\x38\xc9\x7b\x64\xba\x86\x0f\x45\xb9\x5d\x43\x51\xdc\xaf\xa1\xc8\xab\x8f\x89\x19\x69\x18\x29\xba\xe7\x4f\x0e\xb6\x27\x9a\x51\xe6\xe7\x4e\x70\xaa\x45\x46\xa3\xc5\x00\x65\xdf\x72\x2b\xe2\x17\x66\xc9\x37\x3c\x9b\x30\x8a\x35\x21\x60\x57\x8e\x4d\xe1\xfa\x96\x73\xd3\xc9\xee\x38\x5a\x55\xcf\x95\xe3\x27\x64\x2a\x7a\xc5\xd3\x5e\x65\xfd\xb3\x46\x9a\xcb\x6e\xae\x9c\xcc\xbd\x68\x87\x94\xd2\x33\xdd\x9a\xe1\x1d\xf2\xcf\x6e\xec\x6b\xa8\x44\xb9\xad\x9a\xdd\x61\xbb\x65\x9c\x55\xd5\xeb\xf2\x90\xef\x77\xac\x38\xe4\xa2\xd9\xe6\xc5\x9e\x25\xc1\xa4\x0f\xfa\x7c\xa1\xce\x4d\x78\xb2\x6c\xe8\xc2\x38\x39\xa3\x1f\xda\xce\xdf\x42\x66\xb4\x1c\x3d\xe7\x86\x39\xbc\x61\xeb\xb6\x29\xeb\xd9\x17\xa3\xd9\xd9\x85\xce\x71\x64\x2c\xa6\xe1\xd2\x4b\x8d\x3d\xcd\xdc\x43\x8f\x94\xc7\xf0\x00\xf9\x5e\xff\x1c\x8b\x34\x4f\x20\x32\x38\x0e\x8c\xba\x7a\x7e\x20\x1c\x35\x52\x3a\x34\x09\xcc\xa4\x26\xb1\xd4\xf2\x22\x4b\x00\xa4\x3b\x32\xcb\x3b\xf9\xe4\xb3\xca\x94\x43\x58\x81\x6c\xe3\xb8\xa3\x0e\xe3\x1c\x9c\x5d\x88\xd7\xa2\xff\x20\x03\x4c\xc3\xa4\x79\xfd\x10\xb9\x7a\x91\x78\xcd\x85\xd8\x75\x7c\xe2\x46\x30\x2f\x50\x1b\x42\xff\xfd\x1d\x2b\xad\x54\x18\x9e\x6d\x6e\xae\xad\xaf\xc3\xed\xe7\xc0\x74\x13\x2f\x94\xe2\xd1\x4b\x7e\x8b\xfd\x0e\xd9\xae\x2a\xcb\x82\xf3\x2a\x47\x7e\xdf\x16\x15\xee\x8a\x43\x71\x7f\x10\xfb\x43\xb5\xbb\x8a\xd4\x95\x12\x2f\x9b\xb2\xe2\xac\xe5\x7b\xdc\xe7\xc5\xb6\xd8\x95\xc5\xa1\xe2\xf7\xfb\x1d\xc7\x43\x8b\xaf\x13\x46\x64\x65\x33\x52\x9c\xab\xf8\x4c\x96\xc1\x34\x77\x60\x91\x25\x00\x9f\xa5\x16\x35\x3c\x3c\x3e\x4e\x91\xf1\x6b\xef\x51\x9c\x55\x17\x9d\xbb\x87\xc7\xc7\x35\xbc\xf3\x3f\x69\x1a\xa6\xfd\x7c\x49\x1e\x7d\x95\x3b\xa4\x7a\x79\xc5\xac\x60\xda\xbb\xbc\x15\xc3\x14\x9a\x14\x12\x80\x9e\x69\xd9\xa2\xa3\x23\x1b\xa9\x33\xb6\x06\xd6\x88\x51\x89\xe4\x9f\x00\x00\x00\xff\xff\xb1\xeb\xf1\xab\x47\x0b\x00\x00"

func bvlcReferenceCaffenetYmlBytes() ([]byte, error) {
	return bindataRead(
		_bvlcReferenceCaffenetYml,
		"BVLC-Reference-CaffeNet.yml",
	)
}

func bvlcReferenceCaffenetYml() (*asset, error) {
	bytes, err := bvlcReferenceCaffenetYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "BVLC-Reference-CaffeNet.yml", size: 2887, mode: os.FileMode(420), modTime: time.Unix(1506278829, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _bvlcReferenceRcnnIlsvrc13Yml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x56\x4d\x8f\xe3\x38\x0e\xbd\xfb\x57\x10\xc8\x65\x17\xa8\xd8\xf9\xaa\x4a\x95\x0f\x8b\x45\x17\xb0\x8b\x06\x7a\x72\xa8\x1e\xf4\x65\x30\x08\x68\x89\x8e\xd5\x65\x4b\x06\x45\x27\x95\xf9\xf5\x03\xc9\x5f\xa9\xe9\x9a\xe9\x1c\x02\x5b\x7a\xa4\xc8\xc7\x47\xca\x16\x1b\xca\xe1\xd3\xb7\x2f\xcf\xcb\x17\x2a\x89\xc9\x2a\x5a\xbe\x3c\x1f\x0e\xcb\xcf\x5f\xbe\x7e\x7b\x79\x5e\x6f\x61\x01\x01\x04\xae\x84\xab\xeb\x18\x1a\xa7\xa9\x4e\x4a\xc6\x86\x2e\x8e\x5f\xf3\x04\xa0\x77\xf2\x8c\x65\x49\x1b\x58\xc0\xb4\x07\xa5\x63\x90\x8a\x06\x1b\x80\x33\xb1\x37\xce\xe6\xb0\x4a\x1f\xd3\xf5\x3b\xe8\xb0\x05\xca\x59\x61\x34\x56\x92\x09\xbc\x4e\x57\xb0\x98\x00\xc6\x96\x8e\x1b\x94\xfe\x19\x3c\x35\x68\xc5\xa8\x69\xbf\xdf\x4d\x82\x1f\x34\x96\x38\x87\x05\x4c\x2f\x1e\x3a\x4f\x1a\xc4\x41\x4b\x1c\x90\x7d\x68\xd0\x32\x69\xa3\x82\xcf\x04\xe6\xdf\x02\x9a\xae\x16\xd3\xd6\x04\x6d\x8d\x12\xf0\x1e\x14\x5a\x28\x08\x7c\x4b\xca\x94\x86\x74\x02\x80\x8d\x7e\xd8\xe5\xd1\xf2\xd4\x76\x39\x30\x9a\x96\xdd\x77\x52\x92\x29\xe4\xa6\x5e\xaa\x40\x4d\x1e\x61\x4b\xd5\x76\x11\xa9\x7e\x8a\x3c\x45\x64\xdb\xaa\x87\x5d\x4d\xf9\x4f\x8d\x06\xe0\x60\xf6\xcf\xa1\xdc\x62\x35\x79\xc5\xa6\x95\xc8\xf5\x7f\x12\x80\x5f\x2b\x82\xb6\x63\xea\x2b\x0a\xc6\x7a\x09\x14\xf7\x94\xbb\x32\x56\xf4\x65\xf9\x7c\x38\x0c\xe4\x85\x2a\x4f\x6a\xd1\x24\x14\x89\x4c\xa3\x27\xe3\x07\xd0\x05\x3d\x34\xa8\x09\x8a\x2b\x08\xa3\xf5\x6d\x1d\x9c\xda\xd3\x8d\xbb\xaf\xdf\x7e\x01\x55\xa3\xf7\x81\x58\xf6\x60\xac\x38\x40\x28\xd5\x92\x95\xb5\xd3\x96\xea\x23\xa9\xf1\x4a\x7c\x07\x2d\xbb\xb3\xd1\xa4\xa1\x22\x26\x40\x0f\x18\x82\x2c\x97\x52\xd1\xd2\x57\x54\x97\x43\x1a\x7d\x60\x8e\x63\x5c\x7c\x8d\xc7\x4e\xc1\x02\xbd\x61\x13\xea\x2c\x0e\x3c\x11\x18\x09\xda\xc2\x29\x91\x43\xfa\x29\x85\xff\x39\x06\x26\x4f\xc8\xaa\x0a\x04\xb5\xce\x93\xbf\x83\x06\x5f\x29\xc8\x6a\xa4\xc6\x95\xa5\x51\x06\xeb\x21\xa9\x16\xd5\x2b\x9e\x08\xd0\x6a\xb0\x4e\x40\x02\x27\xc3\x71\x1f\x70\x14\xc5\x4f\x3a\xd0\xf4\xe2\xbc\x87\xff\x1b\xf6\x95\x51\xaf\xf0\x5f\x2e\x4e\xc3\x73\xc2\x63\xab\xfa\xa0\xee\xf9\x2d\x0a\x1b\xdb\xc0\x5d\x06\x17\x2a\xbc\x11\x0a\x8f\x24\x2a\x4d\xa1\x2f\x74\x31\x72\x3e\x36\xe5\x12\x2a\x91\xd6\xe7\x59\x76\x32\x52\x75\x45\xaa\x5c\x93\x85\x89\x90\x45\xad\x64\xc2\x44\x59\x83\x5e\x88\xb3\x68\xe3\xb3\xe2\x5c\xab\xe3\x74\xec\x31\x54\xe7\x68\x6a\x7f\x66\xb5\xde\xbe\xf3\x88\xfc\x66\xce\xa9\xe3\x53\x86\x85\xcf\xd6\xdb\xf5\x3a\xdd\xdc\x6f\x76\x13\x26\xcf\x32\x5b\x9c\x0d\x5d\x88\xd3\xef\x5d\x7b\x15\xe2\x88\xee\x23\xb9\x8d\xa2\xa8\x5d\x31\x46\x31\xb0\xe7\xb3\x59\x6c\xa6\xbd\xda\x22\x59\x40\x6d\x14\xd9\xb9\x16\x7d\x8e\xc3\x62\x0e\x9d\x65\xf2\xc2\x46\x09\xe9\x64\x01\xc6\xb6\x9d\x44\xd2\x66\x6c\xbf\x16\xba\x6d\x01\xa5\x61\x2f\x3d\x0a\xe4\xda\xd2\x0f\xf3\x6c\x19\x97\x73\x30\x0d\x9e\x28\xe9\x47\xc6\x4d\x3b\x8d\x51\xdc\xf8\x89\xa0\x77\x1d\x17\x00\xfd\x11\xb3\x97\x16\xc3\x5c\x14\xe2\x58\xdf\x78\xf4\xbc\x34\x4c\x28\x6d\x1a\xb2\x61\xe2\xf9\x1c\x7e\xdb\xde\xc1\x66\xb3\x8f\x7f\xbf\x27\xae\x93\xb6\x93\x3e\x85\xe0\x3d\xda\x8f\xe2\x8c\x7b\x09\x0c\x81\x97\x84\xd2\x31\x45\x28\x7e\x14\x7a\x8f\x9f\x4f\x4f\x3e\x88\x7e\xc0\xd4\x58\x44\x52\x6e\x82\x1f\x28\xf9\x28\x81\xe1\x64\x7f\xec\xb8\xce\x27\xbd\x30\x5e\xd2\xbe\xf6\x9d\x27\x0e\x63\x9b\xac\x44\x41\x32\x9a\xe5\xfb\x49\x36\x68\x71\xd0\x84\x46\xc1\x6c\xd0\xe0\x26\x08\xe3\xe8\xaf\xd6\x93\x1c\x2f\x8e\xb5\x4f\xe5\x4d\xde\x1f\xab\x2a\x52\xaf\xbe\x6b\x72\xd8\xe9\xcd\x76\x57\xdc\x3f\x6e\xb7\xa8\x70\xb7\x7b\xda\x3c\xae\x1e\xee\x71\xfd\xb8\xd2\xc5\x76\xb5\x7e\xc0\x24\x1e\x14\x0a\x31\xce\xfc\xb1\x5f\x4f\x8c\x6d\x15\x1b\xfb\x42\xe6\x54\x89\x0f\xe3\xc1\x75\xac\x28\xe4\x58\xa0\xa7\x39\xbb\x3c\xcb\xfc\x36\xc5\x06\xff\x70\x16\x2f\x3e\xe6\xe4\xc5\x31\xa5\x31\x9b\xa8\xfa\x21\xa3\x28\xf8\xcd\x31\xde\x91\x7f\x69\xb5\x38\x08\x97\x63\xab\x1d\xd7\xe9\x2a\x81\x3e\x8c\x63\x8b\x52\xe5\xe3\x45\x76\xb4\x24\x69\x5b\x24\x30\x46\x36\x6c\x1b\x6b\x6e\xf6\x8c\x3f\x86\x59\x66\xce\x41\x09\x58\x7b\x82\x05\x98\x12\x3c\xc9\x5d\x28\xac\x8d\xd5\x1d\xd3\x00\xe3\x01\x21\x3c\x84\xa1\x6c\x61\xb0\xbc\xbd\x2f\x6f\x2e\xce\x60\x39\xc7\x75\xcb\x51\xbf\x10\xdd\x6b\xb2\x4e\x28\x3c\xff\x8d\x97\xd2\xd4\x14\xbf\x2e\xfc\xa8\xc7\x1f\x29\xbf\x18\xa9\x4c\x1f\xea\x1c\x52\x7f\xf4\x5c\xe3\xa7\x87\x55\xf1\x40\xb8\xc7\xdd\x6e\xb3\x5d\xe9\xfd\x7d\x59\x3e\xdd\xe3\x7e\xbb\x7f\x5a\xed\x0a\xbd\xdb\xde\x10\x35\x1b\x15\xf7\x8f\x4a\x13\xe9\x27\xbd\x5e\xef\xa9\x28\xb7\xeb\x02\xb5\x7a\xdc\xd3\x9e\x74\xb9\x5f\x53\x82\x22\x6c\x8a\x4e\xfa\x31\x4c\x6f\xc2\x08\x96\x24\x7e\xcf\xcc\x7b\x09\xc0\xab\xb1\x3a\x87\x70\x1b\xf4\xcc\x84\xf7\x90\x91\xa5\x8e\xb1\x9e\x6c\xfe\xf5\x7c\x38\xdc\xc1\x4b\xf8\x4b\xd3\xf4\xdf\xa1\x4b\xc3\x6d\x60\xec\xe9\x18\xe4\xed\x49\x72\xf8\x1c\x86\xc4\x81\x24\x4c\x9a\x7e\x6d\xfa\xa4\x89\xd3\x69\x30\x48\x00\x1a\xb4\xa6\x24\x2f\x47\xec\xa4\x72\x9c\x03\x16\xba\xab\x75\xf2\x67\x00\x00\x00\xff\xff\x55\x8a\xf6\x2b\xf3\x09\x00\x00"

func bvlcReferenceRcnnIlsvrc13YmlBytes() ([]byte, error) {
	return bindataRead(
		_bvlcReferenceRcnnIlsvrc13Yml,
		"BVLC-Reference-RCNN-ILSVRC13.yml",
	)
}

func bvlcReferenceRcnnIlsvrc13Yml() (*asset, error) {
	bytes, err := bvlcReferenceRcnnIlsvrc13YmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "BVLC-Reference-RCNN-ILSVRC13.yml", size: 2547, mode: os.FileMode(420), modTime: time.Unix(1506278833, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _squeezenet_v10Yml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x55\x4b\x8f\xdb\x36\x10\xbe\xeb\x57\x0c\x60\x04\x68\x81\x5d\x3d\x6d\xc7\xd5\xa1\x40\x9a\x5e\x72\xf1\x21\x39\x06\x81\x31\x22\x47\x16\x1b\x3e\x14\x72\xb4\xde\xcd\xaf\x2f\x48\xc9\x96\x17\x49\x1b\x1f\x0c\x91\xf3\xcd\xeb\xe3\xf0\xa3\x45\x43\x2d\x7c\xfa\x36\x11\x7d\xa7\x23\x31\x6c\x20\x6e\x81\xeb\xe1\xc5\x4d\x1e\x8c\x93\xa4\xb3\xde\xa3\xa1\x8b\xf3\x5f\xdb\x0c\x60\x76\x79\x8f\x7d\x4f\x35\x6c\xe0\x66\x83\xde\x79\xe0\x81\x16\x1f\x80\x27\xf2\x41\x39\xdb\x42\x99\x1f\xf2\xea\x15\x74\x31\x81\x70\x96\x3d\x2a\xcb\xd9\x0d\x5c\xe5\x25\x6c\x6e\x00\x65\x7b\xe7\x0d\xf2\xfc\x0d\x81\x0c\x5a\x56\xe2\x66\x9f\xad\x59\x8c\x83\xca\x92\x6f\x61\x03\xb7\x45\x80\x29\x90\x04\x76\x30\x92\x8f\xc8\xb9\x34\x18\x3d\x49\x25\x62\xcc\x0c\xd6\xdf\x06\xcc\xa4\x59\x8d\x9a\x60\xd4\xc8\x11\x1f\x40\xa0\x85\x8e\x20\x8c\x24\x54\xaf\x48\x66\x00\x68\xe4\x7e\xdb\x26\xcf\xf3\x38\xb5\xe0\x51\x8d\xde\xfd\x43\x82\x0b\x81\xde\xe8\x47\x11\xa9\x69\x13\xec\x51\x8c\x53\x42\x8a\x5f\x22\xcf\x09\x39\x8e\x62\xbf\xd5\xd4\xfe\xd2\x69\x01\x2e\x6e\xff\x5f\xca\x3d\x56\x52\x10\x5e\x8d\x9c\xb8\xfe\x33\x83\xeb\xd9\x5b\x62\x40\x31\x28\x7a\xa2\x00\x41\x19\xa5\xd1\x83\xa7\x30\x69\x0e\x91\xc1\x77\x9a\x9e\x8f\xc4\x0f\x80\x0c\xbb\xf2\x19\x7a\xba\x90\x87\x11\xe3\x91\x72\xa4\x1a\xad\x84\xaa\xd8\x95\x25\x0f\x69\x0a\x82\xfa\x4e\x79\x8c\x6f\x50\xeb\x99\xf8\x00\xe8\xe3\x78\x78\x82\x9e\x30\xa8\x4e\x53\x0c\x2d\x69\xd4\xee\x05\x9c\x85\x01\xbd\xbc\x44\xcc\x45\xf1\x00\x5a\x19\xc5\x24\xc1\x90\x71\xfe\xe5\x01\x3c\x7d\x9b\x94\x27\xd0\x14\x42\x06\x20\x9c\x31\x93\x55\x62\x1e\x0e\x39\x79\x65\xcf\x20\x55\x60\xaf\xba\x29\xfa\xa5\xc9\x52\xf6\xfc\x90\x6a\x8b\x61\x63\x52\xf2\x29\xe7\x0d\x17\x57\x42\x2b\xb2\x1c\xf2\x95\x8e\xe3\x3d\x1d\xbb\xb7\xf9\xee\x4d\x0a\x72\x28\xf3\xe6\x0d\xb0\x1b\x1f\xab\xb4\x8e\x5f\x3b\x40\x31\x79\x14\x9c\x5a\xf8\x60\xf0\x1c\xbd\xf3\xcc\x53\x4f\x9e\xac\xa0\x10\x87\x72\x5d\xa5\x79\xc4\x31\x72\x56\xc0\x85\xba\xa0\x98\xe2\x27\xb1\xc8\x73\x98\xcf\xa7\x8b\xbd\xdc\xdf\xa5\x47\x18\x98\xc7\xd0\x16\xc5\x59\xf1\x30\x75\xb9\x70\xa6\xf8\x9b\x68\xfc\x24\x50\x53\xb1\x56\xfd\x0a\x8b\xfe\x59\x3d\xe5\xce\x9f\x0b\xec\x42\x51\xed\xcb\x3a\x2f\xdf\x36\xfb\x32\xdb\x80\x56\x82\x6c\x48\x17\x7d\xcd\xb3\x6c\xb6\xf0\xd7\xbb\x0f\x1f\xb3\x0d\x28\x3b\x4e\xf3\xf1\xaf\x98\x79\x2f\x0e\xe8\x06\x7a\xe5\x03\xcf\x28\xe0\x97\x91\x7e\x90\x80\xc7\xb4\xdd\x82\x8a\xac\x64\xf3\x2d\xbb\x9b\xc0\x6b\xf6\xbb\x38\x09\xf4\x6a\x48\x23\x60\x4e\xb1\x46\x59\xe7\x2e\x72\x9b\x52\xaf\x5b\xcb\xa5\x96\xca\x90\x8d\x22\x11\x5a\xf8\xdc\x3c\x40\x5d\xbf\x4d\x7f\x5f\x16\xbb\x21\xb4\x2d\x7c\xae\xea\xc3\x03\x5c\xff\xbe\x64\x6e\xe2\x71\xe2\xb9\xbd\x98\x39\xc5\x5e\xca\x9c\x6d\x19\x2c\x4d\xf5\x84\x3c\x79\x4a\x50\xfc\x59\x5b\x33\x7e\xad\x2c\xfb\x49\x67\x0b\x46\x63\x97\x08\xbb\x6b\x6c\xa1\xeb\x67\xcd\x2d\x99\xc3\x69\xf2\xba\x4d\xa7\xdd\x16\x85\x44\xc6\x5c\x1a\x2d\x72\xa3\x0b\xf3\x6c\x89\x8b\xf9\xd6\x15\x89\xb7\xb8\x0e\x2f\x36\x10\xe7\xfc\xcc\xaf\xc3\x88\x81\xc4\xd7\x30\x99\x16\xb6\xb2\x6e\xb6\xdd\xee\xd0\x34\x28\x70\xbb\xfd\xa3\x3e\x94\xfb\x1d\x56\x87\x52\x76\x4d\x59\xed\x31\x4b\x21\x23\xe9\x57\x49\x0c\x8b\xa8\x9e\x3d\x8e\x43\xba\x14\x17\x52\xe7\x81\x43\x54\x0f\x37\x79\x41\xb1\xe6\x0e\x03\xbd\xaa\x36\x34\x39\x1a\xfc\xee\x2c\x5e\x42\x1a\xe6\xc0\xce\x53\x9e\x64\x2b\x4d\xec\x52\x7b\x52\xb0\xfa\x94\x9e\x90\x22\xdc\xb4\xea\x54\xe5\x65\x06\x73\xd2\xd3\x88\x3c\xb4\x57\x55\x3f\x59\xe2\x7c\xec\x32\xb8\xd6\xb1\x98\x95\x55\x77\x36\x15\x4e\xe8\xc5\xa0\x9e\xe2\x39\xa2\x0e\x04\x1b\x50\x3d\x84\xa8\x70\x3c\x90\x4d\x67\x73\x2d\x1a\x54\x00\x84\xf8\xc1\x0e\xd0\xc2\xe2\x79\xff\x78\xdc\xbd\x22\xd1\x73\xad\xeb\x9e\x91\x79\x23\x85\x97\x64\x5d\xd4\x9e\xe1\xbf\xa2\xf4\x4a\x53\x7a\x6a\xc3\x75\x9a\x7e\x24\x38\xaa\xa4\x9a\x4b\x5d\x4b\x9a\x53\xaf\x27\x2a\x69\x7b\x38\x94\x55\x23\xfb\xae\x2f\x77\xe5\x76\x5f\x55\x87\x52\xec\x77\x95\x14\xbb\xaa\x29\xef\x89\x5a\x9d\xea\xb2\xa9\x45\xd3\xd7\x55\x2f\x50\xf6\xb4\x25\xb1\xc3\x6e\x5f\x0a\x92\x54\x6f\x71\xbb\xcf\x90\x17\xf9\x4c\x17\x90\x9e\xd9\x23\x58\xe2\xf4\xb8\xaf\xb6\x0c\xe0\xab\xb2\xb2\x85\xf7\xc7\xe3\xc2\x4c\x5c\xc7\x8e\x2c\x4d\x1e\xf5\xcd\xe7\xb7\xf7\xc7\xe3\x03\x7c\x8c\x7f\x79\x9e\xff\x1e\xef\xd8\xa2\xde\xa7\x38\xd7\x81\xb8\xbd\x49\x6b\xd4\x90\x79\xef\xf6\xbe\x27\xdd\x59\x1c\x32\x00\x83\x56\xf5\x14\xf8\x84\x13\x0f\xce\xb7\x80\x9d\x9c\xb4\xcc\xfe\x0d\x00\x00\xff\xff\x16\x53\xfa\x4b\xee\x08\x00\x00"

func squeezenet_v10YmlBytes() ([]byte, error) {
	return bindataRead(
		_squeezenet_v10Yml,
		"SqueezeNet_v1.0.yml",
	)
}

func squeezenet_v10Yml() (*asset, error) {
	bytes, err := squeezenet_v10YmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "SqueezeNet_v1.0.yml", size: 2286, mode: os.FileMode(420), modTime: time.Unix(1506278836, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _squeezenet_v11Yml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x55\xcd\x6e\xe3\x36\x10\xbe\xeb\x29\x06\xf0\xa5\x05\x12\xc9\x96\x64\xaf\xad\x43\x81\x36\xa7\xbd\xe4\xb0\x3d\x2e\x16\xc6\x88\x1c\x59\x6c\x24\x8a\x25\x87\xb1\xd3\xa7\x2f\x48\xca\x96\x83\x4d\x1b\x1d\x04\x92\xf3\xcd\xef\x37\x1c\x6a\x1c\xa9\x81\x3f\xff\xf6\x44\xff\xd0\x33\x31\xac\x20\x1c\xc1\xd4\xc1\xdb\xe4\x2d\x8c\x93\xa4\x21\xeb\x2c\x8e\x74\x9e\xec\x4b\x93\x01\x24\x95\x27\xec\x3a\x2a\x61\x05\x37\x19\x74\x93\x05\xee\x69\xd6\x01\x78\x25\xeb\xd4\xa4\x1b\x58\xe7\xfb\x7c\xf3\x0e\x3a\x8b\x40\x4c\x9a\x2d\x2a\xcd\xd9\x0d\xbc\x89\xd0\x2b\x40\xe9\x6e\xb2\x23\x72\x5a\x83\xa3\x11\x35\x2b\x71\x93\x27\x69\x16\xec\xa0\xd2\x64\x1b\x58\xc1\x6d\xe3\xc0\x3b\x92\xc0\x13\x18\xb2\x01\x99\x42\x03\x63\x49\x2a\x11\x6c\x66\xb0\x7c\x2b\x18\xfd\xc0\xca\x0c\x04\x66\x40\x0e\x78\x07\x02\x35\xb4\x04\xce\x90\x50\x9d\x22\x99\x01\xe0\x28\x77\x75\x13\x35\x4f\xc6\x37\x60\x51\x19\x3b\xfd\x45\x82\x0b\x81\x76\x1c\x1e\x45\x2c\x4d\x13\x71\x8f\xc2\xf8\x08\x15\x9f\x43\x4f\x11\x6a\x8c\xd8\xd5\x03\x35\x9f\x6b\xcd\xc8\x59\xef\x93\x68\xee\xc1\x92\x9c\xb0\xca\x70\xac\xf7\x6f\x19\xdc\xf3\xff\x1a\xea\xdf\xa3\x83\x32\xaf\x2f\x30\x90\x73\x20\xa6\xd1\x78\x4e\x1c\x70\x8f\x3a\x60\xd6\x0f\x70\x56\xdc\x4f\x9e\xc1\xa1\xb0\xaa\x53\x42\xe9\x13\xa0\x10\xde\xa2\x78\xcb\x33\x4b\x1d\x59\xd2\x82\x5c\xa0\x64\xd9\x45\x36\xd0\x04\x72\x0a\x38\x53\xeb\x14\x53\x58\x12\x8b\x3c\x87\x14\x59\x1b\x4c\xdd\x77\xd2\x23\xf4\xcc\xc6\x35\x45\x71\x52\xdc\xfb\x36\x17\xd3\x58\xa4\xc4\x8a\x88\x71\x05\x5b\xa2\x62\x44\xc7\x64\x0b\x97\xd2\xd1\xc4\xef\x74\xd1\x5e\xd4\x6b\x3e\xd9\x53\x81\xad\x2b\x36\xbb\x75\x99\xaf\xbf\x54\xbb\x75\xb6\x82\x41\x09\xd2\x2e\xb6\xfd\xe2\x77\x3e\x6c\xe0\x8f\xdf\xbf\x7e\xcb\x56\xa0\xb4\xf1\x1c\x13\x58\x30\xe9\x2c\x90\xb5\x82\x4e\x59\xc7\x09\x05\xfc\x66\xe8\xa7\x0b\xf1\x18\x8f\x1b\x50\x23\x9e\x28\x4b\x3d\x77\xc7\xc5\xd5\xfb\x9d\x9d\x08\x7a\x47\x57\x00\x24\x17\x8b\x15\x83\xe1\x62\x31\xd9\x58\xeb\xe8\x7a\x39\x9a\x5b\x5c\xaa\x91\x74\xb8\x32\xae\x81\xef\xd5\x03\x94\xe5\x97\xf8\xfb\x31\xcb\x47\x42\xdd\xc0\xf7\x4d\xb9\x7f\x80\xeb\xef\x47\x36\x79\x36\x9e\x53\x7a\xc1\x73\xb4\x3d\x87\x99\x64\x19\xcc\x49\x75\x84\xec\x2d\x45\x28\x7e\x94\x56\xc2\x2f\x91\x65\x1f\x64\x36\x63\x06\x6c\x63\xc1\xee\x12\x9b\xcb\xf5\x51\x72\xb3\x67\x77\xf4\x76\x68\x22\xdb\x4d\x51\x48\x64\xcc\xe5\x38\x88\x7c\x1c\x8a\xf1\xa2\x89\xaf\x9d\x12\xeb\x16\xf6\xee\x4d\x3b\xe2\x9c\x2f\xfc\xde\x8c\xe8\x49\xbc\x38\x3f\x36\x50\xcb\xb2\xaa\xdb\xed\xbe\xaa\x50\x60\x5d\x1f\xca\xfd\x7a\xb7\xc5\xcd\x7e\x2d\xdb\x6a\xbd\xd9\x61\x16\x4d\x86\xa2\x5f\x07\x84\x9b\x47\xcc\xc9\xa2\xe9\x01\xb5\x84\x33\xa9\x53\xcf\x0e\x2c\xb9\xc9\x5b\x41\x21\xe6\x16\x1d\x2d\xd1\xfe\x6f\x5f\x5b\x3c\x7f\xd8\xd6\xd1\xc1\xd1\x20\xf7\xcd\x75\x9e\x1d\x35\x71\x6e\xda\x0c\xae\x3e\x67\x31\x5d\x48\x2c\x32\xe5\x8e\x68\x45\xaf\x5e\x03\x67\x38\x38\x82\x15\xa8\x0e\x1c\xf1\x43\xa0\x40\x47\x1e\xae\x01\x82\x72\x80\x10\x16\x3c\x01\x6a\x98\x35\xef\xc7\xe6\xdd\xfc\x0c\x9a\x4b\x5c\xf7\xd9\xa7\x83\x68\x5e\x92\x9e\x98\xc2\xfa\x3f\xac\x74\x6a\xa0\xf8\xc8\xb8\x6b\xe7\xfc\x5c\xcc\x30\x7b\x54\x0a\x75\x09\x29\xb9\x5e\xd8\xdb\x1d\xea\xb6\x93\x72\x5d\xd2\x41\x88\x76\xfb\xa5\xed\x44\x8d\xa2\xad\xb7\x9b\xae\xed\xda\x52\xde\x15\x6a\x51\xc2\xed\xfe\x20\xab\x8d\x3c\x54\xa2\xae\x65\xb5\xad\x90\x4a\x21\x0f\x25\x76\xb5\xdc\x62\xd5\x65\xc8\x6c\x55\xeb\x39\x0d\x36\xba\xb0\x45\xd0\xc4\xf1\x59\x5b\x64\x19\xc0\x8b\xd2\xb2\x81\xa7\xe7\xe7\xb9\x32\x61\x1f\x32\xd2\xe4\x2d\x0e\x37\x9d\x5f\x9e\x9e\x9f\x1f\xe0\x5b\xf8\xe5\x79\xfe\x6b\xb8\x4f\xe1\x45\x54\xfa\x74\x0c\x3d\xec\x88\x1b\xf8\x1a\x5a\x36\xbd\xce\xf3\xd9\xed\x65\x8b\x33\x66\x56\xc8\x00\x46\xd4\xaa\x23\xc7\x47\xf4\xdc\x4f\xb6\x01\x6c\xa5\x1f\x64\xf6\x6f\x00\x00\x00\xff\xff\xc5\xff\x9e\xf9\xe8\x07\x00\x00"

func squeezenet_v11YmlBytes() ([]byte, error) {
	return bindataRead(
		_squeezenet_v11Yml,
		"SqueezeNet_v1.1.yml",
	)
}

func squeezenet_v11Yml() (*asset, error) {
	bytes, err := squeezenet_v11YmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "SqueezeNet_v1.1.yml", size: 2024, mode: os.FileMode(420), modTime: time.Unix(1506278839, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"BVLC-AlexNet.yml":                 bvlcAlexnetYml,
	"BVLC-GoogLeNet.yml":               bvlcGooglenetYml,
	"BVLC-Reference-CaffeNet.yml":      bvlcReferenceCaffenetYml,
	"BVLC-Reference-RCNN-ILSVRC13.yml": bvlcReferenceRcnnIlsvrc13Yml,
	"SqueezeNet_v1.0.yml":              squeezenet_v10Yml,
	"SqueezeNet_v1.1.yml":              squeezenet_v11Yml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"BVLC-AlexNet.yml":                 &bintree{bvlcAlexnetYml, map[string]*bintree{}},
	"BVLC-GoogLeNet.yml":               &bintree{bvlcGooglenetYml, map[string]*bintree{}},
	"BVLC-Reference-CaffeNet.yml":      &bintree{bvlcReferenceCaffenetYml, map[string]*bintree{}},
	"BVLC-Reference-RCNN-ILSVRC13.yml": &bintree{bvlcReferenceRcnnIlsvrc13Yml, map[string]*bintree{}},
	"SqueezeNet_v1.0.yml":              &bintree{squeezenet_v10Yml, map[string]*bintree{}},
	"SqueezeNet_v1.1.yml":              &bintree{squeezenet_v11Yml, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
