// Code generated by go-bindata.
// sources:
// builtin_models/BVLC-AlexNet.yml
// builtin_models/BVLC-GoogLeNet.yml
// builtin_models/BVLC-Reference-CaffeNet.yml
// builtin_models/BVLC-Reference-RCNN-ILSVRC13.yml
// builtin_models/SqueezeNet_v1.0.yml
// builtin_models/SqueezeNet_v1.1.yml
// DO NOT EDIT!

package caffe2

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data, name string) ([]byte, error) {
	gz, err := gzip.NewReader(strings.NewReader(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _bvlcAlexnetYml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x56\x5f\x6f\xdc\x36\x12\x7f\xd7\xa7\x18\x60\x11\xc0\xb9\x5b\x51\xab\xb5\x9d\xec\xe9\x80\xc3\xb5\x6e\x1f\x0a\x14\x7e\xe8\xbf\x97\x22\x58\x8c\xa8\xd1\x8a\x09\x45\x12\xe4\x68\x6d\xe7\xd3\x17\x24\xa5\xd5\x1a\x49\x1b\x3f\xac\xa5\x99\xdf\xfc\xe1\x70\xe6\x37\x32\x38\x52\x03\xdf\xff\xf1\xf3\x43\xf9\x9d\xa6\xe7\x47\x62\xd8\x40\x14\x82\xed\xe1\xc5\x4e\x1e\x46\xdb\x91\x2e\x7a\x8f\x23\x3d\x59\xff\xa9\x29\x00\xb2\xd1\x03\xf6\x3d\xed\x61\x03\x17\x1d\xf4\xd6\x03\x0f\x34\xdb\x00\x9c\xc9\x07\x65\x4d\x03\x3b\x71\x10\xf5\x2b\xe8\xac\x02\x69\x0d\x7b\x54\x86\x8b\x0b\xb8\x16\x3b\xd8\x5c\x00\xca\xf4\xd6\x8f\xc8\xf9\x19\x02\x8d\x68\x58\xc9\x8b\x3e\x6b\x8b\xe8\x07\x95\x21\xdf\xc0\x06\x2e\x2f\x01\xa6\x40\x1d\xb0\x05\x47\x3e\x22\x73\x6a\xe0\x3c\x75\x4a\x46\x9f\x05\xac\x7f\x1b\x18\x27\xcd\xca\x69\x02\xa7\x91\x23\x3e\x80\x44\x03\x2d\x41\x70\x24\x55\xaf\xa8\x2b\x00\x70\xec\xde\xdd\x35\xc9\xf2\xe4\xa6\x06\x3c\x2a\xe7\xed\x47\x92\x5c\x49\xf4\xa3\x2e\x65\x2c\x4d\x93\x60\xa5\x74\x53\x42\xca\x6f\x22\x4f\x09\xe9\x9c\x7c\x77\xa7\xa9\xf9\xa6\xd1\x0c\x9c\xcd\xfe\x39\x95\x6b\x6c\x47\x41\x7a\xe5\x38\xd5\xfa\x7f\x05\xc0\x6f\x83\x0a\x73\x5d\x54\x00\x04\x4f\x4e\x2b\x99\x2b\x6e\xfb\xf5\x42\x21\x5b\xb6\xd4\xc5\x8b\x88\xe2\xa5\x65\xdc\xd4\x2e\x16\xa2\x00\xf8\x41\xf5\x3d\x79\x32\x92\x42\x03\xc6\x32\xa4\x1b\x56\xe6\x04\x4f\x8a\x87\x64\xe9\x49\xab\xd3\xc0\x51\xd6\x21\x63\x89\xd3\x69\x24\xc3\xc9\xc5\x7f\x0b\x00\x65\x14\x2b\xd4\xea\x73\x44\x18\x6b\xca\xcf\xe4\x2d\xb4\x0a\x03\x85\x78\x9d\x3b\x51\x83\x32\x81\x09\xbb\x98\x63\x0d\x37\xbd\x9d\x4c\x07\x86\x24\x85\x80\xfe\x25\xf7\xe2\x1c\x77\x0b\x18\x56\x97\xf9\x64\x6c\xa1\x86\x13\x9e\x09\x7a\x8d\x0c\xda\x86\xf0\x56\xa4\x6a\x10\xb4\x93\xe9\x34\x75\x6b\x51\x62\xca\x8a\xc9\x67\xd3\xdb\x77\xbb\xed\x6e\xb7\x83\x60\xd0\x85\xc1\xb2\xc8\x46\x14\x18\xce\xa8\x55\x87\x73\x63\xcd\x3d\x87\x46\x12\x74\x93\x8f\x47\x59\x2b\x11\x33\x5a\x3d\xde\x1f\x92\xc7\x54\x9f\xd5\x07\xa0\x94\x93\x47\xf9\x52\x00\xdc\xbf\x17\xfb\xfb\xc3\x1b\x40\xd3\xa5\x64\xa1\x16\x87\xdb\xff\xdc\x1d\xc4\xf5\xfd\xd9\x36\xf6\x7d\xbc\x44\xb6\xae\xac\x2f\xf6\xd1\xba\xce\xb6\x58\x40\x52\xde\xaf\xca\xc3\x4e\xec\xdf\x80\xcd\x77\x7a\x15\x3d\x10\x6f\x61\x0a\x31\xdd\x8f\x53\xe0\xa4\x96\x64\x98\x3c\x48\x6f\x5d\xac\xd6\xcd\xef\x49\x1d\x35\x78\x26\x8f\xa7\x44\x1c\xf5\x2e\x01\xc2\x16\x6e\xee\xe0\xdf\x50\xcf\x56\x6f\xe1\x5f\xb0\x87\x51\x79\x6f\xfd\x16\xc2\x60\x27\xdd\xcd\x29\xc7\xa9\x82\x56\x31\x0c\xea\x34\x90\xbf\xe4\x26\xde\xbe\x6e\xd0\x58\xb6\x54\x43\xea\xa0\x7d\x81\x1f\xcf\x68\xe0\xd7\x81\xf4\x80\x23\x79\xf8\x7f\x58\x1e\x0b\x4f\x6b\x0b\x6e\x60\x7d\x4b\x5c\x80\x2e\x52\x43\x05\x4f\xd4\x06\xc5\x14\x1f\x89\xa5\x10\x4b\x87\x2f\x47\x5a\x78\xac\x84\x81\xd9\x85\xa6\xaa\x4e\x8a\x87\xa9\x15\xd2\x8e\x55\x24\xcd\x2a\x8d\x57\xc5\x9e\xa8\x1a\x31\x30\xf9\x2a\xd9\x84\xaa\x3d\x6b\x79\x44\x4d\xcf\x86\xf8\xe2\xa1\xa9\xaa\x1c\x5b\x18\xe5\x82\x90\x32\xbf\x56\x77\x87\xfd\x5d\xa9\x46\x3c\x91\x21\x2e\xa5\xc6\x10\x54\x3f\x0f\x54\x19\x7b\xa2\xec\x88\x5c\x29\xad\x39\x5b\x3d\x45\x29\xea\xd2\xd0\xe4\xd3\x3f\x8e\x84\x1a\x84\xeb\xfa\x62\x03\x5a\x49\x32\x81\x5e\x0d\x6e\x31\x0b\x1b\x98\x8c\xa7\xc0\x5e\x49\xa6\xae\xd8\x80\x32\x6e\xe2\x54\x92\x15\x9b\x65\x91\x7e\x36\xd0\x2b\x1f\x38\xa3\x80\x5f\x1c\x7d\x41\xf0\x65\x12\x37\x90\x72\x2f\x32\x87\x5e\xf1\xcb\x92\xc5\x95\x9f\x04\x7a\x45\x41\x69\xb6\x52\x88\xd5\x8b\xc3\xb8\x28\x98\x7c\xba\xbd\x14\x7a\x15\xcd\x94\xdd\xa9\x91\x4c\x5c\x01\xa1\x81\x3f\xeb\x2d\xdc\x6e\x61\xbf\x7f\x9f\x7e\x3e\xcc\x90\x91\xd0\x44\xe5\xfe\x76\x0b\x75\xfd\x7e\x0b\xf5\xee\xee\x43\x61\x27\x76\x13\xe7\x13\xc6\xe0\xc9\xfd\x9c\x69\xd6\xc5\x11\x49\xe7\xea\x09\x79\xf2\x94\xa0\xf8\xb5\x93\x65\xfc\x9a\x5c\xf1\x95\xc3\xcd\x18\x8d\x6d\xaa\xd9\xd5\xd9\xe6\x8a\x7d\xed\x7c\x73\xe4\x70\x9c\xbc\x6e\x96\xe6\x89\x54\x29\xba\x51\x4b\x31\xea\x6a\x8c\xad\xb5\xb4\xdb\xd2\x3c\x55\x78\x31\x81\x58\xf0\x33\x17\x49\x15\xeb\xb7\xec\xae\x65\x88\x4e\x1e\xdd\x90\xc8\xe0\x89\x22\x0b\x07\xf0\x14\xec\xe4\x25\xc5\xd8\x2d\x06\x7a\x15\x35\xdc\x0a\x1c\xf1\xb3\x35\xf8\x14\x52\xe7\x07\xb6\x9e\x44\xda\x2f\xc2\xfa\xd3\x92\x43\x9a\x85\xfd\x31\xed\xfa\x57\xfd\x7f\xac\xc5\xae\x80\x1c\xf6\xe8\x90\x87\x66\x59\xc0\x47\x43\x2c\x5c\x5b\xc0\x92\xc9\xac\x8e\x5c\xbd\xea\x54\x38\xa2\x97\x83\x3a\xc7\x1b\x41\x1d\x08\x36\xa0\xfa\x4c\x4f\x3c\x50\xe6\xad\x25\xed\xbc\xc3\xe2\x03\x5b\x40\x03\xb3\xe5\xf5\x9e\xbf\x5a\xf8\xd1\x72\xcd\xeb\xba\x26\x59\x90\xdc\x77\x64\x2c\x53\x7c\xfe\x1b\x2f\xbd\xd2\x94\xbe\x8a\xc2\xd2\x17\x5f\x96\x38\x8e\xf1\xbc\x36\x97\x94\x90\xd9\xab\x76\xe2\xcc\x51\xf4\xcc\x1e\x61\x1e\x67\x58\x75\x05\xc0\x27\x65\xba\x06\x1e\x1e\x1f\xe7\x8c\xe3\x7b\x8c\x94\x29\xe0\x62\x73\xf3\xf0\xf8\xb8\x85\x5f\xe2\x8f\x10\x89\x39\x97\x75\x73\x8c\x9d\x13\x88\x1b\xf8\x29\x36\x4a\xfe\xcc\x9b\x65\x97\x4f\xa4\xeb\x8d\x59\x00\x8c\x68\x54\x4f\x81\x8f\x38\xf1\x60\x7d\x03\xd8\x76\x93\xee\x8a\xbf\x02\x00\x00\xff\xff\x11\xe8\xf3\x97\x33\x0a\x00\x00"

func bvlcAlexnetYmlBytes() ([]byte, error) {
	return bindataRead(
		_bvlcAlexnetYml,
		"BVLC-AlexNet.yml",
	)
}

func bvlcAlexnetYml() (*asset, error) {
	bytes, err := bvlcAlexnetYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "BVLC-AlexNet.yml", size: 2611, mode: os.FileMode(420), modTime: time.Unix(1503754783, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _bvlcGooglenetYml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x56\x6f\x6f\xdb\x3c\x0e\x7f\xef\x4f\x41\x34\x18\xd0\xde\x25\x4a\x9c\x66\x5d\xe6\x01\x07\xdc\x3a\xdc\xe1\x70\x43\x5f\xdc\xdf\x17\x0f\x86\x80\x96\x69\x5b\xab\x2c\xe9\x91\xe8\xa4\xed\xa7\x7f\x20\xd9\xce\x9f\xae\xc3\xf2\x22\xb0\xc4\x1f\xc9\x1f\x29\x8a\x94\xc1\x8e\x0a\xf8\xfc\xbf\xaf\xf7\x8b\xbf\x5b\xdb\x7c\xa5\x07\x62\x98\x41\xdc\x06\x5b\xc3\xb3\xed\x3d\x74\xb6\x22\x9d\xd5\x1e\x3b\x3a\x58\xff\x58\x64\x00\x83\xda\x3d\xd6\x35\xad\x61\x06\x47\x19\xd4\xd6\x03\xb7\x34\xea\x00\xec\xc9\x07\x65\x4d\x01\x2b\xb1\x15\xf9\x05\x74\x14\x81\xb4\x86\x3d\x2a\xc3\xd9\x11\x9c\x8b\x15\xcc\x8e\x00\x65\x6a\xeb\x3b\xe4\xe1\x1b\x02\x75\x68\x58\xc9\xa3\x7c\x90\x66\xd1\x0e\x2a\x43\xbe\x80\x19\x1c\x17\x01\xfa\x40\x15\xb0\x05\x47\x3e\x22\x07\x6a\xe0\x3c\x55\x4a\x46\x9b\x19\x9c\x7e\x33\xe8\x7a\xcd\xca\x69\x02\xa7\x91\x23\x3e\x80\x44\x03\x25\x41\x70\x24\x55\xad\xa8\xca\x00\xb0\xab\xee\x36\x45\xd2\x6c\x5c\x5f\x80\x47\xe5\xbc\xfd\x4e\x92\x97\x12\x7d\xa7\x17\x32\xa5\xa6\x48\xb8\x85\x74\x7d\x82\xca\x5f\x43\x9b\x04\x75\x4e\xde\x6d\x34\x15\xbf\xd6\x1a\x91\xa3\xde\x2f\xd8\x9c\x83\x2b\x0a\xd2\x2b\xc7\x29\xdf\x7f\x79\xbd\x04\xf8\x4f\xab\xc2\x98\x2a\x15\x00\xc1\x93\xd3\x4a\x0e\x87\x60\xeb\xd3\x19\xc3\xa0\x59\x52\x15\xcf\x26\x6e\xc7\x3a\xd2\xa9\x8e\x5c\x5f\x4e\x3a\x02\xfe\x4f\x70\xb0\xbd\xae\x40\xab\x47\x8a\xe7\xc1\x2d\x9a\x47\xb8\x6f\xbd\x0a\xac\xd0\xc0\xbf\x5f\xa8\xa1\xea\x39\x95\x10\x6a\x0d\x91\x40\x4b\xda\x4d\x76\x5f\x31\x38\xb9\x49\x3c\x44\x06\xf0\x45\xd5\x35\x79\x32\x92\x42\x2a\x52\xcb\x90\x2a\x4b\x99\x06\x0e\x8a\xdb\xd1\x8c\x56\x4d\xcb\x71\xaf\x42\xc6\x05\xf6\x4d\x47\x86\x93\xdd\x4f\x3f\xd5\x0a\x12\x35\x41\x64\x16\xcb\x80\x17\x3e\xe2\xdf\x36\xd0\x07\x0a\x70\xf5\x84\x7b\x45\xfe\x2a\x06\xaa\x8c\x62\x85\x5a\xbd\x50\x32\x75\xa0\xe8\x3f\x80\x32\x81\x09\xab\x18\xcb\x55\x83\x7d\x08\x0a\xcd\x55\x34\xf0\x7b\xaf\xe4\xe3\x2e\x58\xbd\x27\x2f\x9c\xb7\x6c\xf9\x89\x07\xb3\x08\xd5\x18\x23\x83\x26\xf4\x89\xa4\x47\x26\xa8\x48\xe2\x33\x38\xab\x95\x7c\x4e\xa9\x4d\xbe\xac\x57\x8d\x32\xa8\xe1\x95\xb5\x79\x84\x70\x4c\xb3\x3d\x44\xab\x5d\x2f\x5b\xa8\x31\x30\xf9\x53\xf0\xd7\x77\x2b\x20\x67\x65\x1b\x60\x1f\x60\xfd\x7e\x5a\xdd\x7c\x4a\xf5\x41\x50\xf6\xa6\xd2\x54\x9d\xca\x24\xba\x54\x4c\x7e\x38\xa4\xf5\x7c\xb3\x5a\xcd\x57\xab\x15\x04\x83\x2e\xb4\x96\xcf\x4c\xde\x40\x1f\xa2\x93\x37\x83\x9d\xea\xef\xd2\x81\x2d\xe3\x95\x8e\x74\xd9\xba\x45\x0e\x28\x65\xef\x51\x3e\xc3\xdd\x56\x7c\x78\x07\xd7\xb7\xb9\xb8\x7d\x07\xe4\xbd\xf5\x37\x80\xa6\x1a\x81\xef\x4f\xc0\xed\x56\x7c\x7c\x07\xd7\x79\x2e\xf2\x23\xd0\x0e\x99\xda\xa3\x56\xd5\xc0\x3b\x10\xcf\x47\x76\xdf\xfb\xc0\x49\x2c\xc9\xc4\xdc\x48\x6f\x5d\xac\xb4\xeb\xff\x26\x71\x94\xe0\x9e\x3c\x36\xa9\x5b\xe6\xab\x04\x08\x73\xb8\xde\xc0\x9f\x21\x1f\xb5\x6e\xe0\x4f\xb0\x86\x4e\x45\x7f\x73\x08\x6d\xba\x05\x43\x30\x80\x50\x2a\x86\x56\x35\x2d\xf9\x23\x4f\x71\x13\x13\xa0\x3a\x65\x9a\x90\xae\x43\xb9\xd7\x72\xd7\xa4\x82\x37\xc4\x43\x55\xca\xfe\xcb\xc3\xc3\x48\xb3\x44\x96\xed\x2e\xa8\x17\x2a\xf2\xf5\x36\x86\x84\xf0\xcf\xcd\x4a\xc6\x5b\xf0\xd7\x91\xdf\xdf\xac\x3f\xa0\xaf\xc0\x61\x08\x05\xbc\xbf\x5b\x8b\xed\x26\x87\x2e\x88\x33\xcc\x67\x94\x8f\x67\xa0\x3c\x5f\xdf\x8a\xed\xe6\x15\x68\x34\xb4\x98\xc0\x05\xe4\x77\xdb\xad\xd8\x8e\xb0\xcb\xc6\x21\xad\xd9\x93\x67\xaa\xa0\xf6\xb6\x4b\x09\x4b\x53\x63\xba\xb4\x9e\x8e\x37\x16\x66\x70\x5a\xa5\x86\x8d\x2e\xf6\xef\x25\x1c\xa8\x0c\x8a\x29\x7e\x12\x4b\x21\xa6\x9e\x33\x1d\xc1\x34\x6c\x16\xd0\x32\xbb\x50\x2c\x97\xe8\x9f\xd4\x5e\x58\xdf\x2c\x5d\x55\x2f\xf3\xcd\xea\xa3\xd8\x6c\x37\x6b\xe1\xaa\xfa\x02\xd7\x28\x6e\xfb\x52\x48\xdb\x2d\xe3\x0c\x5c\xa6\x46\xb9\x64\x4f\xb4\xec\xd2\x6d\x58\x26\xdb\x61\x79\x79\x02\xd9\x0c\xb4\x92\x64\x02\x5d\xf4\xc2\x6c\xdc\x2c\xa0\x37\x9e\x02\x7b\x25\x99\xaa\x6c\x06\xca\xb8\x9e\xc3\xd0\xf4\x26\xec\xb0\x17\x4f\x68\x06\xb5\xf2\x81\x07\x14\xf0\xb3\xa3\x1f\xc6\xe8\x22\x6d\x17\xa0\x3a\x6c\x28\x1b\x26\xd5\x59\xcb\x9e\x58\x9c\xd9\x49\xa0\x8b\xae\x9e\x2e\x67\x72\x71\xb2\xe2\x30\x8e\x63\x26\x9f\xd2\x9f\x5c\x9f\xb6\xc6\xc1\x58\xa9\x8e\x4c\x1c\xb4\xa1\x80\xdf\xf2\x39\xdc\xce\x61\xbd\xfe\x90\xfe\xbe\x8d\x90\x8e\xd0\x44\xe1\xfa\x76\x0e\x79\xfe\x61\x0e\xf9\x6a\xf3\x2d\xb3\x3d\xbb\x9e\x87\x08\xa3\xf3\x64\x7e\x64\x3a\xc8\x32\x18\xe3\xaa\x09\xb9\xf7\x94\xa0\xf8\x56\x64\x03\xfe\x44\x2e\x7b\x23\xb8\x11\xa3\xb1\x4c\x39\x3b\x8b\x6d\xcc\xd8\x5b\xf1\x8d\x9e\xc3\xae\xf7\xba\x48\x75\x51\x2c\x97\xb1\xaf\x8b\xaa\xd3\x52\x74\x7a\xd9\x3d\x19\xe2\xa9\x0e\x52\xea\xe2\x3a\x3c\x9b\x40\x2c\x62\xb3\x4a\xa2\x98\xbf\xe9\x85\x30\xd5\x7f\xe3\xd1\xb5\xa9\x13\x4d\x3d\xdf\x53\xb0\xbd\x97\x14\x7d\x97\x18\xe8\xc2\x6b\xb8\x15\xd8\xe1\x8b\x35\x78\x08\xa9\x24\x03\x5b\x4f\x22\x8d\xf0\x54\xcb\x23\x87\x61\x9a\xef\xd2\x8b\xea\x55\x61\xee\x72\xb1\xca\x60\x70\xbc\x73\xc8\x6d\x31\x3d\x74\x76\x86\x58\xb8\x32\x83\x89\xcb\x28\x8e\xc3\xe9\x24\x53\x61\x87\x5e\xb6\x6a\x1f\xcf\x04\x75\x20\x98\x81\xaa\x87\x8e\xc8\x2d\x0d\xad\x72\x22\x3e\x3c\x0c\xe2\x07\x5b\x40\x03\xa3\xe6\xf9\x7b\xea\xec\x61\x15\x35\x4f\xbc\xce\xb3\x32\x6c\x24\xf3\x15\x19\xcb\x69\x4c\xfe\xc4\x4a\xad\x34\xa5\xd7\x67\x98\x2a\xe3\xc7\x24\xc7\xf6\x38\xbe\x19\x26\x4a\xc8\xec\x55\xd9\xf3\xd0\x66\xe8\x89\x3d\x82\x21\x4e\xef\xd0\x93\x2c\x03\x78\x54\xa6\x2a\xe0\xfe\xe1\x61\x64\x1c\xd7\xd1\x93\xa1\xde\xa3\x3e\xea\x5c\xdf\x3f\x3c\xcc\xe1\x5f\xf1\x4f\x88\xd4\xae\xa7\xa9\xb9\x8b\xb5\x13\x88\x0b\xf8\x47\x2c\x95\xe1\x39\x3d\xee\x1d\x9f\xa2\xe9\x7a\x8f\x0a\x19\x40\x87\x46\xd5\x14\x78\x87\x3d\xb7\xd6\x17\x80\x65\xd5\xeb\x2a\xfb\x23\x00\x00\xff\xff\xeb\x4e\xe9\x39\x9d\x0b\x00\x00"

func bvlcGooglenetYmlBytes() ([]byte, error) {
	return bindataRead(
		_bvlcGooglenetYml,
		"BVLC-GoogLeNet.yml",
	)
}

func bvlcGooglenetYml() (*asset, error) {
	bytes, err := bvlcGooglenetYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "BVLC-GoogLeNet.yml", size: 2973, mode: os.FileMode(420), modTime: time.Unix(1503754773, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _bvlcReferenceCaffenetYml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x56\x4b\x8f\xdb\x36\x10\xbe\xeb\x57\x0c\x60\x14\xd8\xb4\x96\x64\x7b\x37\xc9\x42\x05\x8a\xb6\x9b\x4b\x8a\x62\x0f\x41\xda\x4b\x11\x18\x14\x35\xb2\x98\x50\x24\xc1\x19\xee\x23\xbf\xbe\x20\xa9\x87\xdd\x24\xcd\x1e\xbc\x22\xe7\x9b\xe1\x37\xc3\x79\xd0\x88\x11\x1b\xf8\xfd\xef\x3f\xef\xca\x77\xd8\xa3\x47\x23\xb1\xbc\x13\x7d\x8f\xf7\xc8\xb0\x81\x28\x07\xdb\xc3\xb3\x0d\x1e\x46\xdb\xa1\x2e\x7a\x2f\x46\x7c\xb4\xfe\x53\x53\x00\x64\xfd\xa4\x70\x80\x0d\x2c\x32\xe8\xad\x07\x1e\x70\xd2\x01\x78\x40\x4f\xca\x9a\x06\x76\xd5\x6d\xb5\xbf\x80\x4e\x22\x90\xd6\xb0\x17\xca\x70\xb1\x80\xf7\xd5\x0e\x36\x0b\x40\x99\xde\xfa\x51\x70\xfe\x06\xc2\x51\x18\x56\x72\x91\x67\x69\x11\xed\x08\x65\xd0\x37\xb0\x81\x65\x41\x10\x08\x3b\x60\x0b\x0e\x7d\x44\x66\x6a\xe0\x3c\x76\x4a\x46\x9b\x05\xac\x7f\x1b\x18\x83\x66\xe5\x34\x82\xd3\x82\x23\x9e\x40\x0a\x03\x2d\x02\x39\x94\xaa\x57\xd8\x15\x00\x62\xec\x5e\xdd\x34\x49\xf3\xe4\x42\x03\x5e\x28\xe7\xed\x47\x94\x5c\x4b\xe1\x47\x5d\xca\x18\x9a\x26\xc1\x4a\xe9\x42\x42\xca\xef\x22\x4f\x09\xe9\x9c\x7c\x75\xa3\xb1\xf9\xae\xd2\x04\x9c\xd4\xfe\x9f\xca\x39\xb6\x43\x92\x5e\x39\x4e\xb1\xfe\xa5\x00\x78\x3f\x28\x9a\xe2\xa2\x28\xdd\x9f\x47\x0a\x9a\x63\x0a\xf4\x56\x6b\xfb\xa8\xcc\x29\xed\xa7\x2b\x87\xb7\xa3\x38\xa5\x4c\xc9\x3a\xe9\xfa\x22\x42\x19\x62\x1f\x52\x54\xa9\x82\xb7\x1c\xad\x09\xf0\xe8\xb4\x92\xf9\xfe\x6c\xbf\xa6\x07\x64\x1e\x2d\x76\xf1\x5a\xe3\xf6\x6f\x1a\x9f\xa2\x59\x17\xda\x45\xe3\x51\xf1\x00\x64\x47\x84\x4e\xf5\x53\xaa\x52\x55\x00\xbc\x59\x97\x29\x25\x2d\xaf\x44\x92\x52\xf6\x43\xab\xd3\xc0\x71\xaf\x13\x2c\x4a\x11\x4e\x23\x1a\x4e\xa6\x7f\x2e\x20\x61\xac\xef\xd0\x47\x66\xce\x5a\x1d\x91\xc2\x74\x60\x62\x52\x69\xf5\x39\x93\xd0\xe2\x39\xa6\x92\x22\xa0\x47\xc5\x72\xc0\x0e\xae\x94\x81\xb9\x62\xb6\x8b\xaa\x22\xe8\xac\x41\x68\xb1\xb7\x1e\x2f\xad\xbc\xa8\xbe\x08\x35\x19\xe1\x68\xb0\x29\xd0\x8a\xd1\xe7\xd3\xae\xf7\xbb\xed\x6e\xb7\xab\xe0\xfd\x10\x2d\x11\xc3\x83\xd0\xaa\xcb\xc2\x29\x8d\x85\x91\x08\x5d\xf0\xe9\x62\x16\xb7\x05\x5d\x98\xb9\x8e\x66\x72\x30\xce\x2c\x08\x29\x83\x17\xf2\x19\x5e\xbe\xae\x6e\xf6\x87\x1f\x92\xbf\xda\x12\xc1\xbe\xba\x3d\x5c\x1f\x6e\xff\xc3\xd3\xb6\xb1\x94\xe2\x4d\xb2\x75\xe5\xfe\x52\x3f\x6b\x67\xd1\xcb\x55\x74\xbb\x8b\x22\x9b\xaf\xf5\xec\x6c\x8a\xc1\x0a\x14\xc9\x7e\x0c\xc4\x49\x2c\xd1\x30\x7a\x90\xde\xba\x78\xf2\xd5\x5f\x34\x67\x9b\x78\x40\x2f\x4e\xa9\x13\xed\x77\x09\x40\x5b\xb8\xba\x81\x9f\x60\x3f\x69\xbd\x80\x1f\xe1\x00\xa3\xf2\xde\xfa\x2d\xd0\x60\x83\xee\x26\xc2\x20\xa0\x55\x0c\x83\x3a\x0d\xe8\x57\x66\xc4\x4a\xeb\xea\xc5\xa5\x8b\x31\x70\x29\x8a\xd8\x41\xfb\x0c\x7f\x60\xdf\xc3\x1b\x6b\xc4\x10\x10\x7e\xfd\x88\x7d\xdf\xe5\x45\xe1\x71\xc9\x39\xd8\xc0\xba\x4a\x0d\x46\xb8\x98\x24\x35\x3c\x62\x4b\x8a\x31\x7e\x22\xcb\xaa\x9a\x13\x7d\x76\x6b\x6e\x8e\x25\x0c\xcc\x8e\x9a\xba\x3e\x29\x1e\x42\x5b\x49\x3b\xd6\xb1\x29\xd7\xa9\x66\x6b\xf6\x88\xf5\x28\x88\xd1\xd7\x49\x87\xea\xf6\x41\xcb\xe3\x72\xec\x31\xe1\x0c\xf2\x62\xac\xa9\xeb\x4c\xa3\x32\xca\x51\x25\x65\x5e\xd6\x37\xb7\x87\x9b\x52\xc5\xb2\x35\xc8\xa5\xd4\x82\x48\xf5\x53\x89\x95\x31\x41\xca\x0e\xd1\x95\xd2\x9a\x07\xab\x43\xdc\x15\xba\x34\x18\x7c\xfa\xc7\xb1\x61\x53\xe5\xba\xbe\xd8\x80\x56\x12\x0d\xe1\x45\x29\x17\xd3\x66\x03\xc1\x78\x24\xf6\x4a\x32\x76\xc5\x06\x94\x71\x81\x53\x74\x56\x6c\xde\x8b\x35\xbb\x81\x5e\x79\xe2\x8c\x02\x7e\x76\xf8\xc5\x00\x29\xd3\x76\x03\x89\x7b\x91\x7b\xf4\x59\xff\x9a\x59\x9c\xd9\x49\xa0\x8b\x16\x17\x01\xf9\x88\xd5\x8a\x13\x71\x10\x31\xfa\x74\x91\xe9\xe8\x75\x6b\x1a\x09\x9d\x1a\xd1\xc4\x11\x43\x0d\xfc\xb3\xdf\xc2\xf5\x16\x0e\x87\xd7\xe9\xe7\xc3\x04\x19\x51\x98\x28\x3c\x5c\x6f\x61\xbf\x7f\xbd\x85\xfd\xee\xe6\x43\x61\x03\xbb\xc0\xd9\xc3\x78\x78\x32\x3f\x31\xcd\xb2\xd8\x7a\x92\x5f\x3d\x0a\x0e\x1e\x13\x54\x7c\xcd\xb3\x8c\x5f\xc9\x15\x5f\x71\x6e\xc2\x68\xd1\xa6\x98\x9d\xf9\x36\x45\xec\x6b\xfe\x4d\x27\xd3\x31\x78\xdd\xcc\xc9\x13\x9b\x64\xd5\x8d\x5a\x56\xa3\xae\xc7\x27\x83\x3c\x67\xde\x9c\x3c\x35\x3d\x1b\x42\xae\xf8\x89\x8b\x24\x8a\xf1\x9b\x67\xe3\x5c\x4f\x27\x2f\xdc\x90\x3a\xc3\x23\xc6\xfe\x4b\x71\xa0\xd8\xe0\x25\xc6\xb3\x5b\x41\x78\x71\x2a\x5d\x57\x62\x14\x9f\xad\x11\x8f\x94\x8a\x80\xd8\x7a\xac\xd2\xfc\xaa\xac\x3f\xcd\x1c\x52\xba\x1f\x8e\xe9\x2d\xf1\xad\x52\x38\xee\xab\x5d\x01\x99\xc1\xd1\x09\x1e\x9a\x79\xd6\x1f\x0d\x72\xe5\xda\x02\x66\x52\x93\x58\x19\xb5\xc8\x0a\x00\x45\x47\xe1\xe5\xa0\x1e\xe2\xed\x08\x4d\x08\x1b\x50\x7d\xee\x5c\x3c\x60\x6e\x69\xb3\x0b\x79\xc2\xc5\x0f\xb6\x20\x0c\x4c\x9a\xe7\x6f\x8a\xb3\xc7\x45\xd4\x5c\x89\x9d\xc7\x27\x6f\x24\xf3\x1d\x1a\xcb\x18\xbf\xbf\x61\xa5\x57\x1a\xd3\x0b\x8c\xe6\x1c\xf9\x32\xdc\xb1\xa4\xa7\xa1\x3a\x53\x12\xcc\x5e\xb5\x81\x73\xeb\xc2\x27\xf6\x02\xa6\xd2\x86\x55\x56\x00\x7c\x52\xa6\x6b\xe0\xee\xfe\x7e\x62\x1c\xd7\xf1\xa4\xdc\x0e\x16\x9d\xab\xbb\xfb\xfb\x2d\xbc\x8b\x3f\x55\x95\x1a\xea\x3c\x87\x8e\x31\x8b\x08\xb9\x59\x1f\x0a\x1b\x98\xf6\x96\xe7\x58\x2a\xf4\x49\xa1\x00\x18\x85\x51\x3d\x12\x1f\x45\xe0\xc1\xfa\x06\x44\xdb\x05\xdd\x15\xff\x06\x00\x00\xff\xff\x73\x9f\x90\xe8\xaa\x0a\x00\x00"

func bvlcReferenceCaffenetYmlBytes() ([]byte, error) {
	return bindataRead(
		_bvlcReferenceCaffenetYml,
		"BVLC-Reference-CaffeNet.yml",
	)
}

func bvlcReferenceCaffenetYml() (*asset, error) {
	bytes, err := bvlcReferenceCaffenetYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "BVLC-Reference-CaffeNet.yml", size: 2730, mode: os.FileMode(420), modTime: time.Unix(1503754761, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _bvlcReferenceRcnnIlsvrc13Yml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x56\x4d\x8f\xdb\x36\x10\xbd\xeb\x57\x0c\xe0\x4b\x0b\xac\xa5\xd8\x9b\xa6\x85\x0e\x45\x91\x05\x5a\x04\x48\x7d\xd8\x14\xb9\x14\x85\x30\xa2\x46\x16\xb3\x12\x49\xcc\x8c\xec\x75\x7f\x7d\x41\xea\xc3\xde\x66\xdb\xf8\x60\x50\xe4\xe3\xf0\xf1\xcd\x9b\x91\x1c\x0e\x54\xc2\xfb\xcf\x1f\x1f\xb6\x8f\xd4\x12\x93\x33\xb4\x7d\x7c\x38\x1c\xb6\x1f\x3e\x7e\xfa\xfc\xf8\xb0\xbb\x87\x0d\x44\x10\xf8\x16\x2e\x7e\x64\x18\x7c\x43\x7d\xd6\x32\x0e\x74\xf6\xfc\x54\x66\x00\x53\x90\x07\x6c\x5b\xda\xc3\x06\xd6\x35\x68\x3d\x83\x76\x34\xef\x01\x38\x11\x8b\xf5\xae\x84\x37\xf9\x4f\xf9\xee\x05\x74\x5e\x02\xe3\x9d\x32\x5a\xa7\xd9\x0a\xde\xe5\x6f\x60\xb3\x02\xac\x6b\x3d\x0f\xa8\xd3\x18\x84\x06\x74\x6a\xcd\xba\x3e\xad\x66\x31\x0e\x5a\x47\x5c\xc2\x06\xd6\x07\x81\x51\xa8\x01\xf5\x10\x88\x23\x72\xa2\x06\x81\xa9\xb1\x26\xc6\xcc\xe0\xfa\xdb\xc0\x30\xf6\x6a\x43\x4f\x10\x7a\xd4\x88\x17\x30\xe8\xa0\x26\x90\x40\xc6\xb6\x96\x9a\x0c\x00\x87\xe6\xdd\xdb\x32\xed\x3c\x86\xb1\x04\x46\x1b\xd8\x7f\x21\xa3\x85\x41\x1e\xfa\xad\x89\xd2\x94\x09\xb6\x35\x61\x4c\x48\xf3\x4d\xe4\x31\x21\x43\x30\xef\xde\xf6\x54\x7e\x73\xd3\x0c\x9c\xb7\xfd\x3f\x95\x5b\x6c\x43\x62\xd8\x06\x4d\x5a\xff\x9c\x01\xfc\xd1\x11\x84\x91\x69\xca\x28\x58\x27\x1a\x25\x9e\x24\xf7\x6d\xca\xe8\xe3\xf6\xe1\x70\x98\xc5\x8b\x59\x5e\xdd\xd2\x90\x52\x12\x32\x4f\x91\xac\xcc\xa0\x33\x0a\x0c\xd8\x10\xd4\x17\x50\x46\x27\xa1\x8f\x41\xdd\xf1\x26\xdc\xa7\xcf\xbf\x83\xe9\x51\x24\x0a\xcb\x02\xd6\xa9\x07\x84\xd6\x6c\xd9\x38\xb7\x2e\x99\x89\x49\x8f\x17\xe2\x3b\x08\xec\x4f\xb6\xa1\x06\x3a\x62\x02\x14\xc0\x48\xb2\xdd\x6a\x47\x5b\xe9\xa8\x6f\xe7\x6b\x4c\xc4\x3c\x27\x5e\x7c\x49\xc7\xae\x64\x81\x9e\x71\x88\x79\x56\x0f\x42\x04\x56\xa3\xb7\x70\xbd\xc8\x21\x7f\x9f\xc3\xaf\x9e\x81\x49\x08\xd9\x74\x51\xa0\xe0\x85\xe4\x0e\x06\x7c\xa2\x68\xab\x45\x1a\xdf\xb6\xd6\x58\xec\xe7\x4b\x05\x34\x4f\x78\x24\x40\xd7\x80\xf3\x0a\x1a\x35\x99\x8f\x7b\x45\xa3\x64\x7e\x6a\xa2\x4c\x8f\x5e\x04\x7e\xb3\x2c\x9d\x35\x4f\xf0\x0b\xd7\xc7\x79\x9c\xf1\x52\xaa\x12\xdd\x7d\x7d\x4a\xc6\xc6\x10\xb5\x2b\xe0\x4c\xb5\x58\xa5\x38\x24\x35\x79\x0e\x53\xa2\xeb\x45\xf3\xa5\x28\xb7\xd0\xa9\x06\x29\x8b\xe2\x68\xb5\x1b\xeb\xdc\xf8\xa1\x88\x1d\xa1\x48\x5e\x29\x94\x89\x8a\x01\x45\x89\x8b\xb4\x47\x8a\xfa\xd4\x9b\x6a\x3d\xb6\x8a\xd9\xa9\x6c\x2f\x27\x36\xbb\xfb\x17\x11\x91\x9f\xed\x29\xf7\x7c\x2c\xb0\x96\x62\x77\xbf\xdb\xe5\xfb\x1f\xf6\x6f\x57\x4c\x59\x14\xae\x3e\x59\x3a\x13\xe7\x5f\xc6\x70\x51\xe2\x84\x9e\x98\xdc\xb2\xa8\x7b\x5f\x2f\x2c\x66\xf5\xa4\xb8\x9a\xcd\x86\x8b\xab\xb3\x0d\xf4\xd6\x90\xbb\xe6\x62\xba\xe3\x3c\x59\xc2\xe8\x98\x44\xd9\x1a\xa5\x26\xdb\x80\x75\x61\xd4\x24\xda\x15\x3b\xcd\xc5\x6a\xdb\x40\x6b\x59\x74\x42\x81\x5e\x02\x7d\xd5\xcf\xb6\x69\xba\x04\x3b\xe0\x91\xb2\xa9\x65\xdc\x94\xd3\xc2\xe2\x26\x4e\x02\xbd\xa8\xb8\x08\x98\x8e\xb8\x46\x09\x18\xfb\xa2\x12\xa7\xfc\xa6\xa3\xaf\x53\x73\x87\x6a\xec\x40\x2e\x76\x3c\x29\xe1\xcf\xdd\x1d\xdc\xdf\xc1\x7e\xff\x63\xfa\xfb\x2b\xf3\xa3\x86\x51\xa7\x5b\xc4\x03\x52\x88\xc5\x9f\x69\x2d\x83\x99\x7b\x4b\xa8\x23\x53\x82\xe2\x6b\xec\x27\xfc\x95\x40\xf6\xca\x05\x66\x4c\x8f\x75\xd2\xe5\x86\xff\xac\xca\x6b\x77\x98\x4f\x96\x6a\xe4\xbe\x5c\x2d\xc3\x78\xce\xa7\xf4\x8f\x42\x1c\x3b\x37\x39\x4d\x9e\x64\xb4\xdb\x97\xcd\x6c\xb6\xe3\x6c\x8b\x06\x15\x8b\xd9\x86\xfb\xe8\x8d\x4a\x2e\x4e\x48\xab\xb3\xe7\x46\x72\x7d\xd6\x2c\x6d\x88\x9a\x2e\xed\x7b\x29\xbd\x23\x63\xe8\x52\x8d\x9e\xc9\x1e\x3b\x95\x58\xe9\x7e\x64\x43\x91\x6b\x8d\x42\x57\x96\x65\x51\xc8\x7d\x8e\x03\xfe\xed\x1d\x9e\x25\x71\x13\xf5\x4c\x79\x62\x95\x0c\x3c\x33\x4b\xde\xdd\x57\xe9\x75\xf7\xaf\xaa\x49\x3d\x6d\xbb\x54\x4d\xb5\xcb\xdf\x64\x30\xd1\xa8\x02\x6a\x57\x2e\xef\xa4\xca\x91\xe6\xa1\xce\x60\x61\x36\x2f\x5b\x67\x6f\xd6\xac\x54\xb1\x2d\xd9\x53\xcc\x28\xf6\x42\xb0\x01\xdb\x82\x90\xde\xc5\x04\xb9\x94\xa5\xe5\x1a\x60\x05\x10\xe2\x20\xf6\x57\x07\xf3\xce\xdb\x57\xdf\xcd\x3b\x30\xee\xbc\xf2\xba\xd5\x68\x9a\x48\xe1\x1b\x72\x5e\x29\x8e\xff\x23\x4a\x6b\x7b\x4a\x1f\x0a\xb2\xf8\xea\x6b\xc9\xcf\x56\x3b\x3b\x51\x5d\x28\xa1\x2a\xdb\x7a\xd4\xa9\xd3\xd1\xb3\x32\x82\x23\x4d\x9f\x0c\xd7\xb5\x0c\xe0\xc9\xba\xa6\x84\xd8\x70\x27\xc6\xf1\x39\x9e\xe4\x68\x64\xec\xd7\x3d\xdf\x3d\x1c\x0e\x77\xf0\x18\xff\xf2\x3c\xff\x3e\x56\x41\x6c\xb8\xd6\x1d\xab\x68\x1f\x21\x2d\xe1\x43\xac\xc3\x03\x69\x2c\xe6\x69\x6e\xfd\x6a\x48\x0d\x60\xde\x90\x01\x0c\xe8\x6c\x4b\xa2\x15\x8e\xda\x79\x2e\x01\xeb\x66\xec\x9b\xec\x9f\x00\x00\x00\xff\xff\xae\x46\x91\x0d\x56\x09\x00\x00"

func bvlcReferenceRcnnIlsvrc13YmlBytes() ([]byte, error) {
	return bindataRead(
		_bvlcReferenceRcnnIlsvrc13Yml,
		"BVLC-Reference-RCNN-ILSVRC13.yml",
	)
}

func bvlcReferenceRcnnIlsvrc13Yml() (*asset, error) {
	bytes, err := bvlcReferenceRcnnIlsvrc13YmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "BVLC-Reference-RCNN-ILSVRC13.yml", size: 2390, mode: os.FileMode(420), modTime: time.Unix(1503754749, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _squeezenet_v10Yml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x55\x4b\x8f\xdb\x36\x10\xbe\xeb\x57\x0c\x60\x04\x68\x01\x2f\x65\x7b\xb3\x0f\xe8\x50\x20\xdd\x5e\x72\xf1\x21\x39\x16\x81\x31\xa6\x46\x16\x1b\xbe\x42\x8e\xd6\xde\xfd\xf5\xc5\x50\xb2\xe5\x45\xb6\x8d\x0f\x86\xc8\xf9\xe6\xf5\xf1\xe3\xd0\xa3\xa3\x06\xbe\xfe\x18\x88\x5e\x69\x4b\x0c\x0b\x90\x2d\x08\x1d\xbc\x84\x21\x81\x0b\x2d\xd9\xaa\x4b\xe8\xe8\x18\xd2\xf7\xa6\x02\x18\x5d\x9e\xb0\xeb\x68\x03\x0b\xb8\xd8\xa0\x0b\x09\xb8\xa7\xc9\x07\xe0\x99\x52\x36\xc1\x37\xb0\x52\x8f\x6a\xfd\x06\x3a\x99\x40\x07\xcf\x09\x8d\xe7\xea\x02\x5e\xab\x15\x2c\x2e\x00\xe3\xbb\x90\x1c\xf2\xf8\x0d\x99\x1c\x7a\x36\xfa\x62\x1f\xad\x95\xc4\x41\xe3\x29\x35\xb0\x80\xcb\x22\xc3\x90\xa9\x05\x0e\x10\x29\x09\x72\x2c\x0d\x62\xa2\xd6\x68\x89\x59\xc1\xfc\x5b\x80\x1b\x2c\x9b\x68\x09\xa2\x45\x16\x7c\x06\x8d\x1e\xf6\x04\x39\x92\x36\x9d\xa1\xb6\x02\x40\xd7\xde\x7f\x6c\x8a\xe7\x21\x0e\x0d\x24\x34\x31\x85\x7f\x48\x73\xad\x31\x39\x7b\xa3\x85\x9a\xa6\xc0\x6e\x74\x1c\x0a\x52\xff\x12\x79\x28\xc8\x18\xf5\xfd\x47\x4b\xcd\x2f\x9d\x26\xe0\xe4\xf6\xff\xa5\x5c\x63\x5b\xca\x3a\x99\xc8\x85\xeb\x3f\x2a\x38\x9f\xbd\x27\x06\xd4\xbd\xa1\x67\xca\x90\x8d\x33\x16\x13\x24\xca\x83\xe5\x2c\x0c\x7e\xb2\x74\xda\x12\x2f\x01\x19\xee\x56\x27\xe8\xe8\x48\x09\x22\xca\x91\xb2\x50\x8d\xbe\x85\x75\x7d\xb7\x5a\x71\x5f\x54\x90\xcd\x2b\x29\x89\xef\xd0\xda\x91\xf8\x0c\x98\x44\x1e\x89\xa0\x23\xcc\x66\x6f\x49\x42\xb7\x14\x6d\x78\x81\xe0\xa1\xc7\xd4\x1e\x05\x73\x34\xdc\x83\x35\xce\x30\xb5\xe0\xc8\x85\xf4\xb2\x84\x44\x3f\x06\x93\x08\x2c\xe5\x5c\x01\xe8\xe0\xdc\xe0\x8d\x1e\xc5\xd1\x0e\xc9\xf8\x03\xb4\x26\x73\x32\xfb\x41\xfc\x8a\xb2\x8c\x3f\x2c\x4b\x6d\x12\x56\x92\x52\x2a\x39\x2f\x38\x59\x69\x6b\xc8\x73\x56\x33\x1d\xdb\x6b\x3a\xee\x1e\xd4\xdd\x87\x12\xe4\x71\xa5\x6e\x3f\x00\x87\x78\xb3\x2e\x6b\xf9\xba\x03\xd4\x43\x42\xcd\xa5\x85\xcf\x0e\x0f\xe2\xad\xaa\x44\x1d\x25\xf2\x9a\xb2\x88\x72\x5e\x15\x3d\x62\x14\xce\x6a\x38\xd2\x3e\x1b\x26\xf9\x24\xd6\x4a\xc1\x78\x3e\x7b\xe9\xe5\xfa\x2e\xdd\x40\xcf\x1c\x73\x53\xd7\x07\xc3\xfd\xb0\x57\x3a\xb8\xfa\x2f\xa2\xf8\x55\xa3\xa5\x7a\xae\xfa\x0d\x16\xd3\xc9\x3c\xab\x90\x0e\x35\xee\x73\xbd\xbe\x5f\x6d\xd4\xea\xe1\xf6\x7e\x55\x2d\xc0\x1a\x4d\x3e\x97\x8b\x3e\xe7\x99\x36\x1b\xf8\xf3\xd3\xe7\x2f\xd5\x02\x8c\x8f\xc3\x78\xfc\x33\x66\xdc\x13\x81\x2e\xa0\x33\x29\xf3\x88\x02\x7e\x89\xf4\xd3\x08\xb8\x29\xdb\x0d\x18\x61\xa5\x1a\x6f\xd9\x95\x02\xcf\xd9\xaf\xe2\x14\xd0\x1b\x91\x0a\x60\x4c\x31\x47\x99\x75\x27\xdc\x96\xd4\xf3\xd6\x74\xa9\x5b\xe3\xc8\xcb\x90\xc8\x0d\xfc\xbd\x5e\xc2\xed\x12\x36\x9b\x87\xf2\xf7\x6d\x82\x38\x42\x2f\xc6\xcd\xe3\x12\xce\x7f\xdf\xaa\x30\x70\x1c\x78\xec\x50\x92\x97\xf0\x53\xa5\xa3\xad\x82\xa9\xaf\x8e\x90\x87\x44\x05\x8a\xef\x75\x36\xe2\xe7\xe2\xaa\x77\x9a\x9b\x30\x16\xf7\x85\xb3\xab\xde\x26\xc6\xde\xeb\x6f\xca\x9c\x77\x43\xb2\x4d\x39\xf0\xa6\xae\x5b\x64\x54\xad\xb3\x5a\x39\x5b\xbb\x93\x27\xae\xc7\x8b\x57\x17\xea\x64\x9d\x5f\x7c\x26\x56\x7c\xe2\xaa\x98\x84\xbf\xf3\x74\xcb\xd3\x7c\x3c\x24\x8c\x7d\xd1\xf7\x91\xcc\xa1\xe7\x2c\x83\x20\x0c\x49\x93\xe4\xde\x63\xa6\x37\x59\xf3\xad\x42\x87\xaf\xc1\xe3\x31\x17\x5d\x66\x0e\x89\x54\x99\x40\x45\x7c\x53\x0d\x65\x18\x6d\x76\xe5\x35\xa8\xf3\x65\xec\xec\xd6\x6a\x55\xc1\x98\x74\x17\x91\xfb\xe6\x3c\xa0\x77\x9e\x58\xc5\x7d\x05\xe7\x3a\x26\xb3\xf1\xe6\xca\x66\xf2\x0e\x93\xee\xcd\xb3\x9c\x07\xda\x4c\xb0\x00\xd3\x41\x96\x61\xc5\x3d\xf9\xc2\xf1\xb9\x68\x30\x19\x10\xe4\x83\x03\xa0\x87\xc9\xf3\xfa\x1d\xb8\x7a\x10\xc4\x73\xae\xeb\x9a\x91\x71\xa3\x84\x6f\xc9\x07\x19\x23\xfd\x7f\x45\xe9\x8c\xa5\xf2\x6a\xe6\xb3\x2a\x7e\x26\x58\x06\x9e\x19\x4b\x3d\x97\x84\x3c\x4d\xa8\xa2\x71\x3a\x71\x42\xf0\xc4\xe5\xfd\x9c\x6d\x15\xc0\x77\xe3\xdb\x06\x9e\xb6\xdb\xa9\x62\x59\x4b\x26\x4f\x43\x42\x7b\xf1\xf9\xed\x69\xbb\x5d\xc2\x17\xf9\x53\x4a\xfd\x2e\x1a\x9e\x06\xe4\x4e\x74\x93\x89\x9b\xcb\xf4\x92\x6b\x3a\xee\x5d\x9e\xd0\x72\xb5\x27\x87\x0a\xc0\xa1\x37\x1d\x65\xde\xe1\xc0\x7d\x48\x0d\xe0\xbe\x1d\x6c\x5b\xfd\x1b\x00\x00\xff\xff\x72\xe9\xaf\x72\x51\x08\x00\x00"

func squeezenet_v10YmlBytes() ([]byte, error) {
	return bindataRead(
		_squeezenet_v10Yml,
		"SqueezeNet_v1.0.yml",
	)
}

func squeezenet_v10Yml() (*asset, error) {
	bytes, err := squeezenet_v10YmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "SqueezeNet_v1.0.yml", size: 2129, mode: os.FileMode(420), modTime: time.Unix(1503754341, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _squeezenet_v11Yml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x55\x4d\x6f\xe3\x36\x10\xbd\xeb\x57\x3c\xc0\x97\x16\x70\x24\xc7\x1b\x64\x17\x3a\x14\x68\x73\xda\x8b\x0f\xdb\x63\xb1\x30\x46\xd4\xc8\x62\x57\xa2\x58\x72\x18\x3b\xfd\xf5\x05\x49\xc9\x72\x90\x74\xa3\x83\x40\xce\xbc\xf9\x7a\x33\x24\x0d\x8d\x5c\xe3\xcf\x7f\x02\xf3\xbf\x7c\x60\xc1\x06\x51\x84\xa9\xc3\xcb\x14\x1c\xc6\xa9\xe5\xa1\xe8\x1c\x8d\x7c\x9e\xdc\x8f\xba\x00\xb2\xc9\x13\x75\x1d\xef\xb1\xc1\x55\x87\x6e\x72\x90\x9e\x67\x1b\xe0\x99\x9d\xd7\x93\xa9\xb1\x2b\xbf\x94\xf7\xaf\xa0\xb3\x0a\x6a\x32\xe2\x48\x1b\x29\xae\xe0\xfb\x04\x5d\x00\xda\x74\x93\x1b\x49\xf2\x1a\x9e\x47\x32\xa2\xd5\x55\x9f\xb5\x45\xf4\x43\xda\xb0\xab\xb1\xc1\x75\xe3\x11\x3c\xb7\x90\x09\x96\x5d\x44\xe6\xd4\x60\x1d\xb7\x5a\x45\x9f\x05\xd6\x6f\x83\x31\x0c\xa2\xed\xc0\xb0\x03\x49\xc4\x7b\x28\x32\x68\x18\xde\xb2\xd2\x9d\xe6\xb6\x00\x68\x6c\x1f\x1f\xea\x64\x79\xb2\xa1\x86\x23\x6d\xdd\xf4\x37\x2b\xa9\x14\xb9\x71\xb8\x53\x89\x9a\x3a\xe1\xee\x94\x0d\x09\xaa\x3e\x86\x9e\x12\xd4\x5a\xf5\xf8\x30\x70\xfd\xb1\xd5\x8c\x9c\xed\x3e\xc8\xe6\x16\xdc\xb2\x57\x4e\x5b\x49\x7c\xff\x56\xe0\xb6\xff\xcf\x91\xff\x9e\x3c\xf6\xe5\xc3\x05\x03\x7b\x0f\x35\x8d\x36\x48\xee\x81\xf4\x64\x22\x66\xb7\xc5\x59\x4b\x3f\x05\x81\x27\xe5\x74\xa7\x95\x36\x27\x90\x52\xc1\x91\x7a\x29\x0b\xc7\x1d\x3b\x36\x8a\x7d\x6c\xc9\xba\x4b\xdd\x20\x1b\x9b\x53\xe1\xcc\x8d\xd7\xc2\x71\xc9\xa2\xca\x12\x39\xb3\x26\xba\xba\x9d\xa4\x3b\xf4\x22\xd6\xd7\x55\x75\xd2\xd2\x87\xa6\x54\xd3\x58\xe5\xc2\xaa\x84\xf1\x95\x38\xe6\x6a\x24\x2f\xec\x2a\x9f\xcb\x31\x2c\xaf\x6c\xc9\x5d\xf4\x73\x39\xb9\x53\x45\x8d\xaf\xee\x1f\x77\xfb\x72\xf7\xf9\xd3\xe3\xae\xd8\x60\xd0\x8a\x8d\x4f\x63\xbf\xc6\x9d\x85\x35\xfe\xf8\xfd\xeb\xb7\x62\x03\x6d\x6c\x90\x54\xc0\x8a\xc9\xb2\xd8\xac\x0d\x3a\xed\xbc\x64\x14\xe4\xc5\xf2\x9b\x03\x71\x97\xc4\x35\xf4\x48\x27\x2e\xf2\xcc\xdd\xf4\x62\x89\x7e\xe3\x27\x81\x5e\xb5\x2b\x02\x72\x88\xd5\x8b\xa5\x78\xb0\x84\x5d\xe2\x3a\x85\x5e\x45\xf3\x88\xb7\x7a\x64\x13\x8f\x8c\xaf\xf1\xd7\xfd\x16\x9f\xb6\xd8\xef\x3f\xa7\xdf\xf7\x19\x32\x32\x99\xa8\xdc\x7f\xd9\x62\xf9\x7d\x2f\xa6\x20\x36\x48\xae\x30\x06\x4f\xee\xe7\x4c\xb3\xae\xc0\x5c\x57\xc7\x24\xc1\x71\x82\xd2\x7b\x95\x65\xfc\x9a\x5c\xf1\x4e\x71\x33\x66\xa0\x26\x71\x76\x53\xdb\xcc\xd8\x7b\xf5\xcd\x91\xfd\x31\xb8\xa1\x4e\x0d\xaf\xab\xaa\x25\xa1\xb2\x1d\x07\x55\x8e\x43\x35\x5e\x0c\xcb\x32\x2c\x89\xba\xb8\xf7\x2f\xc6\xb3\x94\x72\x91\x22\xa9\x22\x7f\xcb\x59\xf7\xf3\x6d\x71\x72\x64\x7b\x90\x69\x71\x66\x7d\xea\xc5\xc3\xb1\x9f\x82\x53\x1c\x63\x37\xe4\x79\x8d\xfa\xd3\x11\x75\x74\x7e\x77\x42\x53\x80\xa3\x25\xe9\xeb\xe5\x6a\x3a\x1a\x96\xd2\x36\x05\x96\x98\xb3\x9a\x2f\xac\x56\x9d\xf6\x47\x72\xaa\xd7\xcf\x91\x7b\x1a\x3c\x63\x03\xdd\xc1\xb3\x6c\x23\x95\x26\xf1\xb9\x24\x08\xed\x41\x88\x0b\x99\x40\x06\xb3\xe5\xed\x0d\x78\x73\x15\x46\xcb\x35\xaf\xdb\xea\xb3\x20\xb9\x6f\xd9\x4c\xc2\x71\xfd\x3f\x5e\x3a\x3d\x70\x7a\x2f\xfc\x32\x01\x6f\xc9\x8c\xd7\x88\xce\xa9\x2e\x29\x91\x88\xd3\x4d\x90\x7c\x77\xf0\x45\x1c\xc1\xb0\xa4\x97\x63\xd5\x15\xc0\x0f\x6d\xda\x1a\x4f\x87\xc3\x9c\x71\xdc\xc7\x48\x86\x83\xa3\xe1\x6a\xf3\xcb\xd3\xe1\xb0\xc5\xb7\xf8\x2b\xcb\xf2\xd7\x38\xaf\xf1\xd1\xd1\xe6\x74\x8c\x33\xe2\x59\x6a\x7c\x8d\x23\x91\x1f\xc0\x59\x76\x7d\x3c\xd2\x31\x9e\x0d\x0a\x60\x24\xa3\x3b\xf6\x72\xa4\x20\xfd\xe4\x6a\x50\xd3\x86\xa1\x2d\xfe\x0b\x00\x00\xff\xff\xaf\x29\xec\xb0\x4b\x07\x00\x00"

func squeezenet_v11YmlBytes() ([]byte, error) {
	return bindataRead(
		_squeezenet_v11Yml,
		"SqueezeNet_v1.1.yml",
	)
}

func squeezenet_v11Yml() (*asset, error) {
	bytes, err := squeezenet_v11YmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "SqueezeNet_v1.1.yml", size: 1867, mode: os.FileMode(420), modTime: time.Unix(1502686994, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"BVLC-AlexNet.yml": bvlcAlexnetYml,
	"BVLC-GoogLeNet.yml": bvlcGooglenetYml,
	"BVLC-Reference-CaffeNet.yml": bvlcReferenceCaffenetYml,
	"BVLC-Reference-RCNN-ILSVRC13.yml": bvlcReferenceRcnnIlsvrc13Yml,
	"SqueezeNet_v1.0.yml": squeezenet_v10Yml,
	"SqueezeNet_v1.1.yml": squeezenet_v11Yml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"BVLC-AlexNet.yml": &bintree{bvlcAlexnetYml, map[string]*bintree{}},
	"BVLC-GoogLeNet.yml": &bintree{bvlcGooglenetYml, map[string]*bintree{}},
	"BVLC-Reference-CaffeNet.yml": &bintree{bvlcReferenceCaffenetYml, map[string]*bintree{}},
	"BVLC-Reference-RCNN-ILSVRC13.yml": &bintree{bvlcReferenceRcnnIlsvrc13Yml, map[string]*bintree{}},
	"SqueezeNet_v1.0.yml": &bintree{squeezenet_v10Yml, map[string]*bintree{}},
	"SqueezeNet_v1.1.yml": &bintree{squeezenet_v11Yml, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

