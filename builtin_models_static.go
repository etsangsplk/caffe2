// Code generated by go-bindata.
// sources:
// builtin_models/BVLC-AlexNet.yml
// builtin_models/BVLC-GoogLeNet.yml
// builtin_models/BVLC-Reference-CaffeNet.yml
// builtin_models/BVLC-Reference-RCNN-ILSVRC13.yml
// builtin_models/SqueezeNet_v1.0.yml
// builtin_models/SqueezeNet_v1.1.yml
// DO NOT EDIT!

package caffe2

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data, name string) ([]byte, error) {
	gz, err := gzip.NewReader(strings.NewReader(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _bvlcAlexnetYml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x56\x5d\x6f\xe3\xba\x11\x7d\xd7\xaf\x18\xc0\x58\x20\xdb\xda\xfa\xb0\x2d\xdb\x51\x81\xa2\x6d\xda\x87\x02\x45\x1e\x7a\x3f\x5e\x2e\x16\xc6\x88\x1c\x59\xdc\x95\x48\x81\x1c\x39\xc9\xfe\xfa\x0b\x92\x92\xe5\x60\xf7\xde\xcd\x83\x43\x71\xce\x0c\x0f\x87\x33\x87\xd4\xd8\x53\x05\xff\xfa\xf5\x7f\x4f\x9b\x7f\x76\xf4\xfa\x4c\x0c\x2b\xf0\x93\x60\x1a\x78\x33\xa3\x85\xde\x48\xea\x92\xc6\x62\x4f\x2f\xc6\x7e\xa9\x12\x80\xe8\xf4\x84\x4d\x43\x5b\x58\xc1\xcd\x06\x8d\xb1\xc0\x2d\x4d\x3e\x00\x57\xb2\x4e\x19\x5d\x41\x9e\x9e\xd2\xe2\x1d\x74\x32\x81\x30\x9a\x2d\x2a\xcd\xc9\x0d\x5c\xa4\x39\xac\x6e\x00\xa5\x1b\x63\x7b\xe4\x38\x06\x47\x3d\x6a\x56\xe2\x66\x8f\xd6\xc4\xc7\x41\xa5\xc9\x56\xb0\x82\xdb\x87\x83\xd1\x91\x04\x36\x30\x90\xf5\xc8\x48\x0d\x06\x4b\x52\x09\x1f\x33\x81\xe5\x6f\x05\xfd\xd8\xb1\x1a\x3a\x82\xa1\x43\xf6\x78\x07\x02\x35\xd4\x04\x6e\x20\xa1\x1a\x45\x32\x01\xc0\x5e\x1e\xf6\x55\xf0\xbc\x0c\x63\x05\x16\xd5\x60\xcd\x67\x12\x9c\x09\xb4\x7d\xb7\x11\x3e\x35\x55\x80\x6d\xc4\x30\x06\xa4\xf8\x21\xf2\x12\x90\xc3\x20\x0e\xfb\x8e\xaa\x1f\x3a\x4d\xc0\xc9\xed\xcf\xa9\xdc\x63\x25\x39\x61\xd5\xc0\x21\xd7\x7f\x4f\x00\x7e\x6e\x95\x9b\xf2\xa2\x1c\x20\x58\x1a\x3a\x25\x62\xc6\x4d\xb3\x1c\x28\x44\xcf\x9a\xa4\x3f\x08\x3f\x3d\x97\xcc\x30\xd6\xb3\x47\x9a\x00\xfc\x5b\x35\x0d\x59\xd2\x82\x5c\x05\xda\x30\x84\x13\x56\xfa\x02\x2f\x8a\xdb\xe0\x69\xa9\x53\x97\x96\xfd\x9c\x44\xc6\x0d\x8e\x97\x9e\x34\x87\x10\x7f\x4b\x00\x94\x56\xac\xb0\x53\x5f\x3d\x42\x1b\xbd\xf9\x4a\xd6\x40\xad\xd0\x91\xf3\xc7\x99\xa7\x05\x28\xed\x98\x50\x7a\x8e\x05\x3c\x34\x66\xd4\x12\x34\x09\x72\x0e\xed\x5b\xac\xc5\x69\xdd\x35\xa0\x5b\x42\xc6\x9d\xb1\x81\x02\x2e\x78\x25\x68\x3a\x64\xe8\x8c\x73\x1f\xd3\x90\x0d\x82\x7a\xd4\xb2\x23\xb9\x24\xc5\x53\x56\x4c\x36\xba\xee\x0e\xf9\x3a\xcf\x73\x70\x1a\x07\xd7\x1a\x4e\xa3\x13\x39\x86\x2b\x76\x4a\xe2\x54\x58\x53\xcd\xa1\x16\x04\x72\xb4\x7e\x2b\x4b\x26\x3c\xa3\x25\x62\x79\x0a\x11\x43\x7e\x96\x18\x80\x42\x8c\x16\xc5\x5b\x02\x50\x1e\xd3\x6d\x79\xfa\x00\xa8\x65\x20\x0b\x45\x7a\xda\x3d\xee\x4f\xe9\xfd\xf9\x99\xda\xd7\xbd\x3f\x44\x36\xc3\xa6\xb8\xf9\x7b\xef\x22\xfa\x62\x02\xc1\x58\x2e\xc6\x53\x9e\x6e\x3f\x80\x89\x67\x7a\xb7\xba\x23\x5e\xc3\xe8\x3c\xdd\xcf\xa3\xe3\x60\x16\xa4\x99\x2c\x08\x6b\x06\x9f\xad\x87\x5f\x82\xd9\x5b\xf0\x4a\x16\x2f\x41\x38\x8a\x3c\x00\xdc\x1a\x1e\xf6\xf0\x57\x28\x26\xaf\x8f\xf0\x17\xd8\x42\xaf\xac\x35\x76\x0d\xae\x35\x63\x27\x27\xca\xbe\xab\xa0\x56\x0c\xad\xba\xb4\x64\x6f\xdc\xd2\x8f\xef\x0b\xd4\xa7\x2d\xe4\x90\x24\xd4\x6f\xf0\x9f\x2b\x6a\xf8\xa9\xa5\xae\xc5\x9e\x2c\xfc\xc3\xcd\xc3\xc4\xd2\x52\x82\x2b\x58\xbe\x82\x16\xe0\xe0\xa5\x21\x83\x17\xaa\x9d\x62\xf2\x43\x62\x91\xa6\x73\x85\xcf\x5b\x9a\x75\x6c\x03\x2d\xf3\xe0\xaa\x2c\xbb\x28\x6e\xc7\x3a\x15\xa6\xcf\xbc\x68\x66\xa1\xbd\x32\xb6\x44\x59\x8f\x8e\xc9\x66\xc1\xc7\x65\xf5\xb5\x13\x67\xec\xe8\x55\x13\xdf\x22\x54\x59\x16\xd7\x4e\xb5\x1a\x5c\x2a\x44\xfc\xcc\xf6\xa7\xed\x7e\xa3\x7a\xbc\x90\x26\xde\x88\x0e\x9d\x53\xcd\xd4\x50\x1b\x5f\x13\x1b\x49\x34\x6c\x84\xd1\x57\xd3\x8d\x7e\x16\xbb\x8d\xa6\xd1\x86\x7f\xec\x05\xd5\xa5\x83\x6c\x92\x15\x74\x4a\x90\x76\xf4\xae\x71\x93\x69\xb2\x82\x51\x5b\x72\x6c\x95\x60\x92\xc9\x0a\x94\x1e\x46\x0e\x29\x59\xb0\x71\xce\xcb\xcf\x0a\x1a\x65\x1d\x47\x14\xf0\xdb\x40\xdf\x08\xfc\x26\x4c\x57\x10\xb8\x27\x51\x43\xef\xf4\x65\x66\x71\x17\x27\x80\xde\x49\x50\xe8\xad\xb0\xc4\x12\x65\x40\x7f\x51\x30\xd9\x70\x7a\x61\xe9\x65\x6a\x92\x6c\xa9\x7a\xd2\xfe\x0a\x70\x15\xfc\x56\xac\x61\xb7\x86\xed\xf6\x18\x7e\x3e\x4d\x90\x9e\x50\x7b\xe3\x76\xb7\x86\xa2\x38\xae\xa1\xc8\xf7\x9f\x12\x33\xf2\x30\x72\xdc\xa1\x5f\x3c\x84\x9f\x98\x46\x9b\x6f\x91\xb0\xaf\x86\x90\x47\x4b\x01\x8a\xdf\xdb\x59\xc4\x2f\xe4\x92\xef\x6c\x6e\xc2\x74\x58\x87\x9c\xdd\xed\x6d\xca\xd8\xf7\xf6\x37\xad\xec\xce\xa3\xed\xaa\xb9\x78\xbc\x54\xa6\xb2\xef\x44\xda\x77\x59\xef\x4b\x6b\x2e\xb7\xb9\x78\x32\xf7\xa6\x1d\x71\xca\xaf\xfc\x3e\x8c\x68\x49\x7c\x71\x63\x5f\xc1\x5e\x6e\x77\xfb\xba\x3c\xed\x76\x28\x70\xbf\x7f\xdc\x9e\xf2\x43\x89\xc5\x29\x97\xf5\x2e\x2f\x0e\x98\x84\x90\x3e\xef\xf3\x9d\x37\x37\xdf\xc5\xe2\xd0\x06\x11\x79\x21\xaf\xde\x0e\x2c\x39\x33\x5a\x41\x9e\x73\x8d\x8e\xde\xb1\x75\xbb\x14\x7b\xfc\x6a\x34\xbe\xb8\xd0\x31\x8e\x8d\xa5\x34\xdc\x4b\xa9\xb1\x97\x99\x7b\xe8\xa1\xed\x39\xbc\x11\xde\xf5\xcd\xb9\x48\xf3\x04\xe2\xb2\xe7\x01\xb9\xad\xe6\x8b\xfb\xac\x89\xd3\xa1\x4e\x60\x66\x32\x99\xbd\xc6\x2f\x36\xe5\xce\x68\x45\xab\xae\xfe\x24\xb1\x73\x04\x2b\x50\x4d\x94\x35\x6e\x29\xea\xdd\x4c\x3b\xde\x7d\x7e\xc0\x06\x50\xc3\xe4\x79\xff\x3e\xb8\x7b\x28\x78\xcf\x85\xd7\x7d\x4e\xe2\x44\x08\x2f\x49\x1b\x26\x3f\xfe\x83\x28\x8d\xea\x28\xbc\xa6\xdc\x5c\x4f\xdf\xa6\xd8\xb7\xff\x74\xdd\x2e\x94\xe2\xd2\xcb\x99\x1e\xe9\x11\x05\x8a\xfc\x88\xa5\x10\xc7\xfa\x84\x4d\x5e\xe4\xa7\xbc\x14\x78\x6a\x8e\x79\x5e\xde\x25\x6a\x71\x6a\x44\x79\x10\xfb\xf2\x91\xb6\xbb\xbc\x3c\xee\x0e\xe5\x31\xdf\x1d\x31\x47\x59\xe6\xb2\x38\x94\x4d\x82\xcc\x56\xd5\x23\x47\x0d\xa5\x57\xb6\x08\x93\xdc\xc0\x62\x4b\x00\xbe\x28\x2d\x2b\x78\x7a\x7e\x9e\x32\xe3\xbf\xfd\x8e\xa2\x44\xdd\x7c\x1e\x9e\x9e\x9f\xd7\xf0\x7f\xff\x93\xa6\x41\xd9\xe7\xeb\xf0\xec\x2b\xdb\x11\x57\xf0\x5f\x5f\xc8\xf1\x19\x3a\xcd\xdd\x9e\x70\xf7\x37\x7a\x02\xd0\xa3\x56\x0d\x39\x3e\xe3\xc8\xad\xb1\x15\x60\x2d\xc7\x4e\x26\xbf\x07\x00\x00\xff\xff\xf9\xb5\xb7\xb2\xd3\x0a\x00\x00"

func bvlcAlexnetYmlBytes() ([]byte, error) {
	return bindataRead(
		_bvlcAlexnetYml,
		"BVLC-AlexNet.yml",
	)
}

func bvlcAlexnetYml() (*asset, error) {
	bytes, err := bvlcAlexnetYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "BVLC-AlexNet.yml", size: 2771, mode: os.FileMode(420), modTime: time.Unix(1506056267, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _bvlcGooglenetYml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x56\xdd\x6e\xeb\x38\x0e\xbe\xf7\x53\x10\x27\x38\x40\xbb\x9b\x38\xb6\xe3\xa4\xae\x07\x58\x60\xa7\x83\x5d\x2c\x76\xd0\x8b\xfd\xbd\x58\x0c\x02\x5a\xa2\x6d\x4d\x6d\xc9\x2b\xd1\xe9\xcf\xd3\x0f\x24\xdb\x49\xda\xe9\xc1\xe9\x45\x11\x8b\x1f\xc9\x8f\x14\x45\x52\x63\x4f\x25\xfc\xf8\x9f\x9f\x1f\x36\x7f\x35\xa6\xf9\x99\x1e\x89\x61\x05\xfe\x18\x4c\x0d\xaf\x66\xb4\xd0\x1b\x49\x5d\x54\x5b\xec\xe9\xd9\xd8\xa7\x32\x02\x98\xd4\x1e\xb0\xae\x29\x83\x15\x9c\x65\x50\x1b\x0b\xdc\xd2\xac\x03\x70\x22\xeb\x94\xd1\x25\x24\x71\x11\xa7\xef\xa0\xb3\x08\x84\xd1\x6c\x51\x69\x8e\xce\xe0\x34\x4e\x60\x75\x06\x28\x5d\x1b\xdb\x23\x4f\xbf\xc1\x51\x8f\x9a\x95\x38\xcb\x27\x69\xe4\xed\xa0\xd2\x64\x4b\x58\xc1\xf9\xc3\xc1\xe8\x48\x02\x1b\x18\xc8\x7a\xe4\x44\x0d\x06\x4b\x52\x09\x6f\x33\x82\xcb\xdf\x0a\xfa\xb1\x63\x35\x74\x04\x43\x87\xec\xf1\x0e\x04\x6a\xa8\x08\xdc\x40\x42\xd5\x8a\x64\x04\x80\xbd\x3c\xe4\x65\xd0\x6c\x86\xb1\x04\x8b\x6a\xb0\xe6\x57\x12\xbc\x15\x68\xfb\x6e\x23\x42\x6a\xca\x80\xdb\x88\x61\x0c\x50\xf1\x7d\x68\x13\xa0\xc3\x20\x0e\x79\x47\xe5\xf7\xb5\x66\xe4\xac\xf7\x1d\x36\xd7\x60\x49\x4e\x58\x35\x70\xc8\xf7\x9f\x3e\x7e\x02\xfc\xab\x55\x6e\x4e\x95\x72\x80\x60\x69\xe8\x94\x98\x2e\xc1\xd4\x97\x3b\x86\x49\xb3\x22\xe9\xef\xc6\x1f\xfb\x3a\xea\x42\x1d\x0d\x63\xb5\xe8\xc4\xf0\x5f\x82\x67\x33\x76\x12\x3a\xf5\x44\xfe\x3e\xb8\x45\xfd\x04\x0f\xad\x55\x8e\x15\x6a\xf8\xe7\x1b\x35\x24\x5f\x43\x09\x61\xd7\x81\x27\xd0\x52\x37\x2c\x76\x3f\x30\xb8\xb8\x09\x3c\xe2\x08\xe0\x27\x55\xd7\x64\x49\x0b\x72\xa1\x48\x0d\x43\xa8\x2c\xa5\x1b\x78\x56\xdc\xce\x66\x3a\xd5\xb4\xec\xcf\x24\x32\x6e\x70\x6c\x7a\xd2\x1c\xec\xfe\xf0\x4d\x2d\x27\xb0\x23\xf0\xcc\x7c\x19\xf0\xc6\x7a\xfc\xe7\x06\x46\x47\x0e\xbe\xbc\xe0\x49\x91\xfd\xe2\x03\x55\x5a\xb1\xc2\x4e\xbd\x51\x30\xf5\x4c\xde\xbf\x03\xa5\x1d\x13\x4a\x1f\xcb\x97\x06\x47\xe7\x14\xea\x2f\xde\xc0\xff\x47\x25\x9e\x8e\xce\x74\x27\xb2\xf1\x60\x0d\x1b\x7e\xe1\xc9\x2c\x82\x9c\x63\x64\xe8\x08\x6d\x20\x69\x91\x09\x24\x09\x7c\x85\xc1\x74\x4a\xbc\x86\xd4\x06\x5f\xc6\xaa\x46\x69\xec\xe0\x83\xb5\xb5\x87\xb0\x4f\xb3\x79\xf6\x56\xfb\x51\xb4\x50\xa3\x63\xb2\x97\xe0\x6f\x0e\x09\xd0\x60\x44\xeb\xe0\xe4\x20\xdb\x2f\x5f\xb7\x3f\x84\xfa\x20\xa8\x46\x2d\x3b\x92\x97\x32\xf1\x2e\x15\x93\x9d\x2e\x29\x5b\xe7\x49\xb2\x4e\x92\x04\x9c\xc6\xc1\xb5\x86\xaf\x4c\xde\xc2\xe8\xbc\x93\x4f\x83\x5d\xea\xef\xbd\x03\x53\xf9\x27\xed\xe9\xb2\x19\x36\x29\xa0\x10\xa3\x45\xf1\x0a\x87\x22\xbe\xfb\x0a\x37\xbb\x34\xde\x7d\x05\xb2\xd6\xd8\x5b\x40\x2d\x67\xe0\xfe\x02\x2c\x8a\xf8\xfe\x2b\xdc\xa4\x69\x9c\x9e\x81\x66\xca\xd4\x09\x3b\x25\x27\xde\x8e\x78\x3d\xb3\xfb\x75\x74\x1c\xc4\x82\xb4\xcf\x8d\xb0\x66\xf0\x95\x76\xf3\xef\x20\xf6\x12\x3c\x91\xc5\x26\x74\xcb\x34\x09\x00\xb7\x86\x9b\x1c\xfe\x08\xe9\xac\x75\x0b\x7f\x80\x0c\x7a\xe5\xfd\xad\xc1\xb5\xe1\x15\x4c\xc1\x00\x42\xa5\x18\x5a\xd5\xb4\x64\xcf\x3c\xe3\x5b\x9f\x00\xd5\x2b\xdd\xb8\xf0\x1c\xaa\x53\x27\x8e\x4d\x28\x78\x4d\x3c\x55\xa5\x18\x7f\x7a\x7c\x9c\x69\x56\xc8\xa2\x3d\x3a\xf5\x46\x65\x9a\x15\x3e\x24\x84\xbf\xe7\x89\xf0\xaf\xe0\xcf\x33\xbf\xbf\x18\xfb\x8c\x56\xc2\x80\xce\x95\xb0\x3f\x64\x71\x91\xa7\xd0\xbb\xf8\x0a\xf3\x23\x8a\xa7\x2b\x50\x9a\x66\xbb\xb8\xc8\x3f\x80\x66\x43\x9b\x05\x5c\x42\x7a\x28\x8a\xb8\x98\x61\xef\x1b\x87\x30\xfa\x44\x96\x49\x42\x6d\x4d\x1f\x12\x16\xa6\xc6\xf2\x68\x2d\x9d\x5f\x2c\xac\xe0\xf2\x15\x1a\x36\x0e\xbe\x7f\x6f\xe1\x99\x2a\xa7\x98\xfc\x4f\x62\x11\xc7\x4b\xcf\x59\xae\x60\x19\x36\x1b\x68\x99\x07\x57\x6e\xb7\x68\x5f\xd4\x29\x36\xb6\xd9\x0e\xb2\xde\xa6\x79\x72\x1f\xe7\x45\x9e\xc5\x83\xac\xdf\xe1\x1a\xc5\xed\x58\xc5\xc2\xf4\x5b\x3f\x03\xb7\xa1\x51\x6e\xd9\x12\x6d\xfb\xf0\x1a\xb6\xc1\xb6\xdb\xbe\xbf\x81\x68\x05\x9d\x12\xa4\x1d\xbd\xeb\x85\xd1\x7c\x58\xc2\xa8\x2d\x39\xb6\x4a\x30\xc9\x68\x05\x4a\x0f\x23\xbb\xa9\xe9\x2d\xd8\xe9\xcc\xdf\xd0\x0a\x6a\x65\x1d\x4f\x28\xe0\xd7\x81\x7e\x37\x46\x37\xe1\xb8\x04\xd5\x63\x43\xd1\x34\xa9\xae\x5a\xf6\xc2\xe2\xca\x4e\x00\xbd\xeb\xea\xe1\x71\x06\x17\x17\x2b\x03\xfa\x71\xcc\x64\x43\xfa\x83\xeb\xcb\xd1\x3c\x18\xa5\xea\x49\xfb\x41\xeb\x4a\xf8\x5f\xba\x86\xdd\x1a\xb2\xec\x2e\xfc\xfb\x65\x86\xf4\x84\xda\x0b\xb3\xdd\x1a\xd2\xf4\x6e\x0d\x69\x92\xff\x12\x99\x91\x87\x91\xa7\x08\xbd\xf3\x60\x7e\x66\x3a\xc9\x22\x98\xe3\xaa\x09\x79\xb4\x14\xa0\xf8\x59\x64\x13\xfe\x42\x2e\xfa\x24\xb8\x19\xd3\x61\x15\x72\x76\x15\xdb\x9c\xb1\xcf\xe2\x9b\x3d\xbb\xe3\x68\xbb\x32\xd4\x45\xb9\xdd\xfa\xbe\x1e\xcb\xbe\x13\x71\xdf\x6d\xfb\x17\x4d\xbc\xd4\x41\x48\x9d\xff\x76\xaf\xda\x11\xc7\x53\xb3\xba\x32\x23\x5a\x12\x4f\x6e\xec\x4b\xc8\x65\xb6\xcb\xab\x7d\xb1\xdb\xa1\xc0\x3c\xbf\xcf\x8a\xe4\xb0\xc7\xb4\x48\x64\xb5\x4b\xd2\x03\x46\xc1\xa4\xcf\xfb\xb2\x59\x2c\xef\xa6\xb1\x38\xb4\xa1\x83\x2d\xb3\xc2\x92\x33\xa3\x15\xe4\x39\x57\xe8\xe8\x1d\x5b\xb7\x8b\xb1\xc7\x37\xa3\xf1\xd9\x85\x52\x76\x6c\x2c\xc5\x61\xf4\x87\x37\x30\x73\x9f\xb6\x80\x63\xd8\xc4\x3e\x14\xf4\x31\x8d\x93\x08\x26\xc7\xc7\x01\xb9\x2d\x97\x05\xe9\xa8\x89\xe3\xa1\x8a\x60\xe1\x32\x8b\xfd\x50\xbb\xc8\x94\x3b\xa2\x15\xad\x3a\xf9\xbb\xc4\xce\x11\xac\x40\xd5\x53\x27\xe5\x96\xa6\x16\xbb\x10\x9f\x16\x0a\xff\x83\x0d\xa0\x86\x59\xf3\x7a\x0f\xbb\x5a\xc8\xbc\xe6\x85\xd7\x75\x56\xa6\x83\x60\x5e\x92\x36\x1c\xc6\xeb\x37\xac\xd4\xaa\xa3\xb0\xb5\xba\xa5\xa2\x7e\x9f\x64\xdf\x56\xe7\x5d\xe3\x42\x69\x72\x7d\xb9\xd5\xa2\x4a\x0b\x91\x88\x83\xcc\x85\x28\xf6\x24\x30\xdd\xdf\x55\x09\x15\xb2\x48\x29\xab\xef\xf3\xab\x44\x5d\x94\xf6\x55\x92\x64\xe2\xae\xde\xef\xb3\x22\xc9\xee\xe5\xdd\x9d\x3c\xec\x13\x51\xdc\x65\x87\xfb\x03\x61\x1e\x21\xb3\x55\xd5\xc8\x53\x1b\xa4\x17\xb6\x08\x9a\x38\xec\xc9\x17\x59\x04\xf0\xa4\xb4\x2c\xe1\xe1\xf1\x71\xce\x8c\xff\xf6\x11\x69\x1a\x2d\x76\x67\x9d\x9b\x87\xc7\xc7\x35\xfc\xc3\xff\x8b\xe3\x30\x4e\x96\xa9\x7e\xf4\xb5\xed\x88\x4b\xf8\x9b\x2f\xe5\x69\xdd\x9f\xcf\xce\xab\x72\x68\x3f\xb3\x42\x04\xd0\xa3\x56\x35\x39\x3e\xe2\xc8\xad\xb1\x25\x60\x25\xc7\x4e\x46\xbf\x05\x00\x00\xff\xff\x4f\x03\x15\xc5\x3d\x0c\x00\x00"

func bvlcGooglenetYmlBytes() ([]byte, error) {
	return bindataRead(
		_bvlcGooglenetYml,
		"BVLC-GoogLeNet.yml",
	)
}

func bvlcGooglenetYml() (*asset, error) {
	bytes, err := bvlcGooglenetYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "BVLC-GoogLeNet.yml", size: 3133, mode: os.FileMode(420), modTime: time.Unix(1506056311, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _bvlcReferenceCaffenetYml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x56\xcd\x8e\xdb\x36\x10\xbe\xeb\x29\x06\x30\x0a\x6c\x5a\x5b\x7f\x96\xbd\x8e\x0a\x14\x6d\x37\x97\x14\xc5\x1e\x82\xb4\x97\x22\x30\x28\x72\x64\x31\xa1\x48\x81\x1c\xad\x77\xf3\xf4\x05\x49\xc9\xb2\x9b\xa4\xd9\x83\x57\xe4\x7c\x33\xfc\xe6\x97\xd4\xac\xc7\x1a\x7e\xff\xfb\xcf\x87\xcd\x3b\x6c\xd1\xa2\xe6\xb8\x79\x60\x6d\x8b\x8f\x48\xb0\x02\x2f\x07\xd3\xc2\x8b\x19\x2d\xf4\x46\xa0\x4a\x5a\xcb\x7a\x3c\x1b\xfb\xa9\x4e\x00\xa2\x7e\x50\x28\x61\x05\x17\x19\xb4\xc6\x02\x75\x38\xe9\x00\x3c\xa1\x75\xd2\xe8\x1a\xf2\xf4\x90\x16\x37\xd0\x49\x04\xdc\x68\xb2\x4c\x6a\x4a\x2e\xe0\x22\xcd\x61\x75\x01\x48\xdd\x1a\xdb\x33\x8a\xdf\xe0\xb0\x67\x9a\x24\xbf\xc8\xa3\x34\xf1\x76\x98\xd4\x68\x6b\x58\xc1\x65\xe1\x60\x74\x28\x80\x0c\x0c\x68\x3d\x32\x52\x83\xc1\xa2\x90\xdc\xdb\x4c\x60\xf9\x5b\x41\x3f\x2a\x92\x83\x42\x18\x14\x23\x8f\x77\xc0\x99\x86\x06\xc1\x0d\xc8\x65\x2b\x51\x24\x00\xac\x17\xfb\xaa\x0e\x9a\xa7\x61\xac\xc1\x32\x39\x58\xf3\x11\x39\x65\x9c\xd9\x5e\x6d\xb8\x0f\x4d\x1d\x60\x1b\x3e\x8c\x01\xc9\xbf\x8b\x3c\x05\xe4\x30\xf0\x7d\xa5\xb0\xfe\xae\xd2\x04\x9c\xd4\xfe\x9f\xca\x35\x56\xa0\xe3\x56\x0e\x14\x62\xfd\x4b\x02\xf0\xbe\x93\x6e\x8a\x8b\x74\x21\x7f\x16\xdd\xa8\xc8\x97\x40\x6b\x94\x32\x67\xa9\x4f\x61\x3f\xa4\x1c\xde\xf6\xec\x14\x2a\x25\xea\x84\xf4\x79\x84\xd4\x8e\xec\x18\xa2\xea\x52\x78\x4b\xde\x1a\x03\x8b\x83\x92\x3c\xe6\xcf\xb4\x4b\x79\x40\xe4\xd1\xa0\xf0\x69\xf5\xdb\xbf\x29\x7c\xf6\x66\x87\xb1\xb9\x68\x9c\x25\x75\xe0\x4c\x8f\x20\x64\x3b\x95\xaa\x4b\x13\x80\x37\xcb\x32\x94\xa4\xa1\x85\x48\x50\x8a\x7e\x28\x79\xea\xc8\xef\x09\x46\x6c\xc3\xc6\x53\x8f\x9a\x82\xe9\x9f\x13\x08\x18\x63\x05\x5a\xcf\x6c\x30\x46\x79\x24\xd3\x02\xb4\x2f\x2a\x25\x3f\x47\x12\x8a\xbd\xf8\x52\x92\x0e\xdc\x59\x12\xef\x50\xc0\x9d\xd4\x30\x77\xcc\xfa\xa2\x2a\x1d\x08\xa3\x11\x1a\x6c\x8d\xc5\x5b\x2b\xaf\xd2\x2f\x42\xed\x34\x1b\x5c\x67\x42\xa0\x25\xa1\x8d\xa7\x6d\x8b\x7c\x9d\xe7\x79\x0a\xef\x3b\x6f\xc9\x11\x3c\x31\x25\x45\x14\x4e\x65\xcc\x34\x47\x10\xa3\x0d\x89\xb9\xb8\xcd\xdc\x8d\x99\xad\x37\x13\x83\x71\x65\x81\x71\x3e\x5a\xc6\x5f\x60\x77\x9f\x56\x45\xf9\x43\xf0\x57\x19\xe7\xa0\x48\x0f\xe5\xb6\x3c\xfc\x87\xa7\x69\x7c\x2b\xf9\x4c\x92\x19\x36\xc5\xad\x7e\xd4\x8e\xa2\xdd\x22\x3a\xe4\x5e\x64\x62\x5a\xaf\xce\x76\x3e\x58\xa3\xf3\x64\x3f\x8e\x8e\x82\x98\xa3\x26\xb4\xc0\xad\x19\xfc\xc9\x77\x7f\xb9\xb9\xda\xd8\x13\x5a\x76\x0a\x93\xa8\xc8\x03\xc0\xad\xe1\xae\x82\x9f\xa0\x98\xb4\x5e\xc1\x8f\x50\x42\x2f\xad\x35\x76\x0d\xae\x33\xa3\x12\x13\x61\x60\xd0\x48\x82\x4e\x9e\x3a\xb4\x0b\x33\x47\x52\xa9\xf4\xd5\xad\x8b\x3e\x70\x21\x8a\x28\xa0\x79\x81\x3f\xb0\x6d\xe1\x8d\xd1\xac\x1b\x11\x7e\xfd\x88\x6d\x2b\xe2\x22\xb1\x78\xa9\x39\x58\xc1\xb2\x0a\x03\x86\x0d\xbe\x48\x32\x38\x63\xe3\x24\xa1\xff\x44\xe2\x69\x3a\x17\xfa\xec\xd6\x3c\x1c\x37\xd0\x11\x0d\xae\xce\xb2\x93\xa4\x6e\x6c\x52\x6e\xfa\xcc\x0f\xe5\x2c\xf4\x6c\x46\x16\x31\xeb\x99\x23\xb4\x59\xd0\x71\x59\xf3\xa4\xf8\xf1\x72\xec\x31\xe0\x34\xd2\xc5\x58\x9d\x65\x91\x46\xaa\xe5\xe0\x52\xce\xe3\x32\xab\x0e\x65\xb5\x91\xbe\x6d\x35\xd2\x86\x2b\xe6\x9c\x6c\xa7\x16\xdb\xf8\x02\xd9\x08\xc4\x61\xc3\x8d\x7e\x32\x6a\xf4\xbb\x4c\x6d\x34\x8e\x36\xfc\x23\x3f\xb0\x5d\x3a\x88\x36\x59\x81\x92\x1c\xb5\xc3\x9b\x56\x4e\xa6\xcd\x1a\x46\x6d\xd1\x91\x95\x9c\x50\x24\x2b\x90\x7a\x18\x29\x44\x67\xc1\xc6\x3d\xdf\xb3\x2b\x68\xa5\x75\x14\x51\x40\x2f\x03\x7e\x71\x81\x6c\xc2\x76\x0d\x81\x7b\x12\x67\xf4\xd5\xfc\x9a\x59\x5c\xd9\x09\xa0\x9b\x11\xe7\x01\xf1\x88\xc5\xca\xc0\xfc\x45\x44\x68\x43\x22\xc3\xd1\xcb\xd6\x74\x25\x08\xd9\xa3\xf6\x57\x8c\xab\xe1\x9f\x62\x0d\xdb\x35\x94\xe5\x7d\xf8\xf9\x30\x41\x7a\x64\xda\x0b\xcb\xed\x1a\x8a\xe2\x7e\x0d\x45\x5e\x7d\x48\xcc\x48\xc3\x48\xd1\x43\x7f\x78\x30\x3f\x31\x8d\x32\x3f\x7a\x82\x5f\x2d\x32\x1a\x2d\x06\x28\xfb\x9a\x67\x11\xbf\x90\x4b\xbe\xe2\xdc\x84\x51\xac\x09\x31\xbb\xf2\x6d\x8a\xd8\xd7\xfc\x9b\x4e\x76\xc7\xd1\xaa\x7a\x2e\x1e\x3f\x24\x53\xd1\x2b\x9e\xf6\x2a\xeb\x9f\x35\xd2\x5c\x79\x73\xf1\x64\xee\x45\x3b\xa4\x94\x9e\xe9\xd6\x0c\xef\x90\x7f\x72\x63\x5f\x43\x25\xca\x6d\xd5\xec\x0e\xdb\x2d\xe3\xac\xaa\x5e\x97\x87\x7c\xbf\x63\xc5\x21\x17\xcd\x36\x2f\xf6\x2c\x09\x26\x7d\xdc\xe7\x3b\x75\xee\xc3\x93\x65\x43\x17\x26\xca\x19\xfd\xdc\x76\xfe\x22\x32\xa3\xe5\xe8\x39\x37\xcc\xe1\x0d\x5b\xb7\x4d\x59\xcf\x3e\x1b\xcd\xce\x2e\x34\x8f\x23\x63\x31\x0d\xf7\x5e\x6a\xec\x69\xe6\x1e\xda\xa4\x3c\x86\x37\xc8\xb7\x5a\xe8\x58\xa4\x79\x02\x91\xc1\x71\x60\xd4\xd5\xf3\x1b\xe1\xa8\x91\xd2\xa1\x49\x60\x26\x35\x89\xa5\x96\x17\x59\x02\x20\xdd\x91\x59\xde\xc9\x27\x9f\x55\xa6\x1c\xc2\x0a\x64\x1b\x27\x1e\x75\x18\x47\xe1\xec\x42\xbc\x19\xfd\x07\x19\x60\x1a\x26\xcd\xeb\xb7\xc8\xd5\xa3\xc4\x6b\x2e\xc4\xae\xe3\x13\x37\x82\x79\x81\xda\x10\xfa\xef\x6f\x58\x69\xa5\xc2\xf0\x72\x73\x73\x6d\x7d\x19\x6e\x3f\x0a\xa6\xcb\x78\xa1\x14\x8f\x5e\xf2\x5b\xec\x77\xc8\x76\x55\x59\x16\x9c\x57\x39\xf2\xfb\xb6\xa8\x70\x57\x1c\x8a\xfb\x83\xd8\x1f\xaa\xdd\x55\xa4\xae\x94\x78\xd9\x94\x15\x67\x2d\xdf\xe3\x3e\x2f\xb6\xc5\xae\x2c\x0e\x15\xbf\xdf\xef\x38\x1e\x5a\x7c\x9d\x30\x22\x2b\x9b\x91\xe2\x68\xc5\x67\xb2\x0c\xa6\xd1\x03\x8b\x2c\x01\xf8\x24\xb5\xa8\xe1\xe1\xf1\x71\x8a\x8c\x5f\x7b\x8f\xe2\xb8\xba\xe8\xdc\x3d\x3c\x3e\xae\xe1\x9d\xff\x49\xd3\x30\xf0\xe7\x7b\xf2\xe8\xab\xdc\x21\xd5\xcb\x43\x66\x05\xd3\xde\xe5\xb9\x18\x06\xd1\xa4\x90\x00\xf4\x4c\xcb\x16\x1d\x1d\xd9\x48\x9d\xb1\x35\xb0\x46\x8c\x4a\x24\xff\x06\x00\x00\xff\xff\x62\x75\xd1\x25\x4a\x0b\x00\x00"

func bvlcReferenceCaffenetYmlBytes() ([]byte, error) {
	return bindataRead(
		_bvlcReferenceCaffenetYml,
		"BVLC-Reference-CaffeNet.yml",
	)
}

func bvlcReferenceCaffenetYml() (*asset, error) {
	bytes, err := bvlcReferenceCaffenetYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "BVLC-Reference-CaffeNet.yml", size: 2890, mode: os.FileMode(420), modTime: time.Unix(1506056331, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _bvlcReferenceRcnnIlsvrc13Yml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x56\xc1\x6e\xe3\x38\x12\xbd\xeb\x2b\x0a\xf0\x65\x17\x88\x25\xcb\x76\xe2\x44\x87\xc5\xa2\x03\xec\xa2\x81\x1e\x1f\xd2\x83\xbe\x0c\x06\x46\x89\x2c\x59\xec\x48\xa4\x50\x2c\xd9\xf1\x7c\xfd\x80\x94\x2c\x39\xd3\x99\x69\x1f\x0c\x89\x7c\x2c\xbe\x7a\xf5\x58\x94\xc5\x96\x0a\xf8\xf4\xed\xcb\xf3\xf2\x85\x2a\x62\xb2\x8a\x96\x2f\xcf\xfb\xfd\xf2\xf3\x97\xaf\xdf\x5e\x9e\xf3\x0d\x2c\x20\x80\xc0\x55\x70\x71\x3d\x43\xeb\x34\x35\x49\xc5\xd8\xd2\xd9\xf1\x6b\x91\x00\x0c\x41\x9e\xb1\xaa\x68\x0d\x0b\x98\xe6\xa0\x72\x0c\x52\xd3\xb8\x06\xe0\x44\xec\x8d\xb3\x05\xac\xd2\xc7\x34\x7f\x07\x1d\xa7\x40\x39\x2b\x8c\xc6\x4a\x32\x81\xf3\x74\x05\x8b\x09\x60\x6c\xe5\xb8\x45\x19\x9e\xc1\x53\x8b\x56\x8c\x9a\xe6\x87\xd9\x24\xc4\x41\x63\x89\x0b\x58\xc0\xf4\xe2\xa1\xf7\xa4\x41\x1c\x74\xc4\x01\x39\x50\x83\x8e\x49\x1b\x15\x62\x26\x30\xff\x16\xd0\xf6\x8d\x98\xae\x21\xe8\x1a\x94\x80\xf7\xa0\xd0\x42\x49\xe0\x3b\x52\xa6\x32\xa4\x13\x00\x6c\xf5\xc3\xb6\x88\x2b\x8f\x5d\x5f\x00\xa3\xe9\xd8\x7d\x27\x25\x99\x42\x6e\x9b\xa5\x0a\xd2\x14\x11\xb6\x54\x5d\x1f\x91\xea\xa7\xc8\x63\x44\x76\x9d\x7a\xd8\x36\x54\xfc\x74\xd1\x08\x1c\x97\xfd\x33\x95\x5b\xac\x26\xaf\xd8\x74\x12\xb5\xfe\x4f\x02\xf0\x6b\x4d\xd0\xf5\x4c\x43\x45\xc1\x58\x2f\x41\xe2\x41\x72\x57\xc5\x8a\xbe\x2c\x9f\xf7\xfb\x51\xbc\x50\xe5\xc9\x2d\x9a\x84\xa2\x90\x69\x8c\x64\xfc\x08\x3a\xa3\x87\x16\x35\x41\x79\x01\x61\xb4\xbe\x6b\x42\x50\x7b\xbc\x09\xf7\xf5\xdb\x2f\xa0\x1a\xf4\x3e\x08\xcb\x1e\x8c\x15\x07\x08\x95\x5a\xb2\xb2\x76\x9a\x52\x03\x93\x06\x2f\xc4\x77\xd0\xb1\x3b\x19\x4d\x1a\x6a\x62\x02\xf4\x80\x81\x64\xb5\x94\x9a\x96\xbe\xa6\xa6\x1a\xd3\x18\x88\x39\x8e\xbc\xf8\x12\xb7\x9d\xc8\x02\xbd\x61\x1b\xea\x2c\x0e\x3c\x11\x18\x09\xde\xc2\x29\x91\x7d\xfa\x29\x85\xff\x39\x06\x26\x4f\xc8\xaa\x0e\x02\x75\xce\x93\xbf\x83\x16\x5f\x29\xd8\xea\x2a\x8d\xab\x2a\xa3\x0c\x36\x63\x52\x1d\xaa\x57\x3c\x12\xa0\xd5\x60\x9d\x80\x04\x4d\xc6\xed\x3e\xd0\x28\x9a\x9f\x74\x90\xe9\xc5\x79\x0f\xff\x37\xec\x6b\xa3\x5e\xe1\xbf\x5c\x1e\xc7\xe7\x84\xaf\x47\xd5\x07\x77\xcf\x6f\xd1\xd8\xd8\x05\xed\x32\x38\x53\xe9\x8d\x50\x78\x24\x51\x69\x0a\x43\xa1\xcb\xab\xe6\xd7\x43\xb9\x84\x5a\xa4\xf3\x45\x96\x1d\x8d\xd4\x7d\x99\x2a\xd7\x66\xa1\x23\x64\xd1\x2b\x99\x30\x51\xd6\xa2\x17\xe2\x2c\xae\xf1\x59\x79\x6a\xd4\x61\xda\xf6\x10\xaa\x73\x30\x8d\x3f\xb1\xca\x37\xef\x22\x22\xbf\x99\x53\xea\xf8\x98\x61\xe9\xb3\x7c\x93\xe7\xe9\xfa\x7e\xbd\x9d\x30\x45\x96\xd9\xf2\x64\xe8\x4c\x9c\x7e\xef\xbb\x8b\x10\x47\xf4\xc0\xe4\x96\x45\xd9\xb8\xf2\xca\x62\x54\xcf\x67\xb3\xd9\x4c\x77\xb1\x65\xb2\x80\xc6\x28\xb2\x73\x2d\x86\x1c\xc7\xc1\x02\x7a\xcb\xe4\x85\x8d\x12\xd2\xc9\x02\x8c\xed\x7a\x89\xa2\xcd\xd8\x61\x2c\x9c\xb6\x05\x54\x86\xbd\x0c\x28\x90\x4b\x47\x3f\xf4\xb3\x65\x1c\x2e\xc0\xb4\x78\xa4\x64\x68\x19\x37\xc7\xe9\xca\xe2\x26\x4e\x04\xbd\x3b\x71\x01\x30\x6c\x31\x47\xe9\x30\xf4\x45\x21\x8e\xf5\x8d\x5b\xcf\x43\x63\x87\xd2\xa6\x25\x1b\x3a\x9e\x2f\xe0\xb7\xfc\x0e\x36\x77\xb0\x5e\xef\xe2\xdf\xef\x89\xeb\xa5\xeb\x65\xc8\x22\x6c\x10\x43\x5c\xfd\x19\xe7\x12\x18\xb9\x57\x84\xd2\x33\x45\x28\x7e\xc4\x7e\xc0\xcf\x04\x92\x0f\x12\x18\x31\x0d\x96\x51\x97\x1b\xfe\xa3\x2a\x1f\xe5\x30\xee\xec\x0f\x3d\x37\xc5\x64\x19\xc6\x73\x3a\x94\xbf\xf7\xc4\xa1\x73\x93\x95\xe8\x49\x46\xb3\x7c\xdf\xcc\x46\x3b\x8e\xb6\xd0\x28\x98\x8d\x36\x5c\x07\x6f\x1c\xfc\xc5\x7a\x92\xc3\xd9\xb1\xf6\xa9\xbc\xc9\xfb\x6d\x55\x4d\xea\xd5\xf7\x6d\x01\x5b\xbd\xde\x6c\xcb\xfb\xc7\xcd\x06\x15\x6e\xb7\x4f\xeb\xc7\xd5\xc3\x3d\xe6\x8f\x2b\x5d\x6e\x56\xf9\x03\x26\x71\xa3\x50\x8b\x6b\xdb\xbf\x1e\xd9\x23\x63\x57\xc7\xb3\x7d\x26\x73\xac\xc5\x87\x0e\xe1\x7a\x56\x14\x72\x2c\xd1\xd3\x9c\x5d\x91\x65\x7e\x93\x62\x8b\x7f\x38\x8b\x67\x1f\x73\xf2\xe2\x98\xd2\x98\x4d\x34\xfe\x98\x51\xf4\xfc\xfa\x10\xaf\xc9\xbf\x9c\xb6\xd8\x0b\x97\xd7\xd3\x76\xc8\xd3\x55\x02\x03\x8d\x43\x87\x52\x17\xd7\xbb\xec\x60\x49\xd2\xae\x4c\xe0\xca\x6c\x9c\x36\xd6\xdc\xcc\x19\x7f\x08\xed\xcc\x9c\x82\x13\xb0\xf1\x04\x0b\x30\x15\x78\x92\xbb\x50\x58\x1b\xab\x7b\x4d\x03\x8c\x07\x84\xf0\x10\xfa\xb2\x85\x71\xe5\xed\x95\x79\x73\x77\x86\x95\x33\xaf\x5b\x8d\x86\x81\x18\x5e\x93\x75\x42\xe1\xf9\x6f\xa2\x54\xa6\xa1\xf8\x81\xe1\xaf\x7e\xfc\x51\xf2\xb3\x91\xda\x0c\x54\x67\x4a\xc3\xd6\x73\x8d\x9f\x1e\x56\xe5\x03\xe1\x0e\xb7\xdb\xf5\x66\xa5\x77\xf7\x55\xf5\x74\x8f\xbb\xcd\xee\x69\xb5\x2d\xf5\x76\x73\x23\xd4\xbc\xa8\xbc\x7f\x54\x9a\x48\x3f\xe9\x3c\xdf\x51\x59\x6d\xf2\x12\xb5\x7a\xdc\xd1\x8e\x74\xb5\xcb\x29\x41\x11\x36\x65\x2f\x43\x27\xa6\x37\x61\x04\x4b\x12\x3f\x69\xe6\xb9\x04\xe0\xd5\x58\x5d\x40\xb8\x10\x06\x65\xc2\x7b\xc8\xc8\x52\xcf\xd8\x4c\x6b\xfe\xf5\xbc\xdf\xdf\xc1\x4b\xf8\x4b\xd3\xf4\xdf\xe1\x94\x86\x0b\xc1\xd8\xe3\x21\xd8\xdb\x93\x14\xf0\x39\xf4\x89\x3d\x49\x68\x36\xc3\xd8\xf4\x55\x13\x1b\xd4\xb8\x20\x01\x68\xd1\x9a\x8a\xbc\x1c\xb0\x97\xda\x71\x01\x58\xea\xbe\xd1\xc9\x9f\x01\x00\x00\xff\xff\x67\xaf\x1b\x54\xf6\x09\x00\x00"

func bvlcReferenceRcnnIlsvrc13YmlBytes() ([]byte, error) {
	return bindataRead(
		_bvlcReferenceRcnnIlsvrc13Yml,
		"BVLC-Reference-RCNN-ILSVRC13.yml",
	)
}

func bvlcReferenceRcnnIlsvrc13Yml() (*asset, error) {
	bytes, err := bvlcReferenceRcnnIlsvrc13YmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "BVLC-Reference-RCNN-ILSVRC13.yml", size: 2550, mode: os.FileMode(420), modTime: time.Unix(1506056347, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _squeezenet_v10Yml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x55\x4b\xaf\xdb\x36\x13\xdd\xeb\x57\x0c\x60\x04\xf8\x3e\xc0\x57\x0f\xcb\x76\x5c\x2d\x0a\xa4\xe9\x26\x1b\x2f\x92\x65\x11\x18\x23\x72\x64\xb1\xe1\x43\x21\x47\xd7\xbe\xf9\xf5\x05\x29\xd9\xf2\x45\x6e\x1b\x2f\x0c\x91\x73\xe6\x75\x38\x3c\xb4\x68\xa8\x81\x2f\xdf\x47\xa2\x1f\x74\x24\x86\x15\xc4\x2d\x70\x1d\xbc\xb8\xd1\x83\x71\x92\x74\xd6\x79\x34\x74\x71\xfe\x5b\x93\x01\x4c\x2e\x1f\xb1\xeb\x68\x03\x2b\xb8\xdb\xa0\x73\x1e\xb8\xa7\xd9\x07\xe0\x99\x7c\x50\xce\x36\x50\xe6\x87\xbc\x7a\x05\x9d\x4d\x20\x9c\x65\x8f\xca\x72\x76\x07\x57\x79\x09\xab\x3b\x40\xd9\xce\x79\x83\x3c\x7d\x43\x20\x83\x96\x95\xb8\xdb\x27\x6b\x16\xe3\xa0\xb2\xe4\x1b\x58\xc1\x7d\x11\x60\x0c\x24\x81\x1d\x0c\xe4\x23\x72\x2a\x0d\x06\x4f\x52\x89\x18\x33\x83\xe5\xb7\x02\x33\x6a\x56\x83\x26\x18\x34\x72\xc4\x07\x10\x68\xa1\x25\x08\x03\x09\xd5\x29\x92\x19\x00\x1a\xb9\xdf\x36\xc9\xf3\x3c\x8c\x0d\x78\x54\x83\x77\x7f\x93\xe0\x42\xa0\x37\xfa\x49\x44\x6a\x9a\x04\x7b\x12\xc3\x98\x90\xe2\x97\xc8\x73\x42\x0e\x83\xd8\x6f\x35\x35\xbf\x74\x9a\x81\xb3\xdb\x7f\x97\xf2\x88\x95\x14\x84\x57\x03\x27\xae\x7f\xcf\xe0\x76\xf6\x96\x18\x50\xf4\x8a\x9e\x29\x40\x50\x46\x69\xf4\xe0\x29\x8c\x9a\x43\x64\xf0\x83\xa6\xeb\x91\x78\x0d\xc8\xb0\x2b\xaf\xd0\xd1\x85\x3c\x0c\x18\x8f\x94\x23\xd5\x68\x25\x54\xc5\xae\x2c\xb9\x4f\x53\x10\xd4\x0f\xca\x63\x7c\x83\x5a\x4f\xc4\x07\x40\x1f\xc7\xc3\x13\x74\x84\x41\xb5\x9a\x62\x68\x49\x83\x76\x2f\xe0\x2c\xf4\xe8\xe5\x25\x62\x2e\x8a\x7b\xd0\xca\x28\x26\x09\x86\x8c\xf3\x2f\x6b\xf0\xf4\x7d\x54\x9e\x40\x53\x08\x19\x80\x70\xc6\x8c\x56\x89\x69\x38\xe4\xe8\x95\x3d\x83\x54\x81\xbd\x6a\xc7\xe8\x97\x26\x4b\xd9\xf3\x3a\xd5\x16\xc3\xc6\xa4\xe4\x53\xce\x3b\x2e\xae\x84\x56\x64\x39\xe4\x0b\x1d\xc7\x47\x3a\x76\xef\xf3\xdd\xbb\x14\xe4\x50\xe6\xf5\x3b\x60\x37\x3c\x55\x69\x1d\xbf\x76\x80\x62\xf4\x28\x38\xb5\xf0\xc9\xe0\x39\x7a\xe7\x99\xa7\x8e\x3c\x59\x41\x21\x0e\xe5\xb2\x4a\xf3\x88\x43\xe4\xac\x80\x0b\xb5\x41\x31\xc5\x4f\x62\x91\xe7\x30\x9d\x4f\x1b\x7b\x79\xbc\x4b\x4f\xd0\x33\x0f\xa1\x29\x8a\xb3\xe2\x7e\x6c\x73\xe1\x4c\xf1\x27\xd1\xf0\x45\xa0\xa6\x62\xa9\xfa\x15\x16\xfd\x55\x3d\xe7\xce\x9f\x0b\x6c\x43\x51\xed\xcb\x4d\x5e\xbe\xaf\xf7\x65\xb6\x02\xad\x04\xd9\x90\x2e\xfa\x92\x67\xde\x6c\xe0\x8f\x0f\x9f\x3e\x67\x2b\x50\x76\x18\xa7\xe3\x5f\x30\xd3\x5e\x1c\xd0\x15\x74\xca\x07\x9e\x50\xc0\x2f\x03\xfd\x24\x01\x4f\x69\xbb\x01\x15\x59\xc9\xa6\x5b\xf6\x30\x81\xb7\xec\x0f\x71\x12\xe8\xd5\x90\x46\xc0\x94\x62\x89\xb2\xcc\x5d\xe4\x36\xa5\x5e\xb6\xe6\x4b\x2d\x95\x21\x1b\x45\x22\x34\xf0\x57\xb5\x86\x7a\x0d\x9b\xcd\xfb\xf4\xf7\x75\x86\x18\x42\x1b\x8d\x9b\xc3\x1a\x6e\x7f\x5f\x33\x37\xf2\x30\xf2\xd4\x61\x4c\x9e\xc2\xcf\x95\x4e\xb6\x0c\xe6\xbe\x3a\x42\x1e\x3d\x25\x28\xbe\xd5\xd9\x84\x5f\x8a\xcb\xde\x68\x6e\xc6\x68\x6c\x13\x67\x0f\xbd\xcd\x8c\xbd\xd5\xdf\x9c\x39\x9c\x46\xaf\x9b\x74\xe0\x4d\x51\x48\x64\xcc\xa5\xd1\x22\x37\xba\x30\x57\x4b\x5c\x4c\x17\xaf\x48\xd4\xc5\x75\x78\xb1\x81\x38\xe7\x2b\xbf\x0e\x23\x7a\x12\xdf\xc2\x68\x1a\xd8\xca\x4d\xbd\x6d\x77\x87\xba\x46\x81\xdb\xed\x6f\x9b\x43\xb9\xdf\x61\x75\x28\x65\x5b\x97\xd5\x1e\xb3\x14\x32\xf2\x7e\x53\xc5\x30\xeb\xea\xd9\xe3\xd0\xa7\x7b\x71\x21\x75\xee\x39\x44\x01\x71\xa3\x17\x14\x6b\x6e\x31\xd0\xab\x6a\x43\x9d\xa3\xc1\x1f\xce\xe2\x25\xa4\x79\x0e\xec\x3c\xe5\x49\xb9\xd2\xd0\xce\xb5\x27\x11\xdb\x9c\xd2\x2b\x52\x84\xbb\x5c\x9d\xaa\xbc\xcc\x60\x4a\x7a\x1a\x90\xfb\xe6\x26\xec\x27\x4b\x9c\x0f\x6d\x06\xb7\x3a\x66\xb3\xb2\xea\xc1\xa6\xc2\x09\xbd\xe8\xd5\x73\x3c\x47\xd4\x81\x60\x05\xaa\x83\x10\x45\x8e\x7b\xb2\xe9\x6c\x6e\x45\x83\x0a\x80\x10\x3f\xd8\x01\x5a\x98\x3d\x1f\xdf\x8f\x87\x87\x24\x7a\x2e\x75\x3d\x32\x32\x6d\xa4\xf0\x92\xac\x8b\xf2\xd3\xff\x5b\x94\x4e\x69\x4a\xaf\x6d\xb8\x4d\xd3\xcf\x04\x47\xa1\x54\x53\xa9\x4b\x49\x53\xea\xe5\x44\x25\x6d\x0f\x87\xb2\xaa\x65\xd7\x76\xe5\xae\xdc\xee\xab\xea\x50\x8a\xfd\xae\x92\x62\x57\xd5\xe5\x23\x51\x8b\xd3\xa6\xac\x37\xa2\xee\x36\x55\x27\x50\x76\xb4\x25\xb1\xc3\x76\x5f\x0a\x92\xb4\xd9\xe2\x76\x9f\x21\xcf\x0a\x9a\xee\x20\x5d\xd9\x23\x58\xe2\xf4\xbe\x2f\xb6\x0c\xe0\x9b\xb2\xb2\x81\x8f\xc7\xe3\xcc\x4c\x5c\xc7\x8e\x2c\x8d\x1e\xf5\xdd\xe7\x7f\x1f\x8f\xc7\x35\x7c\x8e\x7f\x79\x9e\xff\x3f\xde\xb1\x59\xc0\x4f\x71\xae\x03\x71\x73\x57\xd7\x28\x23\xd3\xde\xfd\x89\x4f\xd2\x33\x3b\x64\x00\x06\xad\xea\x28\xf0\x09\x47\xee\x9d\x6f\x00\x5b\x39\x6a\x99\xfd\x13\x00\x00\xff\xff\x45\x08\xf3\xf3\xf1\x08\x00\x00"

func squeezenet_v10YmlBytes() ([]byte, error) {
	return bindataRead(
		_squeezenet_v10Yml,
		"SqueezeNet_v1.0.yml",
	)
}

func squeezenet_v10Yml() (*asset, error) {
	bytes, err := squeezenet_v10YmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "SqueezeNet_v1.0.yml", size: 2289, mode: os.FileMode(420), modTime: time.Unix(1506056366, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _squeezenet_v11Yml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x55\x4d\x6f\xe3\x36\x13\xbe\xeb\x57\x0c\xe0\xcb\xfb\x02\x8e\x64\x4b\xb2\x63\xeb\x50\xa0\xcd\x69\x2f\x39\x6c\x8f\xc5\xc2\x18\x91\x23\x8b\x8d\x44\xb1\xe4\x30\x71\xfa\xeb\x0b\x92\xb2\xe5\x60\xd3\x46\x07\x81\xe4\x3c\xf3\xf9\x0c\x87\x1a\x47\x6a\xe0\xf7\xbf\x3c\xd1\xdf\xf4\x4c\x0c\x2b\x08\x47\x30\x75\xf0\x3e\x79\x0b\xe3\x24\x69\xc8\x3a\x8b\x23\xbd\x4d\xf6\xa5\xc9\x00\x92\xca\x13\x76\x1d\x95\xb0\x82\x9b\x0c\xba\xc9\x02\xf7\x34\xeb\x00\xbc\x92\x75\x6a\xd2\x0d\x6c\xf2\x43\xbe\xfd\x00\x9d\x45\x20\x26\xcd\x16\x95\xe6\xec\x06\xde\x46\xe8\x15\xa0\x74\x37\xd9\x11\x39\xad\xc1\xd1\x88\x9a\x95\xb8\xc9\x93\x34\x0b\x76\x50\x69\xb2\x0d\xac\xe0\xb6\x71\xe0\x1d\x49\xe0\x09\x0c\xd9\x80\x4c\xa1\x81\xb1\x24\x95\x08\x36\x33\x58\xbe\x15\x8c\x7e\x60\x65\x06\x02\x33\x20\x07\xbc\x03\x81\x1a\x5a\x02\x67\x48\xa8\x4e\x91\xcc\x00\x70\x94\xfb\xba\x89\x9a\x67\xe3\x1b\xb0\xa8\x8c\x9d\xfe\x24\xc1\x85\x40\x3b\x0e\x0f\x22\x96\xa6\x89\xb8\x07\x61\x7c\x84\x8a\xaf\xa1\xe7\x08\x35\x46\xec\xeb\x81\x9a\xaf\xb5\x66\xe4\xac\xf7\x45\x34\xf7\x60\x49\x4e\x58\x65\x38\xd6\xfb\x97\x0c\xee\xf9\x7f\x0d\xf5\xef\xd1\x41\x99\xd7\x17\x18\xc8\x39\x10\xd3\x68\x3c\x27\x0e\xb8\x47\x1d\x30\x9b\x35\xbc\x29\xee\x27\xcf\xe0\x50\x58\xd5\x29\xa1\xf4\x19\x50\x08\x6f\x51\xbc\xe7\x99\xa5\x8e\x2c\x69\x41\x2e\x50\xb2\xec\x22\x1b\x68\x02\x39\x05\xbc\x51\xeb\x14\x53\x58\x12\x8b\x3c\x87\x14\x59\x1b\x4c\xdd\x77\xd2\x03\xf4\xcc\xc6\x35\x45\x71\x56\xdc\xfb\x36\x17\xd3\x58\xa4\xc4\x8a\x88\x71\x05\x5b\xa2\x62\x44\xc7\x64\x0b\x97\xd2\xd1\xc4\x1f\x74\xd1\x5e\xd4\x6b\x3e\xd9\x73\x81\xad\x2b\xb6\xfb\x4d\x99\x6f\x1e\xab\xfd\x26\x5b\xc1\xa0\x04\x69\x17\xdb\x7e\xf1\x3b\x1f\x36\xf0\xdb\xaf\xdf\xbe\x67\x2b\x50\xda\x78\x8e\x09\x2c\x98\x74\x16\xc8\x5a\x41\xa7\xac\xe3\x84\x02\x7e\x37\xf4\xd3\x85\x78\x88\xc7\x0d\xa8\x11\xcf\x94\xa5\x9e\xbb\xe3\xe2\xea\xfd\xce\x4e\x04\x7d\xa0\x2b\x00\x92\x8b\xc5\x8a\xc1\x70\xb1\x98\x6c\xac\x75\x74\xbd\x1c\xcd\x2d\x2e\xd5\x48\x3a\x5c\x19\xd7\xc0\x1f\xdb\x35\x54\x6b\x28\xcb\xc7\xf8\xfb\x31\x43\x46\x42\x1d\x84\xe5\x61\x0d\xd7\xdf\x8f\x6c\xf2\x6c\x3c\xa7\x0c\x83\xf3\x68\x7e\x8e\x34\xc9\x32\x98\xf3\xea\x08\xd9\x5b\x8a\x50\xfc\x2c\xb3\x84\x5f\x82\xcb\x3e\x49\x6e\xc6\x0c\xd8\xc6\x9a\xdd\xe5\x36\x57\xec\xb3\xfc\x66\xcf\xee\xe4\xed\xd0\x44\xc2\x9b\xa2\x90\xc8\x98\xcb\x71\x10\xf9\x38\x14\xe3\x45\x13\x5f\x9b\x25\x96\x2e\xec\xdd\xbb\x76\xc4\x39\x5f\xf8\xa3\x19\xd1\x93\x78\x71\x7e\x6c\xa0\x96\x65\x55\xb7\xbb\x43\x55\xa1\xc0\xba\x3e\x96\x87\xcd\x7e\x87\xdb\xc3\x46\xb6\xd5\x66\xbb\xc7\x2c\x9a\x0c\x75\xbf\xce\x08\x37\x4f\x99\xb3\x45\xd3\x03\x6a\x09\x6f\xa4\xce\x3d\x3b\xb0\xe4\x26\x6f\x05\x85\x98\x5b\x74\xb4\x44\xfb\x9f\xad\x6d\xf1\xed\xd3\xce\x8e\x0e\x4e\x06\xb9\x6f\xae\x23\xed\xa4\x89\x73\xd3\x66\x70\xf5\x39\x8b\xe9\x42\x62\x91\x29\x77\x42\x2b\x7a\xf5\x1a\x38\xc3\xc1\x11\xac\x40\x75\xe0\x88\xd7\x81\x02\x1d\x79\xb8\x06\x08\xca\x01\x42\x58\xf0\x04\xa8\x61\xd6\xbc\x9f\x9c\x77\x23\x34\x68\x2e\x71\xdd\x67\x9f\x0e\xa2\x79\x49\x7a\x62\x0a\xeb\x7f\xb1\xd2\xa9\x81\xe2\x3b\xe3\xae\x9d\xf3\x73\x31\xc3\xf8\x51\x29\xd4\x25\xa4\xe4\x7a\x61\x6f\x7f\xac\xdb\x4e\xca\x4d\x49\x47\x21\xda\xdd\x63\xdb\x89\x1a\x45\x5b\xef\xb6\x5d\xdb\xb5\xa5\xbc\x2b\xd4\xa2\x84\xbb\xc3\x51\x56\x5b\x79\xac\x44\x5d\xcb\x6a\x57\x21\x95\x42\x1e\x4b\xec\x6a\xb9\xc3\xaa\xcb\x90\xd9\xaa\xd6\x73\x9a\x6d\x74\x61\x8b\xa0\x89\xe3\xcb\xb6\xc8\x32\x80\x17\xa5\x65\x03\x4f\xcf\xcf\x73\x65\xc2\x3e\x64\xa4\xc9\x5b\x1c\x6e\x3a\xff\x7b\x7a\x7e\x5e\xc3\xf7\xf0\xcb\xf3\xfc\xff\xe1\x3e\x85\x47\x51\xe9\xf3\x29\xf4\xb0\x23\x6e\xe0\x5b\x68\xd9\xf4\x40\xcf\x67\xb7\xc7\x2d\x8e\x99\x59\x21\x03\x18\x51\xab\x8e\x1c\x9f\xd0\x73\x3f\xd9\x06\xb0\x95\x7e\x90\xd9\x3f\x01\x00\x00\xff\xff\xf0\x52\xe1\x85\xeb\x07\x00\x00"

func squeezenet_v11YmlBytes() ([]byte, error) {
	return bindataRead(
		_squeezenet_v11Yml,
		"SqueezeNet_v1.1.yml",
	)
}

func squeezenet_v11Yml() (*asset, error) {
	bytes, err := squeezenet_v11YmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "SqueezeNet_v1.1.yml", size: 2027, mode: os.FileMode(420), modTime: time.Unix(1506056379, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"BVLC-AlexNet.yml": bvlcAlexnetYml,
	"BVLC-GoogLeNet.yml": bvlcGooglenetYml,
	"BVLC-Reference-CaffeNet.yml": bvlcReferenceCaffenetYml,
	"BVLC-Reference-RCNN-ILSVRC13.yml": bvlcReferenceRcnnIlsvrc13Yml,
	"SqueezeNet_v1.0.yml": squeezenet_v10Yml,
	"SqueezeNet_v1.1.yml": squeezenet_v11Yml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"BVLC-AlexNet.yml": &bintree{bvlcAlexnetYml, map[string]*bintree{}},
	"BVLC-GoogLeNet.yml": &bintree{bvlcGooglenetYml, map[string]*bintree{}},
	"BVLC-Reference-CaffeNet.yml": &bintree{bvlcReferenceCaffenetYml, map[string]*bintree{}},
	"BVLC-Reference-RCNN-ILSVRC13.yml": &bintree{bvlcReferenceRcnnIlsvrc13Yml, map[string]*bintree{}},
	"SqueezeNet_v1.0.yml": &bintree{squeezenet_v10Yml, map[string]*bintree{}},
	"SqueezeNet_v1.1.yml": &bintree{squeezenet_v11Yml, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

