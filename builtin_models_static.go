// Code generated by go-bindata.
// sources:
// builtin_models/BVLC-AlexNet.yml
// builtin_models/BVLC-GoogLeNet.yml
// builtin_models/BVLC-Reference-CaffeNet.yml
// builtin_models/BVLC-Reference-RCNN-ILSVRC13.yml
// builtin_models/SqueezeNet_v1.0.yml
// builtin_models/SqueezeNet_v1.1.yml
// DO NOT EDIT!

package caffe2

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data, name string) ([]byte, error) {
	gz, err := gzip.NewReader(strings.NewReader(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _bvlcAlexnetYml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x56\x4d\x6f\xdc\x36\x13\xbe\xeb\x57\x0c\xb0\x08\xe0\xbc\xef\x4a\x5a\xad\xed\xc4\x55\x81\xa2\xad\xdb\x43\x81\xc2\x87\x7e\x5d\x8a\x60\x31\xa2\x46\x2b\x26\x14\x49\x90\xc3\xb5\x9d\x5f\x5f\x90\x94\x56\xeb\x24\x6d\x7c\x58\x4b\x33\xcf\x7c\x70\x38\xf3\x8c\x34\x4e\xd4\xc2\x8f\x7f\xfd\x7a\x5f\xfe\xa0\xe8\xe9\x81\x18\x36\x10\x85\x60\x06\x78\x36\xc1\xc1\x64\x7a\x52\xc5\xe0\x70\xa2\x47\xe3\x3e\xb4\x05\x40\x36\xba\xc7\x61\xa0\x3d\x6c\xe0\xac\x83\xc1\x38\xe0\x91\x66\x1b\x80\x13\x39\x2f\x8d\x6e\x61\x57\xdd\x55\xcd\x0b\xe8\xac\x02\x61\x34\x3b\x94\x9a\x8b\x33\xb8\xa9\x76\xb0\x39\x03\xa4\x1e\x8c\x9b\x90\xf3\x33\x78\x9a\x50\xb3\x14\x67\x7d\xd6\x16\xd1\x0f\x4a\x4d\xae\x85\x0d\x9c\x5f\x3c\x04\x4f\x3d\xb0\x01\x4b\x2e\x22\x73\x6a\x60\x1d\xf5\x52\x44\x9f\x05\xac\x7f\x1b\x98\x82\x62\x69\x15\x81\x55\xc8\x11\xef\x41\xa0\x86\x8e\xc0\x5b\x12\x72\x90\xd4\x17\x00\x38\xf5\x6f\x6e\xda\x64\x79\xb4\xa1\x05\x87\xd2\x3a\xf3\x9e\x04\xd7\x02\xdd\xa4\x4a\x11\x4b\xd3\x26\x58\x29\x6c\x48\x48\xf1\x55\xe4\x31\x21\xad\x15\x6f\x6e\x14\xb5\x5f\x35\x9a\x81\xb3\xd9\x7f\xa7\x72\x89\xed\xc9\x0b\x27\x2d\xa7\x5a\x7f\x57\x00\xfc\x31\x4a\x3f\xd7\x45\x7a\x40\x70\x64\x95\x14\xb9\xe2\x66\x58\x2f\x14\xb2\x65\x47\x7d\xbc\x88\x28\x5e\x5a\xc6\x86\x6e\xb1\xa8\x0a\x80\x9f\xe4\x30\x90\x23\x2d\xc8\xb7\xa0\x0d\x43\xba\x61\xa9\x8f\xf0\x28\x79\x4c\x96\x8e\x94\x3c\x8e\x1c\x65\x3d\x32\x96\x18\x8e\x13\x69\x4e\x2e\xbe\x2d\x00\xa4\x96\x2c\x51\xc9\x8f\x11\xa1\x8d\x2e\x3f\x92\x33\xd0\x49\xf4\xe4\xe3\x75\xee\xaa\x06\xa4\xf6\x4c\xd8\xc7\x1c\x1b\xb8\x1a\x4c\xd0\x3d\x68\x12\xe4\x3d\xba\xe7\xdc\x8b\x73\xdc\x2d\xa0\x5f\x5d\xe6\x93\xb1\x81\x06\x8e\x78\x22\x18\x14\x32\x28\xe3\xfd\xeb\x2a\x55\x83\xa0\x0b\xba\x57\xd4\xaf\x45\x89\x29\x4b\x26\x97\x4d\xaf\xdf\xec\xb6\xbb\xdd\x0e\xbc\x46\xeb\x47\xc3\x55\x36\x22\xcf\x70\x42\x25\x7b\x9c\x1b\x6b\xee\x39\xd4\x82\xa0\x0f\x2e\x1e\x65\xad\x44\xcc\x68\xf5\x78\x7b\x97\x3c\xa6\xfa\xac\x3e\x00\x85\x08\x0e\xc5\x73\x01\x70\xfb\xb6\xda\xdf\xde\xbd\x02\xd4\x7d\x4a\x16\x9a\xea\xee\xfa\x9b\x9b\xbb\xea\xf2\xfe\x4c\x17\xfb\x3e\x5e\x22\x1b\x5b\x36\x67\xfb\x68\xdd\x64\x5b\x2c\x20\x29\x6f\x57\xe5\xdd\xae\xda\xbf\x02\x93\xef\xf4\x22\xba\x27\xde\x42\xf0\x31\xdd\xf7\xc1\x73\x52\x0b\xd2\x4c\x0e\x84\x33\x36\x56\xeb\xea\xcf\xa4\x8e\x1a\x3c\x91\xc3\x63\x22\x8e\x66\x97\x00\x7e\x0b\x57\x37\xf0\x7f\x68\x66\xab\xd7\xf0\x3f\xd8\xc3\x24\x9d\x33\x6e\x0b\x7e\x34\x41\xf5\x73\xca\x71\xaa\xa0\x93\x0c\xa3\x3c\x8e\xe4\xce\xb9\x55\xaf\x5f\x36\x68\x2c\x5b\xaa\x21\xf5\xd0\x3d\xc3\xcf\x27\xd4\xf0\xfb\x48\x6a\xc4\x89\x1c\x7c\xef\x97\xc7\xc2\xd1\xda\x82\x1b\x58\xdf\x12\x17\xa0\x8d\xd4\x50\xc3\x23\x75\x5e\x32\xc5\x47\x62\x51\x55\x4b\x87\x2f\x47\x5a\x78\xac\x84\x91\xd9\xfa\xb6\xae\x8f\x92\xc7\xd0\x55\xc2\x4c\x75\x24\xcd\x3a\x8d\x57\xcd\x8e\xa8\x9e\xd0\x33\xb9\x3a\xd9\xf8\xba\x3b\x29\x71\x40\x45\x4f\x9a\xf8\xec\xa1\xad\xeb\x1c\xbb\xd2\xd2\xfa\x4a\x88\xfc\x5a\xdf\xdc\xed\x6f\x4a\x39\xe1\x91\x34\x71\x29\x14\x7a\x2f\x87\x79\xa0\xca\xd8\x13\x65\x4f\x64\x4b\x61\xf4\xc9\xa8\x10\xa5\xa8\x4a\x4d\xc1\xa5\x7f\x1c\x09\xd5\x57\xb6\x1f\x8a\x0d\x28\x29\x48\x7b\x7a\x31\xb8\xc5\x2c\x6c\x21\x68\x47\x9e\x9d\x14\x4c\x7d\xb1\x01\xa9\x6d\xe0\x54\x92\x15\x9b\x65\x91\x7e\x36\x30\x48\xe7\x39\xa3\x80\x9f\x2d\x7d\x46\xf0\x65\x12\xb7\x90\x72\x2f\x32\x87\x5e\xf0\xcb\x92\xc5\x85\x9f\x04\x7a\x41\x41\x69\xb6\x52\x88\xd5\x8b\xc5\xb8\x28\x98\x5c\xba\xbd\x14\x7a\x15\xcd\x94\xdd\xcb\x89\x74\x5c\x01\xbe\x85\xbf\x9b\x2d\x5c\x6f\x61\xbf\x7f\x9b\x7e\xde\xcd\x90\x89\x50\x47\xe5\xfe\x7a\x0b\x4d\xf3\x76\x0b\xcd\xee\xe6\x5d\x61\x02\xdb\xc0\xf9\x84\x31\x78\x72\x3f\x67\x9a\x75\x71\x44\xd2\xb9\x06\x42\x0e\x8e\x12\x14\xbf\x74\xb2\x8c\x5f\x93\x2b\xbe\x70\xb8\x19\xa3\xb0\x4b\x35\xbb\x38\xdb\x5c\xb1\x2f\x9d\x6f\x8e\xec\x0f\xc1\xa9\x76\x69\x9e\x48\x95\x55\x3f\x29\x51\x4d\xaa\x9e\x62\x6b\x2d\xed\xb6\x34\x4f\xed\x9f\xb5\x27\xae\xf8\x89\x8b\xa4\x8a\xf5\x5b\x76\xd7\x32\x44\x47\x87\x76\x4c\x64\xf0\x48\x91\x85\x3d\x38\xf2\x26\x38\x41\x31\x76\x87\x9e\xd6\xa8\x9f\x34\xbd\x43\x59\xbe\x5c\x30\x73\x02\x0e\x1f\x97\x09\x48\x33\xb1\xff\x74\x02\x52\xd0\x83\x45\x1e\xdb\x65\xfd\x1e\x34\x71\x65\xbb\x02\x96\x3c\x66\x75\x64\xea\x55\x27\xfd\x01\x9d\x18\xe5\x29\xde\x07\x2a\x4f\xb0\x01\x39\x64\x72\xe2\x91\x32\x6b\x2d\x49\xe7\x0d\x16\x1f\xd8\x00\x6a\x98\x2d\x2f\xb7\xfc\xc5\xba\x8f\x96\x6b\x5e\x97\x15\xc9\x82\xe4\xbe\x27\x6d\x98\xe2\xf3\xbf\x78\x19\xa4\xa2\xf4\x4d\xe4\x97\xae\xf8\xbc\xc0\x71\x88\xe7\xa5\xb9\xa4\x84\xcc\x4e\x76\x81\x33\x43\xd1\x13\x3b\x84\x79\x98\x61\xd5\x15\x00\x1f\xa4\xee\x5b\xb8\x7f\x78\x98\x33\x8e\xef\x31\x52\x26\x80\xb3\xcd\xd5\xfd\xc3\xc3\x16\x7e\x8b\x3f\x55\x95\x78\x73\x59\x36\x87\xd8\x37\x9e\xb8\x85\x5f\x62\x9b\xe4\x8f\xbc\x59\x76\xfe\x40\xba\xdc\x97\x05\xc0\x84\x5a\x0e\xe4\xf9\x80\x81\x47\xe3\x5a\xc0\xae\x0f\xaa\x2f\xfe\x09\x00\x00\xff\xff\x8d\xb5\xa3\xba\x31\x0a\x00\x00"

func bvlcAlexnetYmlBytes() ([]byte, error) {
	return bindataRead(
		_bvlcAlexnetYml,
		"BVLC-AlexNet.yml",
	)
}

func bvlcAlexnetYml() (*asset, error) {
	bytes, err := bvlcAlexnetYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "BVLC-AlexNet.yml", size: 2609, mode: os.FileMode(420), modTime: time.Unix(1502686972, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _bvlcGooglenetYml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x56\x4d\x8f\xdb\x38\x0f\xbe\xfb\x57\x10\x13\x14\x98\x79\xdf\xc4\x8e\x33\xe9\x34\x75\x81\x05\xb6\x53\xec\x62\xb1\xc5\x1c\xf6\xf3\xb0\x28\x02\x5a\xa6\x6d\x75\x64\x49\x2b\xd1\xc9\xa4\xbf\x7e\x21\xd9\xce\xc7\x74\x8a\xe6\x10\x58\xe2\x43\xf2\x21\x45\x91\xd2\xd8\x51\x01\xef\xff\xfa\x78\xbf\xf8\xd9\x98\xe6\x23\x3d\x10\xc3\x0c\xc2\x36\x98\x1a\x0e\xa6\x77\xd0\x99\x8a\x54\x52\x3b\xec\x68\x6f\xdc\x63\x91\x00\x0c\x6a\xf7\x58\xd7\xb4\x82\x19\x1c\x65\x50\x1b\x07\xdc\xd2\xa8\x03\xb0\x23\xe7\xa5\xd1\x05\x2c\xd3\x4d\x9a\x5f\x40\x47\x11\x08\xa3\xd9\xa1\xd4\x9c\x1c\xc1\x79\xba\x84\xd9\x11\x20\x75\x6d\x5c\x87\x3c\x7c\x83\xa7\x0e\x35\x4b\x71\x94\x0f\xd2\x24\xd8\x41\xa9\xc9\x15\x30\x83\xe3\xc2\x43\xef\xa9\x02\x36\x60\xc9\x05\xe4\x40\x0d\xac\xa3\x4a\x8a\x60\x33\x81\xd3\x6f\x06\x5d\xaf\x58\x5a\x45\x60\x15\x72\xc0\x7b\x10\xa8\xa1\x24\xf0\x96\x84\xac\x25\x55\x09\x00\x76\xd5\xdd\xba\x88\x9a\x8d\xed\x0b\x70\x28\xad\x33\x9f\x49\x70\x26\xd0\x75\x6a\x21\x62\x6a\x8a\x88\x5b\x08\xdb\x47\xa8\xf8\x3e\xb4\x89\x50\x6b\xc5\xdd\x5a\x51\xf1\x7d\xad\x11\x39\xea\x7d\x87\xcd\x39\xb8\x22\x2f\x9c\xb4\x1c\xf3\xfd\xc3\xf3\x25\xc0\x1f\xad\xf4\x63\xaa\xa4\x07\x04\x47\x56\x49\x31\x1c\x82\xa9\x4f\x67\x0c\x83\x66\x49\x55\x38\x9b\xb0\x1d\xea\x48\xc5\x3a\xb2\x7d\x39\xe9\xa4\xf0\x37\xc1\xde\xf4\xaa\x02\x25\x1f\x29\x9c\x07\xb7\xa8\x1f\xe1\xbe\x75\xd2\xb3\x44\x0d\xbf\x7f\xa1\x86\xaa\x43\x2c\x21\x54\x0a\x02\x81\x96\x94\x9d\xec\x3e\x63\x70\x72\x13\x79\xa4\x09\xc0\x07\x59\xd7\xe4\x48\x0b\xf2\xb1\x48\x0d\x43\xac\x2c\xa9\x1b\xd8\x4b\x6e\x47\x33\x4a\x36\x2d\x87\xbd\x0a\x19\x17\xd8\x37\x1d\x69\x8e\x76\xdf\x7d\x53\xcb\x0b\x54\x04\x81\x59\x28\x03\x5e\xb8\x80\x7f\xd9\x40\xef\xc9\xc3\xd5\x13\xee\x24\xb9\xab\x10\xa8\xd4\x92\x25\x2a\xf9\x85\xa2\xa9\x3d\x05\xff\x1e\xa4\xf6\x4c\x58\x85\x58\xae\x1a\xec\xbd\x97\xa8\xaf\x82\x81\x7f\x7b\x29\x1e\xb7\xde\xa8\x1d\xb9\xd4\x3a\xc3\x86\x9f\x78\x30\x8b\x50\x8d\x31\x32\x28\x42\x17\x49\x3a\x64\x82\x8a\x04\x1e\xc0\x1a\x25\xc5\x21\xa6\x36\xfa\x32\x4e\x36\x52\xa3\x82\x67\xd6\xe6\x01\xc2\x21\xcd\x66\x1f\xac\x76\xbd\x68\xa1\x46\xcf\xe4\x4e\xc1\x5f\xdf\x2d\x81\xac\x11\xad\x87\x9d\x87\xd5\xeb\x69\x75\xf3\x2e\xd6\x07\x41\xd9\xeb\x4a\x51\x75\x2a\x93\xe0\x52\x32\xb9\xe1\x90\x56\xf3\xf5\x72\x39\x5f\x2e\x97\xe0\x35\x5a\xdf\x1a\x3e\x33\x79\x03\xbd\x0f\x4e\x5e\x0c\x76\xaa\xbf\x4b\x07\xa6\x0c\x57\x3a\xd0\x65\x63\x17\x39\xa0\x10\xbd\x43\x71\x80\xbb\x4d\xfa\xe6\x15\x5c\xdf\xe6\xe9\xed\x2b\x20\xe7\x8c\xbb\x01\xd4\xd5\x08\x7c\x7d\x02\x6e\x36\xe9\xdb\x57\x70\x9d\xe7\x69\x7e\x04\x9a\x21\x53\x3b\x54\xb2\x1a\x78\x7b\xe2\xf9\xc8\xee\x73\xef\x39\x8a\x05\xe9\x90\x1b\xe1\x8c\x0d\x95\x76\xfd\x67\x14\x07\x09\xee\xc8\x61\x13\xbb\x65\xbe\x8c\x00\x3f\x87\xeb\x35\xfc\x1f\xf2\x51\xeb\x06\xfe\x07\x2b\xe8\x64\xf0\x37\x07\xdf\xc6\x5b\x30\x04\x03\x08\xa5\x64\x68\x65\xd3\x92\x3b\xf2\x4c\x6f\x42\x02\x64\x27\x75\xe3\xe3\x75\x28\x77\x4a\x6c\x9b\x58\xf0\x9a\x78\xa8\x4a\xd1\x7f\x78\x78\x18\x69\x96\xc8\xa2\xdd\x7a\xf9\x85\x8a\x7c\xb5\x09\x21\x21\xfc\xba\x5e\x8a\x70\x0b\x7e\x1c\xf9\xfd\x64\xdc\x1e\x5d\x05\x16\xbd\x2f\xe0\xf5\xdd\x2a\xdd\xac\x73\xe8\x7c\x7a\x86\x79\x8f\xe2\xf1\x0c\x94\xe7\xab\xdb\x74\xb3\x7e\x06\x1a\x0d\x2d\x26\x70\x01\xf9\xdd\x66\x93\x6e\x46\xd8\x65\xe3\x10\x46\xef\xc8\x31\x55\x50\x3b\xd3\xc5\x84\xc5\xa9\x31\x5d\x5a\x47\xc7\x1b\x0b\x33\x38\xad\x62\xc3\x46\x1b\xfa\x77\x06\x7b\x2a\xbd\x64\x0a\x9f\xc4\x22\x4d\xa7\x9e\x33\x1d\xc1\x34\x6c\x16\xd0\x32\x5b\x5f\x64\x19\xba\x27\xb9\x4b\x8d\x6b\x32\x5b\xd5\x59\xbe\x5e\xbe\x4d\xd7\x9b\xf5\x2a\xb5\x55\x7d\x81\x6b\x24\xb7\x7d\x99\x0a\xd3\x65\x61\x06\x66\xb1\x51\x66\xec\x88\xb2\x2e\xde\x86\x2c\xda\xf6\xd9\xe5\x09\x24\x33\x50\x52\x90\xf6\x74\xd1\x0b\x93\x71\xb3\x80\x5e\x3b\xf2\xec\xa4\x60\xaa\x92\x19\x48\x6d\x7b\xf6\x43\xd3\x9b\xb0\xc3\x5e\x38\xa1\x19\xd4\xd2\x79\x1e\x50\xc0\x07\x4b\x5f\x8d\xd1\x45\xdc\x2e\x40\x76\xd8\x50\x32\x4c\xaa\xb3\x96\x3d\xb1\x38\xb3\x13\x41\x17\x5d\x3d\x5e\xce\xe8\xe2\x64\xc5\x62\x18\xc7\x4c\x2e\xa6\x3f\xba\x3e\x6d\x8d\x83\xb1\x92\x1d\xe9\x30\x68\x7d\x01\xff\xe4\x73\xb8\x9d\xc3\x6a\xf5\x26\xfe\x7d\x1a\x21\x1d\xa1\x0e\xc2\xd5\xed\x1c\xf2\xfc\xcd\x1c\xf2\xe5\xfa\x53\x62\x7a\xb6\x3d\x0f\x11\x06\xe7\xd1\xfc\xc8\x74\x90\x25\x30\xc6\x55\x13\x72\xef\x28\x42\xf1\xa5\xc8\x06\xfc\x89\x5c\xf2\x42\x70\x23\x46\x61\x19\x73\x76\x16\xdb\x98\xb1\x97\xe2\x1b\x3d\xfb\x6d\xef\x54\x11\xeb\xa2\xc8\xb2\xd0\xd7\xd3\xaa\x53\x22\xed\x54\xd6\x3d\x69\xe2\xa9\x0e\x62\xea\xc2\xda\x1f\xb4\x27\x4e\x43\xb3\x8a\xa2\x90\xbf\xe9\x85\x30\xd5\x7f\xe3\xd0\xb6\xb1\x13\x4d\x3d\xdf\x91\x37\xbd\x13\x14\x7c\x97\xe8\xe9\xe4\xf5\x59\x35\x3a\x94\x8b\xcb\x19\x3e\x12\x70\xb8\x9f\x4a\x73\x98\xea\xcf\x4b\x13\x06\xb7\x5b\x8b\xdc\x16\xd3\x33\x67\xab\x89\x53\x5b\x26\x30\x31\x19\xc5\x61\x34\x9d\x64\xd2\x6f\xd1\x89\x56\xee\xc2\x89\xa0\xf2\x04\x33\x90\xf5\xd0\x0f\xb9\xa5\xa1\x51\x4e\xb4\x87\x67\x41\xf8\x60\x03\xa8\x61\xd4\x3c\x7f\x4d\x9d\x3d\xab\x82\xe6\x89\xd7\x79\x4e\x86\x8d\x68\xbe\x22\x6d\x38\x0e\xc9\x6f\x58\xa9\xa5\xa2\xf8\xf6\xf4\x53\x5d\x7c\x9d\xe2\xd0\x1c\xc7\x17\xc3\x44\x09\x99\x9d\x2c\x7b\x1e\x9a\x0c\x3d\xb1\x43\xd0\xc4\xf1\x15\x7a\x92\x25\x00\x8f\x52\x57\x05\xdc\x3f\x3c\x8c\x8c\xc3\x3a\x78\xd2\xd4\x3b\x54\x47\x9d\xeb\xfb\x87\x87\x39\xfc\x16\xfe\xd2\x34\x36\xeb\x69\x66\x6e\x43\xe5\x78\xe2\x02\x7e\x09\x85\x32\x3c\xa6\xc7\xbd\xe3\x43\x34\x5e\xee\x51\x21\x01\xe8\x50\xcb\x9a\x3c\x6f\xb1\xe7\xd6\xb8\x02\xb0\xac\x7a\x55\x25\xff\x05\x00\x00\xff\xff\xa7\x1a\xbf\x8a\x9b\x0b\x00\x00"

func bvlcGooglenetYmlBytes() ([]byte, error) {
	return bindataRead(
		_bvlcGooglenetYml,
		"BVLC-GoogLeNet.yml",
	)
}

func bvlcGooglenetYml() (*asset, error) {
	bytes, err := bvlcGooglenetYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "BVLC-GoogLeNet.yml", size: 2971, mode: os.FileMode(420), modTime: time.Unix(1502686984, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _bvlcReferenceCaffenetYml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x56\x4b\x8f\xdb\x36\x10\xbe\xeb\x57\x0c\x60\x14\xd8\xb4\x96\x64\x7b\x37\xc9\x42\x05\x8a\xb6\x9b\x4b\x8a\x62\x0f\x41\xda\x4b\x11\x18\x14\x35\xb2\x98\x50\x24\x41\x0e\xf7\xd1\x5f\x5f\x0c\xa9\x87\x9d\xa4\xc9\x1e\xbc\x22\xe7\x9b\xf7\x8b\x46\x8c\xd8\xc0\xef\x7f\xff\x79\x57\xbe\xc3\x1e\x3d\x1a\x89\xe5\x9d\xe8\x7b\xbc\x47\x82\x0d\x30\x1d\x6c\x0f\xcf\x36\x7a\x18\x6d\x87\xba\xe8\xbd\x18\xf1\xd1\xfa\x4f\x4d\x01\x90\xf9\x13\xc3\x01\x36\xb0\xd0\xa0\xb7\x1e\x68\xc0\x89\x07\xe0\x01\x7d\x50\xd6\x34\xb0\xab\x6e\xab\xfd\x05\x74\x22\x81\xb4\x86\xbc\x50\x86\x8a\x05\xbc\xaf\x76\xb0\x59\x00\xca\xf4\xd6\x8f\x82\xf2\x37\x04\x1c\x85\x21\x25\x17\x7a\xa6\x16\x2c\x47\x28\x83\xbe\x81\x0d\x2c\x87\x00\x31\x60\x07\x64\xc1\xa1\x67\x64\x36\x0d\x9c\xc7\x4e\x49\x96\x59\xc0\xfa\xb7\x81\x31\x6a\x52\x4e\x23\x38\x2d\x88\xf1\x01\xa4\x30\xd0\x22\x04\x87\x52\xf5\x0a\xbb\x02\x40\x8c\xdd\xab\x9b\x26\x71\x9e\x5c\x6c\xc0\x0b\xe5\xbc\xfd\x88\x92\x6a\x29\xfc\xa8\x4b\xc9\xa1\x69\x12\xac\x94\x2e\x26\xa4\xfc\x2e\xf2\x94\x90\xce\xc9\x57\x37\x1a\x9b\xef\x32\x4d\xc0\x89\xed\xdb\xa6\x9c\x63\x3b\x0c\xd2\x2b\x47\x29\xd6\xbf\x14\x00\xef\x07\x15\xa6\xb8\xa8\x90\xf2\xe7\x31\x44\x4d\x5c\x02\xbd\xd5\xda\x3e\x2a\x73\x4a\xf7\x29\xe5\xf0\x76\x14\xa7\x54\x29\x99\x27\xa5\x8f\x11\xca\x04\xf2\x31\x45\x35\x54\xf0\x96\x58\x9a\x00\x8f\x4e\x2b\x99\xf3\x67\xfb\xb5\x3c\x20\xdb\xd1\x62\xc7\x69\xe5\xeb\xdf\x34\x3e\xb1\x58\x17\xdb\x85\xe3\x51\xd1\x00\xc1\x8e\x08\x9d\xea\xa7\x52\x0d\x55\x01\xf0\x66\x3d\xa6\x92\xb4\xb4\x1a\x92\x98\xb2\x1f\x5a\x9d\x06\xe2\xbb\x4e\x90\x28\x45\x3c\x8d\x68\x28\x89\xfe\xb9\x80\x84\xb1\xbe\x43\xcf\x96\x39\x6b\x35\x23\x85\xe9\xc0\x70\x51\x69\xf5\x6f\x36\x42\x8b\x67\x2e\x25\x15\x20\x3c\x2a\x92\x03\x76\x70\xa5\x0c\xcc\x1d\xb3\x5d\x58\x55\x80\xce\x1a\x84\x16\x7b\xeb\xf1\x52\xca\x8b\xea\x8b\x50\x07\x23\x5c\x18\x6c\x0a\xb4\x22\xf4\x59\xdb\xf5\x7e\xb7\xdd\xed\x76\x15\xbc\x1f\x58\x52\x20\x78\x10\x5a\x75\x99\x38\x95\xb1\x30\x12\xa1\x8b\x3e\x25\x66\x71\x5b\x84\x0b\x31\xd7\x2c\x26\x07\xe3\x4c\x82\x90\x32\x7a\x21\x9f\xe1\xe5\xeb\xea\x66\x7f\xf8\x21\xf9\xab\x6d\x08\xb0\xaf\x6e\x0f\xd7\x87\xdb\xcf\xec\xb4\x2d\xb7\x12\x67\x92\xac\x2b\xf7\x97\xfc\x99\x3b\x93\x5e\xae\xa4\xdb\x1d\x93\x6c\x4e\xeb\x99\xee\xc0\xc1\x8a\x81\x8d\xfd\x18\x03\x25\xb2\x44\x43\xe8\x41\x7a\xeb\x58\xf3\xd5\x5f\x61\xae\x36\xf1\x80\x5e\x9c\xd2\x24\xda\xef\x12\x20\x6c\xe1\xea\x06\x7e\x82\xfd\xc4\xf5\x02\x7e\x84\x03\x8c\xca\x7b\xeb\xb7\x10\x06\x1b\x75\x37\x19\x0c\x02\x5a\x45\x30\xa8\xd3\x80\x7e\xb5\x2c\x90\xd2\xba\x7a\x71\xe9\x22\x07\x2e\x45\x11\x3b\x68\x9f\xe1\x0f\xec\x7b\x78\x63\x8d\x18\x22\xc2\xaf\x1f\xb1\xef\xbb\x7c\x28\x3c\x2e\x35\x07\x1b\x58\x4f\x69\xc0\x08\xc7\x45\x52\xc3\x23\xb6\x41\x11\xf2\x27\x92\xac\xaa\xb9\xd0\x67\xb7\xe6\xe1\x58\xc2\x40\xe4\x42\x53\xd7\x27\x45\x43\x6c\x2b\x69\xc7\x9a\x87\x72\x9d\x7a\xb6\x26\x8f\x58\x8f\x22\x10\xfa\x3a\xf1\x84\xba\x7d\xd0\xf2\xb8\xa8\x3d\x26\x9c\x41\x5a\x84\x35\x75\x9d\xcd\xa8\x8c\x72\xa1\x92\x32\x1f\xeb\x9b\xdb\xc3\x4d\xa9\xb8\x6d\x0d\x52\x29\xb5\x08\x41\xf5\x53\x8b\x95\x5c\x20\x65\x87\xe8\x4a\x69\xcd\x83\xd5\x91\x6f\x85\x2e\x0d\x46\x9f\xfe\x11\x0f\xec\x50\xb9\xae\x2f\x36\xa0\x95\x44\x13\xf0\xa2\x95\x8b\xe9\xb2\x81\x68\x3c\x06\xf2\x4a\x12\x76\xc5\x06\x94\x71\x91\x52\x74\x56\x6c\xbe\xe3\x9e\xdd\x40\xaf\x7c\xa0\x8c\x02\x7a\x76\xf8\xc5\x02\x29\xd3\x75\x03\xc9\xf6\x22\xcf\xe8\xb3\xf9\x35\x5b\x71\x26\x27\x81\x2e\x46\x1c\x03\xb2\x8a\x55\x8a\x13\xbc\x88\x08\x7d\x4a\x64\x52\xbd\x5e\x4d\x2b\xa1\x53\x23\x1a\x5e\x31\xa1\x81\x7f\xf6\x5b\xb8\xde\xc2\xe1\xf0\x3a\xfd\x7c\x98\x20\x23\x0a\xc3\xc4\xc3\xf5\x16\xf6\xfb\xd7\x5b\xd8\xef\x6e\x3e\x14\x36\x92\x8b\x94\x3d\x64\xe5\x49\xfc\x64\x69\xa6\xf1\xe8\x49\x7e\xf5\x28\x28\x7a\x4c\x50\xf1\x35\xcf\x32\x7e\x35\xae\xf8\x8a\x73\x13\x46\x8b\x36\xc5\xec\xcc\xb7\x29\x62\x5f\xf3\x6f\xd2\x1c\x8e\xd1\xeb\x66\x2e\x1e\x1e\x92\x55\x37\x6a\x59\x8d\xba\x1e\x9f\x0c\xd2\x5c\x79\x73\xf1\xd4\xe1\xd9\x04\xa4\x8a\x9e\xa8\x48\x24\x8e\xdf\xbc\x1b\xe7\x7e\x3a\x79\xe1\x86\x34\x19\x1e\x91\xe7\x6f\xe0\x85\x62\xa3\x97\xc8\xba\x5b\x11\x70\xd5\xfa\x59\xfd\x7b\xa1\xca\xcb\x05\x36\x19\xe0\xc5\xe3\xdc\x0c\xa9\xec\x0f\xdf\x68\x86\xa4\xff\xe8\x04\x0d\xcd\xbc\xe9\x8f\x06\xa9\x72\x6d\x01\xb3\x49\x13\x59\x19\xb5\xd0\x0a\x00\x15\x8e\xc2\xcb\x41\x3d\x70\x6e\x84\x0e\x08\x1b\x50\x7d\x9e\x5b\x34\x60\x1e\x68\xb3\x03\x79\xbf\xf1\x07\x59\x10\x06\x26\xce\xf3\x17\xc5\xd9\xd3\x82\x39\x57\xc3\xce\xa3\x93\x2f\x92\xf8\x0e\x8d\x25\xe4\xef\xff\x91\xd2\x2b\x8d\xe9\xfd\x15\xe6\x0a\xf9\x32\xd8\xdc\xd0\xd3\x4a\x9d\x4d\x12\x44\x5e\xb5\x91\xf2\xe0\xc2\x27\xf2\x02\xa6\xc6\x86\x95\x56\x00\x7c\x52\xa6\x6b\xe0\xee\xfe\x7e\xb2\x98\xcf\xac\x29\x0f\x83\x85\xe7\xea\xee\xfe\x7e\x0b\xef\xf8\xa7\xaa\xd2\x38\x9d\xb7\xd0\x91\x6b\x28\x20\x35\xeb\x33\x61\x03\xd3\xdd\xf2\x18\x4b\x6d\x3e\x31\x14\x00\xa3\x30\xaa\xc7\x40\x47\x11\x69\xb0\xbe\x01\xd1\x76\x51\x77\xc5\x7f\x01\x00\x00\xff\xff\xc4\x7a\xea\x75\xa8\x0a\x00\x00"

func bvlcReferenceCaffenetYmlBytes() ([]byte, error) {
	return bindataRead(
		_bvlcReferenceCaffenetYml,
		"BVLC-Reference-CaffeNet.yml",
	)
}

func bvlcReferenceCaffenetYml() (*asset, error) {
	bytes, err := bvlcReferenceCaffenetYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "BVLC-Reference-CaffeNet.yml", size: 2728, mode: os.FileMode(420), modTime: time.Unix(1502686987, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _bvlcReferenceRcnnIlsvrc13Yml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x56\x4d\x8f\xdb\x36\x10\xbd\xeb\x57\x0c\xe0\x4b\x0b\xac\xa4\xd8\x9b\xa6\x85\x0e\x45\x91\x05\x5a\x04\x48\x7d\xd8\x14\xb9\x14\x85\x31\xa2\x46\x16\xb3\x12\x49\x0c\x47\xf6\xfa\xdf\x17\x43\x7d\xd8\xdb\x6c\x1a\x1f\x0c\x8a\xf3\x66\xf8\xf8\xe6\x43\x72\x38\x50\x05\xef\x3f\x7f\x7c\xc8\x1f\xa9\x25\x26\x67\x28\x7f\x7c\xd8\xef\xf3\x0f\x1f\x3f\x7d\x7e\x7c\xd8\xde\xc3\x06\x14\x04\xbe\x85\x8b\x1f\x19\x06\xdf\x50\x9f\xb5\x8c\x03\x9d\x3d\x3f\x55\x19\xc0\x14\xe4\x01\xdb\x96\x76\xb0\x81\xd5\x06\xad\x67\x90\x8e\x66\x1f\x80\x13\x71\xb4\xde\x55\xf0\xa6\xf8\xa5\xd8\xbe\x80\xce\x26\x30\xde\x09\xa3\x75\x92\xad\xe0\x6d\xf1\x06\x36\x2b\xc0\xba\xd6\xf3\x80\x32\xad\x21\xd2\x80\x4e\xac\x59\xed\x93\x35\xd3\x38\x68\x1d\x71\x05\x1b\x58\x1f\x22\x8c\x91\x1a\x10\x0f\x81\x58\x91\x13\x35\x08\x4c\x8d\x35\x1a\x33\x83\xeb\x6f\x03\xc3\xd8\x8b\x0d\x3d\x41\xe8\x51\x14\x1f\xc1\xa0\x83\x9a\x20\x06\x32\xb6\xb5\xd4\x64\x00\x38\x34\xef\xde\x56\xc9\xf3\x18\xc6\x0a\x18\x6d\x60\xff\x85\x8c\x94\x06\x79\xe8\x73\xa3\xd2\x54\x09\x96\x9b\x30\x26\xa4\xf9\x2e\xf2\x98\x90\x21\x98\x77\x6f\x7b\xaa\xbe\xeb\x34\x03\x67\xb7\xff\xa7\x72\x8b\x6d\x28\x1a\xb6\x41\x92\xd6\xbf\x66\x00\x7f\x75\x04\x61\x64\x9a\x32\x0a\xd6\x45\x51\x89\x27\xc9\x7d\x9b\x32\xfa\x98\x3f\xec\xf7\xb3\x78\x9a\xe5\xb5\x5a\x1a\x12\x4a\x42\x16\x29\x92\x8d\x33\xe8\x8c\x11\x06\x6c\x08\xea\x0b\x08\xa3\x8b\xa1\xd7\xa0\xee\x78\x13\xee\xd3\xe7\x3f\xc1\xf4\x18\xa3\x0a\xcb\x11\xac\x13\x0f\x08\xad\xc9\xd9\x38\xb7\x9a\xcc\xc4\xa4\xc7\x0b\xf1\x1d\x04\xf6\x27\xdb\x50\x03\x1d\x31\x01\x46\x40\x25\xd9\xe6\xd2\x51\x1e\x3b\xea\xdb\xf9\x1a\x13\x31\xcf\x89\x17\x5f\xd2\xb1\x2b\x59\xa0\x67\x1c\x34\xcf\xe2\x21\x12\x81\x15\xad\x2d\x5c\x2f\xb2\x2f\xde\x17\xf0\xbb\x67\x60\x8a\x84\x6c\x3a\x15\x28\xf8\x48\xf1\x0e\x06\x7c\x22\x2d\xab\x45\x1a\xdf\xb6\xd6\x58\xec\xe7\x4b\x05\x34\x4f\x78\x24\x40\xd7\x80\xf3\x02\xa2\x9a\xcc\xc7\xbd\xa2\x51\x2a\x7e\x6a\x54\xa6\x47\x1f\x23\xfc\x61\x39\x76\xd6\x3c\xc1\x6f\x5c\x1f\xe7\x75\xc6\x4b\xab\x46\xad\xee\xeb\x53\x2a\x6c\x0c\xaa\x5d\x09\x67\xaa\xa3\x15\xd2\x25\x89\x29\x0a\x98\x12\x5d\x2f\x9a\x2f\x4d\x99\x43\x27\x12\x62\x55\x96\x47\x2b\xdd\x58\x17\xc6\x0f\xa5\x4e\x84\x32\xd5\x4a\x29\x4c\x54\x0e\x18\x85\xb8\x4c\x3e\xb1\xac\x4f\xbd\x39\xac\xc7\x1e\x34\x3b\x07\xdb\xc7\x13\x9b\xed\xfd\x8b\x88\xc8\xcf\xf6\x54\x78\x3e\x96\x58\xc7\x72\x7b\xbf\xdd\x16\xbb\x9f\x76\x6f\x57\x4c\x55\x96\xae\x3e\x59\x3a\x13\x17\x5f\xc6\x70\x11\xe2\x84\x9e\x98\xdc\xb2\xa8\x7b\x5f\x2f\x2c\x66\xf5\x62\x79\x2d\x36\x1b\x2e\xae\xce\x36\xd0\x5b\x43\xee\x9a\x8b\xe9\x8e\xf3\x66\x05\xa3\x63\x8a\xc2\xd6\x08\x35\xd9\x06\xac\x0b\xa3\x24\xd1\xae\xd8\x69\x4f\xbb\x6d\x03\xad\xe5\x28\x13\x0a\xe4\x12\xe8\xab\x79\x96\xa7\xed\x0a\xec\x80\x47\xca\xa6\x91\x71\xd3\x4e\x0b\x8b\x9b\x38\x09\xf4\xa2\xe3\x14\x30\x1d\x71\x8d\x12\x50\xe7\xa2\x10\xa7\xfc\xa6\xa3\xaf\x5b\xf3\x84\x6a\xec\x40\x4e\x27\x5e\xac\xe0\xef\xed\x1d\xdc\xdf\xc1\x6e\xf7\x73\xfa\xfb\x27\xf3\xa3\x84\x51\xa6\x5b\xe8\x01\x29\xc4\x52\x9f\xc9\x96\xc1\xcc\xbd\x25\x94\x91\x29\x41\xf1\x35\xf6\x13\xfe\x4a\x20\x7b\xe5\x02\x33\xa6\xc7\x3a\xe9\x72\xc3\x7f\x56\xe5\xb5\x3b\xcc\x27\xc7\xc3\xc8\x7d\xb5\x96\x0c\xe3\xb9\x98\xd2\x3f\x46\x62\x9d\xdc\xe4\x24\xd5\x24\xa3\xcd\x5f\x0e\xb3\xb9\x1c\xe7\xb2\x68\x50\xb0\x9c\xcb\x70\xa7\xb5\x71\x88\x17\x17\x49\x0e\x67\xcf\x4d\x2c\xe4\x59\xb2\xe4\xa0\x9a\x2e\xe3\x7b\x69\xbd\x23\x63\xe8\x52\x8f\x9e\xc9\x1e\x3b\x89\xda\xe9\x7e\x64\x43\xca\xb5\xc6\x48\x2f\x59\xde\xb4\xca\x37\x69\x31\x9e\x17\x6a\xa9\x86\x77\xff\xe9\x9b\x34\xd5\xf2\x9b\xbe\x49\x24\x0e\x01\xa5\xab\x96\x37\xd2\xc1\x91\x14\xa1\xce\x60\xe1\x35\x9b\xad\xb3\x37\x36\x1b\x0f\x3a\x94\xec\x49\xf3\x89\x7d\x24\xd8\x80\x6d\x21\x92\xdc\x69\x7a\x5c\xca\xd1\x72\x09\xb0\x11\x10\x74\xa1\xd3\xd5\xc1\xec\x79\xfb\xe2\xbb\x79\x03\xaa\xe7\x95\xd7\xad\x42\xd3\x46\x0a\xdf\x90\xf3\x42\xba\xfe\x46\x94\xd6\xf6\x94\x3e\x13\xe2\x52\x55\x5f\x0b\x7e\xb6\xd2\xd9\x89\xea\x42\x09\x45\xd8\xd6\xa3\x4c\x73\x8e\x9e\x85\x11\x1c\x49\xfa\x60\xb8\xda\x32\x80\x27\xeb\x9a\x0a\x74\xdc\x4e\x8c\xf5\x59\x4f\x72\x34\x32\xf6\xab\xcf\x0f\x0f\xfb\xfd\x1d\x3c\xea\x5f\x51\x14\x3f\x6a\x0f\xe8\xb8\xb5\xee\x78\xd0\xe2\x89\x24\x15\x7c\xd0\x2e\xdc\x93\x68\x2b\x4f\x7b\xeb\x37\x43\x6a\xff\xd9\x21\x03\x18\xd0\xd9\x96\xa2\x1c\x70\x94\xce\x73\x05\x58\x37\x63\xdf\x64\xff\x06\x00\x00\xff\xff\x2f\xf6\x8f\xac\x54\x09\x00\x00"

func bvlcReferenceRcnnIlsvrc13YmlBytes() ([]byte, error) {
	return bindataRead(
		_bvlcReferenceRcnnIlsvrc13Yml,
		"BVLC-Reference-RCNN-ILSVRC13.yml",
	)
}

func bvlcReferenceRcnnIlsvrc13Yml() (*asset, error) {
	bytes, err := bvlcReferenceRcnnIlsvrc13YmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "BVLC-Reference-RCNN-ILSVRC13.yml", size: 2388, mode: os.FileMode(420), modTime: time.Unix(1502677044, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _squeezenet_v10Yml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x55\x4d\x8f\xdb\x36\x13\xbe\xeb\x57\x0c\x60\x04\x78\x5f\xc0\x96\x6c\x27\xfb\x01\x1d\x0a\xa4\xdb\x4b\x2e\x3e\x24\xc7\x22\x30\xc6\xd4\xc8\x9a\x86\xa4\x18\x72\xb4\xf6\xe6\xd7\x17\x43\xc9\x96\xb7\xd9\x36\x3e\x18\x22\xe7\x99\xaf\x87\x0f\x87\x1e\x1d\xd5\xf0\xe5\xfb\x40\xf4\x83\x76\x24\xb0\x00\xdd\x82\xbe\x85\x97\x7e\x88\xe0\xfa\x86\x6c\xd1\x46\x74\x74\xea\xe3\xb7\xba\x00\x18\x5d\x9e\xb0\x6d\x69\x0b\x0b\xb8\xda\xa0\xed\x23\x48\x47\x93\x0f\xc0\x33\xc5\xc4\xbd\xaf\x61\x5d\x3e\x96\x9b\x57\xd0\xc9\x04\xa6\xf7\x12\x91\xbd\x14\x57\xf0\xa6\x5c\xc3\xe2\x0a\x60\xdf\xf6\xd1\xa1\x8c\xdf\x90\xc8\xa1\x17\x36\x57\xfb\x68\x2d\x34\x0e\xb2\xa7\x58\xc3\x02\xae\x8b\x04\x43\xa2\x06\xa4\x87\x40\x51\x91\x63\x69\x10\x22\x35\x6c\x34\x66\x01\xf3\x6f\x01\x6e\xb0\xc2\xc1\x12\x04\x8b\xa2\xf8\x04\x06\x3d\x1c\x08\x52\x20\xc3\x2d\x53\x53\x00\xa0\x6b\xee\x3f\xd4\xd9\xf3\x18\x86\x1a\x22\x72\x88\xfd\x5f\x64\xa4\x32\x18\x9d\x5d\x19\xa5\xa6\xce\xb0\x95\x09\x43\x46\x9a\x5f\x22\x8f\x19\x19\x82\xb9\xff\x60\xa9\xfe\xa5\xd3\x04\x9c\xdc\xfe\xbb\x94\x5b\x6c\x43\xc9\x44\x0e\x92\xb9\xfe\xad\x80\xcb\xd9\x7b\x12\x40\xd3\x31\x3d\x53\x82\xc4\x8e\x2d\x46\x88\x94\x06\x2b\x49\x19\xfc\x68\xe9\xbc\x23\x59\x02\x0a\xdc\xad\xcf\xd0\xd2\x89\x22\x04\xd4\x23\x15\xa5\x1a\x7d\x03\x9b\xea\x6e\xbd\x96\x2e\xab\x20\xf1\x0f\x2a\x35\xbe\x43\x6b\x47\xe2\x13\x60\x54\x79\x44\x82\x96\x30\xf1\xc1\x92\x86\x6e\x28\xd8\xfe\x05\x7a\x0f\x1d\xc6\xe6\xa4\x98\x13\x4b\x07\x96\x1d\x0b\x35\xe0\xc8\xf5\xf1\x65\x09\x91\xbe\x0f\x1c\x09\x2c\xa5\x54\x00\x98\xde\xb9\xc1\xb3\x19\xc5\xd1\x0c\x91\xfd\x11\x1a\x4e\x12\xf9\x30\xa8\x5f\x56\x16\xfb\xe3\x32\xd7\xa6\x61\x35\x29\xc5\x9c\xf3\x8a\xd3\x95\xb1\x4c\x5e\x52\x39\xd3\xb1\xbb\xa5\xe3\xee\xa1\xbc\x7b\x97\x83\x3c\xae\xcb\xf7\xef\x40\xfa\xb0\xda\xe4\xb5\x7e\xdd\x01\x9a\x21\xa2\x91\xdc\xc2\x27\x87\x47\xf5\x2e\x8b\x48\x2d\x45\xf2\x86\x92\x8a\x72\x5e\x65\x3d\x62\x50\xce\x2a\x38\xd1\x21\xb1\x90\x7e\x92\x98\xb2\x84\xf1\x7c\x0e\xda\xcb\xed\x5d\x5a\x41\x27\x12\x52\x5d\x55\x47\x96\x6e\x38\x94\xa6\x77\xd5\x1f\x44\xe1\x8b\x41\x4b\xd5\x5c\xf5\x2b\x2c\xc6\x33\x3f\x97\x7d\x3c\x56\x78\x48\xd5\xe6\x7e\xbd\x2d\xd7\x0f\xef\xef\xd7\xc5\x02\x2c\x1b\xf2\x29\x5f\xf4\x39\xcf\xb4\x59\xc3\xef\x1f\x3f\x7d\x2e\x16\xc0\x3e\x0c\xe3\xf1\xcf\x98\x71\x4f\x05\xba\x80\x96\x63\x92\x11\x05\xf2\x12\xe8\xa7\x11\xb0\xca\xdb\x35\xb0\xb2\x52\x8c\xb7\xec\x46\x81\x97\xec\x37\x71\x32\xe8\x95\x48\x15\x30\xa6\x98\xa3\xcc\xba\x53\x6e\x73\xea\x79\x6b\xba\xd4\x0d\x3b\xf2\x3a\x24\x52\x0d\x7f\x6e\x96\xf0\x7e\x09\xdb\xed\x43\xfe\xfb\x3a\x41\x1c\xa1\x57\xe3\xf6\x71\x09\x97\xbf\xaf\x45\x3f\x48\x18\x64\xec\x50\x93\xe7\xf0\x53\xa5\xa3\xad\x80\xa9\xaf\x96\x50\x86\x48\x19\x8a\x6f\x75\x36\xe2\xe7\xe2\x8a\x37\x9a\x9b\x30\x16\x0f\x99\xb3\x9b\xde\x26\xc6\xde\xea\x6f\xca\x9c\xf6\x43\xb4\x75\x3e\xf0\xba\xaa\x1a\x14\x2c\x1b\x67\x4d\xe9\x6c\xe5\xce\x9e\xa4\x1a\x2f\x5e\x95\xa9\xd3\x75\x7a\xf1\x89\xa4\x94\xb3\x14\xd9\xa4\xfc\x5d\xa6\x5b\x9a\xe6\xe3\x31\x62\xe8\xb2\xbe\x4f\xc4\xc7\x4e\x92\x0e\x82\x7e\x88\x86\x34\xf7\x01\x13\xcd\x59\xff\x21\xc9\x88\xbc\x7a\x3d\x82\xa6\x02\x22\x9e\x2a\x87\x49\x28\x56\x79\x28\x6d\xab\x74\x1d\x3c\xfb\xe7\x4d\xb9\x2e\x60\xcc\xbb\x0f\x28\x5d\x7d\x99\xd1\x7b\x4f\x52\x86\x43\x01\x97\x52\x26\x33\x7b\xbe\xb1\x71\xda\x63\x34\x1d\x3f\xeb\x91\xa0\x4d\x04\x0b\xe0\x16\x92\xce\x2b\xe9\xc8\x67\x9a\x2f\x75\x03\x27\x40\xd0\x0f\xe9\x01\x3d\x4c\x9e\xb7\x4f\xc1\xcd\x9b\xa0\x9e\x73\x5d\xb7\xa4\x8c\x1b\x39\x7c\x43\xbe\xd7\x49\xd2\xfd\x5b\x94\x96\x2d\xe5\x87\x33\x5d\x84\xf1\x33\xc7\x3a\xf3\x78\x2c\xf5\x52\x12\xca\x34\xa4\xb2\xcc\xe9\x2c\x11\xc1\x93\xe4\x27\x74\xb6\x15\x00\xdf\xd8\x37\x35\x3c\xed\x76\x53\xc5\xba\xd6\x4c\x9e\x86\x88\xf6\xea\xf3\xbf\xa7\xdd\x6e\x09\x9f\xf5\xaf\x2c\xcb\xff\xab\x8c\xa7\x19\xb9\x57\xe9\x24\x92\xfa\x3a\xc0\xf4\xa6\x8e\x7b\xd7\x57\x34\xdf\xee\xc9\xa1\x00\x70\xe8\xb9\xa5\x24\x7b\x1c\xa4\xeb\x63\x0d\x78\x68\x06\xdb\x14\x7f\x07\x00\x00\xff\xff\x94\x73\xb9\x58\x54\x08\x00\x00"

func squeezenet_v10YmlBytes() ([]byte, error) {
	return bindataRead(
		_squeezenet_v10Yml,
		"SqueezeNet_v1.0.yml",
	)
}

func squeezenet_v10Yml() (*asset, error) {
	bytes, err := squeezenet_v10YmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "SqueezeNet_v1.0.yml", size: 2132, mode: os.FileMode(420), modTime: time.Unix(1502677047, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _squeezenet_v11Yml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x55\x4d\x6f\xe3\x36\x10\xbd\xeb\x57\x3c\xc0\x97\x16\x70\x24\xc7\x1b\x64\x17\x3a\x14\x68\x73\xda\x8b\x0f\xdb\x63\xb1\x30\x46\xd4\xc8\x62\x57\xa2\x58\x72\x18\x3b\xfd\xf5\x05\x49\xc9\x72\x90\x74\xa3\x83\x40\xce\xbc\xf9\x7a\x33\x24\x0d\x8d\x5c\xe3\xcf\x7f\x02\xf3\xbf\x7c\x60\xc1\x06\x51\x84\xa9\xc3\xcb\x14\x1c\xc6\xa9\xe5\xa1\xe8\x1c\x8d\x7c\x9e\xdc\x8f\xba\x00\xb2\xc9\x13\x75\x1d\xef\xb1\xc1\x55\x87\x6e\x72\x90\x9e\x67\x1b\xe0\x99\x9d\xd7\x93\xa9\xb1\x2b\xbf\x94\xf7\xaf\xa0\xb3\x0a\x6a\x32\xe2\x48\x1b\x29\xae\xe0\xfb\x04\x5d\x00\xda\x74\x93\x1b\x49\xf2\x1a\x9e\x47\x32\xa2\xd5\x55\x9f\xb5\x45\xf4\x43\xda\xb0\xab\xb1\xc1\x75\xe3\x11\x3c\xb7\x90\x09\x96\x5d\x44\xe6\xd4\x60\x1d\xb7\x5a\x45\x9f\x05\xd6\x6f\x83\x31\x0c\xa2\xed\xc0\xb0\x03\x49\xc4\x7b\x28\x32\x68\x18\xde\xb2\xd2\x9d\xe6\xb6\x00\x68\x6c\x1f\x1f\xea\x64\x79\xb2\xa1\x86\x23\x6d\xdd\xf4\x37\x2b\xa9\x14\xb9\x71\xb8\x53\x89\x9a\x3a\xe1\xee\x94\x0d\x09\xaa\x3e\x86\x9e\x12\xd4\x5a\xf5\xf8\x30\x70\xfd\xb1\xd5\x8c\x9c\xed\x3e\xc8\xe6\x16\xdc\xb2\x57\x4e\x5b\x49\x7c\xff\x56\xe0\xb6\xff\xcf\x91\xff\x9e\x3c\xf6\xe5\xc3\x05\x03\x7b\x0f\x35\x8d\x36\x48\xee\x81\xf4\x64\x22\x66\xb7\xc5\x59\x4b\x3f\x05\x81\x27\xe5\x74\xa7\x95\x36\x27\x90\x52\xc1\x91\x7a\x29\x0b\xc7\x1d\x3b\x36\x8a\x7d\x6c\xc9\xba\x4b\xdd\x20\x1b\x9b\x53\xe1\xcc\x8d\xd7\xc2\x71\xc9\xa2\xca\x12\x39\xb3\x26\xba\xba\x9d\xa4\x3b\xf4\x22\xd6\xd7\x55\x75\xd2\xd2\x87\xa6\x54\xd3\x58\xe5\xc2\xaa\x84\xf1\x95\x38\xe6\x6a\x24\x2f\xec\x2a\x9f\xcb\x31\x2c\xaf\x6c\xc9\x5d\xf4\x73\x39\xb9\x53\x45\x8d\xaf\xee\x1f\x77\xfb\x72\xf7\xf9\xd3\xe3\xae\xd8\x60\xd0\x8a\x8d\x4f\x63\xbf\xc6\x9d\x85\x35\xfe\xf8\xfd\xeb\xb7\x62\x03\x6d\x6c\x90\x54\xc0\x8a\xc9\xb2\xd8\xac\x0d\x3a\xed\xbc\x64\x14\xe4\xc5\xf2\x9b\x03\x71\x97\xc4\x35\xf4\x48\x27\x2e\xf2\xcc\xdd\xf4\x62\x89\x7e\xe3\x27\x81\x5e\xb5\x2b\x02\x72\x88\xd5\x8b\xa5\x78\xb0\x84\x5d\xe2\x3a\x85\x5e\x45\xf3\x88\xb7\x7a\x64\x13\x8f\x8c\xaf\xf1\xd7\xfd\x16\x9f\xb6\xd8\xef\x3f\xa7\xdf\xf7\x19\x32\x32\x99\xa8\xdc\x7f\xd9\x62\xf9\x7d\x2f\xa6\x20\x36\x48\xae\x30\x06\x4f\xee\xe7\x4c\xb3\xae\xc0\x5c\x57\xc7\x24\xc1\x71\x82\xd2\x7b\x95\x65\xfc\x9a\x5c\xf1\x4e\x71\x33\x66\xa0\x26\x71\x76\x53\xdb\xcc\xd8\x7b\xf5\xcd\x91\xfd\x31\xb8\xa1\x4e\x0d\xaf\xab\xaa\x25\xa1\xb2\x1d\x07\x55\x8e\x43\x35\x5e\x0c\xcb\x32\x2c\x89\xba\xb8\xf7\x2f\xc6\xb3\x94\x72\x91\x22\xa9\x22\x7f\xcb\x59\xf7\xf3\x6d\x71\x72\x64\x7b\x90\x69\x71\x66\x7d\xea\xc5\xc3\xb1\x9f\x82\x53\x1c\x63\x37\xe4\x79\x8d\xfa\xd3\x11\x75\x74\x7e\x77\x42\x53\x80\xa3\x25\xe9\xeb\xe5\x6a\x3a\x1a\x96\xd2\x36\x05\x96\x98\xb3\x9a\x2f\xac\x56\x9d\xf6\x47\x72\xaa\xd7\xcf\x91\x7b\x1a\x3c\x63\x03\xdd\xc1\xb3\x6c\x23\x95\x26\xf1\xb9\x24\x08\xed\x41\x88\x0b\x99\x40\x06\xb3\xe5\xed\x0d\x78\x73\x15\x46\xcb\x35\xaf\xdb\xea\xb3\x20\xb9\x6f\xd9\x4c\xc2\x71\xfd\x3f\x5e\x3a\x3d\x70\x7a\x2f\xfc\x32\x01\x6f\xc9\x8c\xd7\x88\xce\xa9\x2e\x29\x91\x88\xd3\x4d\x90\x7c\x77\xf0\x45\x1c\xc1\xb0\xa4\x97\x63\xd5\x15\xc0\x0f\x6d\xda\x1a\x4f\x87\xc3\x9c\x71\xdc\xc7\x48\x86\x83\xa3\xe1\x6a\xf3\xcb\xd3\xe1\xb0\xc5\xb7\xf8\x2b\xcb\xf2\xd7\x38\xaf\xf1\xd1\xd1\xe6\x74\x8c\x33\xe2\x59\x6a\x7c\x8d\x23\x91\x1f\xc0\x59\x76\x7d\x3c\xd2\x31\x9e\x0d\x0a\x60\x24\xa3\x3b\xf6\x72\xa4\x20\xfd\xe4\x6a\x50\xd3\x86\xa1\x2d\xfe\x0b\x00\x00\xff\xff\xaf\x29\xec\xb0\x4b\x07\x00\x00"

func squeezenet_v11YmlBytes() ([]byte, error) {
	return bindataRead(
		_squeezenet_v11Yml,
		"SqueezeNet_v1.1.yml",
	)
}

func squeezenet_v11Yml() (*asset, error) {
	bytes, err := squeezenet_v11YmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "SqueezeNet_v1.1.yml", size: 1867, mode: os.FileMode(420), modTime: time.Unix(1502686994, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"BVLC-AlexNet.yml": bvlcAlexnetYml,
	"BVLC-GoogLeNet.yml": bvlcGooglenetYml,
	"BVLC-Reference-CaffeNet.yml": bvlcReferenceCaffenetYml,
	"BVLC-Reference-RCNN-ILSVRC13.yml": bvlcReferenceRcnnIlsvrc13Yml,
	"SqueezeNet_v1.0.yml": squeezenet_v10Yml,
	"SqueezeNet_v1.1.yml": squeezenet_v11Yml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"BVLC-AlexNet.yml": &bintree{bvlcAlexnetYml, map[string]*bintree{}},
	"BVLC-GoogLeNet.yml": &bintree{bvlcGooglenetYml, map[string]*bintree{}},
	"BVLC-Reference-CaffeNet.yml": &bintree{bvlcReferenceCaffenetYml, map[string]*bintree{}},
	"BVLC-Reference-RCNN-ILSVRC13.yml": &bintree{bvlcReferenceRcnnIlsvrc13Yml, map[string]*bintree{}},
	"SqueezeNet_v1.0.yml": &bintree{squeezenet_v10Yml, map[string]*bintree{}},
	"SqueezeNet_v1.1.yml": &bintree{squeezenet_v11Yml, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

